[{"C:\\Users\\ad\\Desktop\\wnc-fe\\src\\index.js":"1","C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\admin\\store.js":"2","C:\\Users\\ad\\Desktop\\wnc-fe\\src\\App.js":"3","C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\admin\\serviceWorker.js":"4","C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\admin\\polyfill.js":"5","C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\admin\\assets\\icons\\index.js":"6","C:\\Users\\ad\\Desktop\\wnc-fe\\src\\views\\signup.js":"7","C:\\Users\\ad\\Desktop\\wnc-fe\\src\\views\\onlineAcademy.js":"8","C:\\Users\\ad\\Desktop\\wnc-fe\\src\\views\\login.js":"9","C:\\Users\\ad\\Desktop\\wnc-fe\\src\\views\\admin.js":"10","C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\admin\\assets\\icons\\logo.js":"11","C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\HomeFooter.js":"12","C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\admin\\assets\\icons\\sygnet.js":"13","C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\admin\\assets\\icons\\logo-negative.js":"14","C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\Header.js":"15","C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\HomeContent.js":"16","C:\\Users\\ad\\Desktop\\wnc-fe\\src\\utils.js":"17","C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\admin\\containers\\TheLayout.js":"18","C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\admin\\views\\pages\\page404\\Page404.js":"19","C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\admin\\views\\pages\\page500\\Page500.js":"20","C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\footer\\footer.js":"21","C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\header\\headerPopup.js":"22","C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\homeContent\\fillerDiv.js":"23","C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\homeContent\\trustedCompanies.js":"24","C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\header\\headerPrimary.js":"25","C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\homeContent\\adImage.js":"26","C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\homeContent\\becomeInstructor.js":"27","C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\homeContent\\udemyForBusiness.js":"28","C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\homeContent\\videoAdDiv.js":"29","C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\homeContent\\featureDiv\\featureDiv1.js":"30","C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\homeContent\\recommendations\\recommendations.js":"31","C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\homeContent\\featureDiv\\featureDiv2.js":"32","C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\homeContent\\topCategories\\topCategories.js":"33","C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\admin\\containers\\index.js":"34","C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\admin\\containers\\TheSidebar.js":"35","C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\admin\\containers\\TheFooter.js":"36","C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\admin\\containers\\TheHeaderDropdown.js":"37","C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\admin\\containers\\TheContent.js":"38","C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\admin\\containers\\TheHeader.js":"39","C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\homeContent\\topCategories\\categoryCard.js":"40","C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\homeContent\\featureDiv\\featureCard.js":"41","C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\homeContent\\recommendations\\recommendedVideos.js":"42","C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\homeContent\\recommendations\\videoCard.js":"43","C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\admin\\containers\\_nav.js":"44","C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\admin\\routes.js":"45","C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\admin\\views\\users\\Users.js":"46","C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\admin\\views\\courses\\Course.js":"47","C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\admin\\views\\user\\User.js":"48","C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\admin\\views\\categories\\Category.js":"49","C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\admin\\views\\widgets\\Widgets.js":"50","C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\admin\\views\\dashboard\\Dashboard.js":"51","C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\admin\\views\\charts\\Charts.js":"52","C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\admin\\views\\users\\UsersData.js":"53","C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\admin\\views\\theme\\typography\\Typography.js":"54","C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\admin\\views\\notifications\\badges\\Badges.js":"55","C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\admin\\views\\notifications\\modals\\Modals.js":"56","C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\admin\\views\\theme\\colors\\Colors.js":"57","C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\admin\\views\\notifications\\alerts\\Alerts.js":"58","C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\admin\\views\\notifications\\toaster\\Toaster.js":"59","C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\admin\\views\\icons\\brands\\Brands.js":"60","C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\admin\\views\\icons\\flags\\Flags.js":"61","C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\admin\\views\\icons\\coreui-icons\\CoreUIIcons.js":"62","C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\admin\\views\\buttons\\button-groups\\ButtonGroups.js":"63","C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\admin\\views\\buttons\\buttons\\Buttons.js":"64","C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\admin\\views\\buttons\\button-dropdowns\\ButtonDropdowns.js":"65","C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\admin\\views\\buttons\\brand-buttons\\BrandButtons.js":"66","C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\admin\\views\\base\\tooltips\\Tooltips.js":"67","C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\admin\\views\\base\\progress-bar\\ProgressBar.js":"68","C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\admin\\views\\base\\tabs\\Tabs.js":"69","C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\admin\\views\\base\\switches\\Switches.js":"70","C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\admin\\views\\base\\paginations\\Pagnations.js":"71","C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\admin\\views\\base\\navs\\Navs.js":"72","C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\admin\\views\\base\\navbars\\Navbars.js":"73","C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\admin\\views\\base\\popovers\\Popovers.js":"74","C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\admin\\views\\base\\list-groups\\ListGroups.js":"75","C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\admin\\views\\base\\collapses\\Collapses.js":"76","C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\admin\\views\\base\\forms\\BasicForms.js":"77","C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\admin\\views\\base\\jumbotrons\\Jumbotrons.js":"78","C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\admin\\views\\base\\breadcrumbs\\Breadcrumbs.js":"79","C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\admin\\views\\base\\carousels\\Carousels.js":"80","C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\admin\\views\\base\\tables\\Tables.js":"81","C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\admin\\views\\base\\cards\\Cards.js":"82","C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\admin\\views\\widgets\\WidgetsDropdown.js":"83","C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\admin\\views\\widgets\\WidgetsBrand.js":"84","C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\admin\\views\\charts\\MainChartExample.js":"85","C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\admin\\categoryContext.js":"86","C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\admin\\views\\charts\\ChartBarSimple.js":"87","C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\admin\\views\\charts\\ChartLineSimple.js":"88","C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\admin\\categoryReducer.js":"89","C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\admin\\userContext.js":"90","C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\admin\\userReducer.js":"91","C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\admin\\reusable\\index.js":"92","C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\admin\\courseReducer.js":"93","C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\admin\\courseContext.js":"94","C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\admin\\reusable\\DocsLink.js":"95","C:\\Users\\ad\\Desktop\\wnc-fe\\src\\onlineAcademyAppContext.js":"96","C:\\Users\\ad\\Desktop\\wnc-fe\\src\\onlineAcademyReducer.js":"97"},{"size":924,"mtime":1615600011965,"results":"98","hashOfConfig":"99"},{"size":340,"mtime":1615600011940,"results":"100","hashOfConfig":"99"},{"size":1339,"mtime":1615831056065,"results":"101","hashOfConfig":"99"},{"size":4813,"mtime":1615600011940,"results":"102","hashOfConfig":"99"},{"size":1958,"mtime":1615600011937,"results":"103","hashOfConfig":"99"},{"size":4074,"mtime":1615600011933,"results":"104","hashOfConfig":"99"},{"size":7852,"mtime":1615632576922,"results":"105","hashOfConfig":"99"},{"size":823,"mtime":1615600011967,"results":"106","hashOfConfig":"99"},{"size":2796,"mtime":1615827326384,"results":"107","hashOfConfig":"99"},{"size":1566,"mtime":1615600011966,"results":"108","hashOfConfig":"99"},{"size":6949,"mtime":1615600011933,"results":"109","hashOfConfig":"99"},{"size":214,"mtime":1613614466033,"results":"110","hashOfConfig":"99"},{"size":987,"mtime":1615600011933,"results":"111","hashOfConfig":"99"},{"size":2923,"mtime":1615600011933,"results":"112","hashOfConfig":"99"},{"size":371,"mtime":1615823593533,"results":"113","hashOfConfig":"99"},{"size":1181,"mtime":1615600011931,"results":"114","hashOfConfig":"99"},{"size":1129,"mtime":1615827291159,"results":"115","hashOfConfig":"99"},{"size":438,"mtime":1615600011935,"results":"116","hashOfConfig":"99"},{"size":1338,"mtime":1615600011959,"results":"117","hashOfConfig":"99"},{"size":1357,"mtime":1615600011960,"results":"118","hashOfConfig":"99"},{"size":1230,"mtime":1613614466034,"results":"119","hashOfConfig":"99"},{"size":808,"mtime":1613614466035,"results":"120","hashOfConfig":"99"},{"size":1337,"mtime":1615632576920,"results":"121","hashOfConfig":"99"},{"size":1244,"mtime":1613614466047,"results":"122","hashOfConfig":"99"},{"size":2128,"mtime":1615831225177,"results":"123","hashOfConfig":"99"},{"size":983,"mtime":1613614466037,"results":"124","hashOfConfig":"99"},{"size":849,"mtime":1613614466038,"results":"125","hashOfConfig":"99"},{"size":754,"mtime":1613614466048,"results":"126","hashOfConfig":"99"},{"size":912,"mtime":1613614466049,"results":"127","hashOfConfig":"99"},{"size":912,"mtime":1613614466040,"results":"128","hashOfConfig":"99"},{"size":572,"mtime":1613614466043,"results":"129","hashOfConfig":"99"},{"size":1024,"mtime":1613614466041,"results":"130","hashOfConfig":"99"},{"size":1851,"mtime":1613614466047,"results":"131","hashOfConfig":"99"},{"size":350,"mtime":1615600011936,"results":"132","hashOfConfig":"99"},{"size":1377,"mtime":1615600011935,"results":"133","hashOfConfig":"99"},{"size":588,"mtime":1615600011934,"results":"134","hashOfConfig":"99"},{"size":919,"mtime":1615600011935,"results":"135","hashOfConfig":"99"},{"size":1141,"mtime":1615600011934,"results":"136","hashOfConfig":"99"},{"size":1877,"mtime":1615600011935,"results":"137","hashOfConfig":"99"},{"size":373,"mtime":1613614466046,"results":"138","hashOfConfig":"99"},{"size":351,"mtime":1613614466039,"results":"139","hashOfConfig":"99"},{"size":1941,"mtime":1613614466044,"results":"140","hashOfConfig":"99"},{"size":949,"mtime":1613614466045,"results":"141","hashOfConfig":"99"},{"size":597,"mtime":1615822098893,"results":"142","hashOfConfig":"99"},{"size":5968,"mtime":1615822098895,"results":"143","hashOfConfig":"99"},{"size":2218,"mtime":1615600011963,"results":"144","hashOfConfig":"99"},{"size":31290,"mtime":1615822098897,"results":"145","hashOfConfig":"99"},{"size":19413,"mtime":1615822098898,"results":"146","hashOfConfig":"99"},{"size":15736,"mtime":1615822098897,"results":"147","hashOfConfig":"99"},{"size":12671,"mtime":1615600011963,"results":"148","hashOfConfig":"99"},{"size":24416,"mtime":1615600011954,"results":"149","hashOfConfig":"99"},{"size":5996,"mtime":1615600011954,"results":"150","hashOfConfig":"99"},{"size":2471,"mtime":1615600011963,"results":"151","hashOfConfig":"99"},{"size":7183,"mtime":1615600011961,"results":"152","hashOfConfig":"99"},{"size":3702,"mtime":1615600011957,"results":"153","hashOfConfig":"99"},{"size":11241,"mtime":1615600011958,"results":"154","hashOfConfig":"99"},{"size":3818,"mtime":1615600011961,"results":"155","hashOfConfig":"99"},{"size":6092,"mtime":1615600011957,"results":"156","hashOfConfig":"99"},{"size":5518,"mtime":1615600011958,"results":"157","hashOfConfig":"99"},{"size":1004,"mtime":1615600011955,"results":"158","hashOfConfig":"99"},{"size":618,"mtime":1615600011956,"results":"159","hashOfConfig":"99"},{"size":634,"mtime":1615600011955,"results":"160","hashOfConfig":"99"},{"size":6371,"mtime":1615600011951,"results":"161","hashOfConfig":"99"},{"size":33897,"mtime":1615600011952,"results":"162","hashOfConfig":"99"},{"size":16919,"mtime":1615600011951,"results":"163","hashOfConfig":"99"},{"size":15568,"mtime":1615600011950,"results":"164","hashOfConfig":"99"},{"size":2821,"mtime":1615600011950,"results":"165","hashOfConfig":"99"},{"size":3074,"mtime":1615600011948,"results":"166","hashOfConfig":"99"},{"size":5813,"mtime":1615600011949,"results":"167","hashOfConfig":"99"},{"size":25150,"mtime":1615600011948,"results":"168","hashOfConfig":"99"},{"size":2264,"mtime":1615600011947,"results":"169","hashOfConfig":"99"},{"size":9738,"mtime":1615600011946,"results":"170","hashOfConfig":"99"},{"size":5982,"mtime":1615600011946,"results":"171","hashOfConfig":"99"},{"size":3016,"mtime":1615600011947,"results":"172","hashOfConfig":"99"},{"size":13140,"mtime":1615600011945,"results":"173","hashOfConfig":"99"},{"size":9486,"mtime":1615600011943,"results":"174","hashOfConfig":"99"},{"size":52744,"mtime":1615600011944,"results":"175","hashOfConfig":"99"},{"size":2161,"mtime":1615600011945,"results":"176","hashOfConfig":"99"},{"size":1797,"mtime":1615600011941,"results":"177","hashOfConfig":"99"},{"size":7022,"mtime":1615600011942,"results":"178","hashOfConfig":"99"},{"size":5267,"mtime":1615600011949,"results":"179","hashOfConfig":"99"},{"size":18602,"mtime":1615600011942,"results":"180","hashOfConfig":"99"},{"size":4922,"mtime":1615600011964,"results":"181","hashOfConfig":"99"},{"size":4208,"mtime":1615600011964,"results":"182","hashOfConfig":"99"},{"size":2587,"mtime":1615600011954,"results":"183","hashOfConfig":"99"},{"size":145,"mtime":1615822098892,"results":"184","hashOfConfig":"99"},{"size":1620,"mtime":1615600011953,"results":"185","hashOfConfig":"99"},{"size":3446,"mtime":1615600011953,"results":"186","hashOfConfig":"99"},{"size":571,"mtime":1615822098893,"results":"187","hashOfConfig":"99"},{"size":145,"mtime":1615822098895,"results":"188","hashOfConfig":"99"},{"size":571,"mtime":1615822098896,"results":"189","hashOfConfig":"99"},{"size":60,"mtime":1615600011938,"results":"190","hashOfConfig":"99"},{"size":571,"mtime":1615822098894,"results":"191","hashOfConfig":"99"},{"size":145,"mtime":1615822098894,"results":"192","hashOfConfig":"99"},{"size":608,"mtime":1615600011937,"results":"193","hashOfConfig":"99"},{"size":145,"mtime":1615600011965,"results":"194","hashOfConfig":"99"},{"size":759,"mtime":1615632576920,"results":"195","hashOfConfig":"99"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},"5yfojp",{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"198"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"198"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"229","messages":"230","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"198"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"246","usedDeprecatedRules":"198"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"275","usedDeprecatedRules":"198"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"280","usedDeprecatedRules":"198"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"291","usedDeprecatedRules":"198"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"294","usedDeprecatedRules":"198"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"299","usedDeprecatedRules":"198"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"302","usedDeprecatedRules":"198"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"305","usedDeprecatedRules":"198"},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"346","messages":"347","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"358","messages":"359","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"360","messages":"361","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"362","messages":"363","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"364","messages":"365","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"366","messages":"367","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"368","messages":"369","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"370","messages":"371","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"372","messages":"373","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"374","messages":"375","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"376","messages":"377","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"378","messages":"379","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"380","messages":"381","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"382","messages":"383","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"384","messages":"385","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"386","messages":"387","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"388","messages":"389","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"390","messages":"391","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"392","messages":"393","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"394","messages":"395","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"396","messages":"397","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"398","messages":"399","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"198"},{"filePath":"400","messages":"401","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"402","usedDeprecatedRules":"198"},"C:\\Users\\ad\\Desktop\\wnc-fe\\src\\index.js",[],["403","404"],"C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\admin\\store.js",[],"C:\\Users\\ad\\Desktop\\wnc-fe\\src\\App.js",[],"C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\admin\\serviceWorker.js",[],"C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\admin\\polyfill.js",[],"C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\admin\\assets\\icons\\index.js",[],"C:\\Users\\ad\\Desktop\\wnc-fe\\src\\views\\signup.js",["405","406","407","408","409","410","411"],"import React, { useState } from 'react'\r\nimport { useForm } from 'react-hook-form';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport { axiosInstance, parseJwt } from '../utils';\r\nimport { Link } from 'react-router-dom';\r\nimport Popup from \"reactjs-popup\";\r\nimport swal from 'sweetalert';\r\nimport {\r\n    Container,\r\n    Row,\r\n    Col,\r\n    Card,\r\n    Form,\r\n    Button\r\n} from 'react-bootstrap';\r\n\r\nexport default function Signup(props) {\r\n    const { register, handleSubmit, watch, errors } = useForm();\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n    const { from } = location.state || { from: { pathname: '/' } };\r\n    const [open, setOpen] = useState(false);\r\n    const [account, setAccount] = useState();\r\n    const onSubmit = async function (data) {\r\n        if (data.password != null && data.password === data.confirmPassword) {\r\n            try {\r\n                data.type = parseInt(data.type);\r\n                delete data.confirmPassword;\r\n                const res = await axiosInstance.post('/users', data);\r\n                if (res.status === 201) {\r\n                    setOpen(true);\r\n                    const res = await axiosInstance.post('/auth', data);\r\n                    if (res.data.authenticated) {\r\n                        setAccount(res.data);\r\n                        localStorage.account_accessToken = res.data.accessToken;\r\n                        localStorage.account_ID = parseJwt(res.data.accessToken).userId;\r\n                        localStorage.account_email = data.email;\r\n                        //axiosInstance.defaults.headers.post['x-access-token'] = res.data.accessToken;\r\n                    }\r\n                    else {\r\n                        alert('Invalid login.');\r\n                    }\r\n                } else if (res.status === 400) {\r\n                    alert(res.message);\r\n                } else {\r\n                    alert('Invalid login.');\r\n                }\r\n            } catch (err) {\r\n                console.log(err.response.data);\r\n            }\r\n        }\r\n    }\r\n    const onSubmitOTPConfirm = async function (data) {\r\n        if (data.otp != null) {\r\n            try {\r\n                console.log(data);\r\n                var acc = {otp:data.otp};\r\n                console.log(acc);\r\n                const res = await axiosInstance.post('/users/otp/validate', acc, {headers: {'x-access-token': localStorage.account_accessToken}});\r\n                if (res.status === 200) {\r\n                    swal({\r\n                        title: \"Account is active\",\r\n                        text: \"You can purchase course\",\r\n                        icon: \"success\",\r\n                        button: \"Go Home\"\r\n                    }).then((value) => {\r\n                        if (value) {\r\n                            cancelButton_Clicked();\r\n                        }\r\n                    });\r\n                } else {\r\n                    swal({\r\n                        title: \"Invalid Code\",\r\n                        text: \"Please try again\",\r\n                        icon: \"warning\",\r\n                        button: \"OK\",\r\n                        dangerMode: false,\r\n                        timer: 1000\r\n                    }).then((value) => {\r\n                        if (value) {\r\n                            setOpen(true);\r\n                        }\r\n                    });\r\n                }\r\n            } catch (err) {\r\n                console.log(err.response.data);\r\n                swal({\r\n                    title: \"Invalid Code\",\r\n                    text: \"Please try again\",\r\n                    icon: \"warning\",\r\n                    buttons:false,\r\n                    timer:1000\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    const cancelButton_Clicked = function () {\r\n        history.push(\"/home\");\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Row>\r\n                {/* <Col><Button variant=\"danger\" size=\"lg\" onClick={cancelButton_Clicked}>Back</Button></Col> */}\r\n                <Col></Col>\r\n                <Col xs={6} className=\"mt-4\">\r\n                    <Form onSubmit={handleSubmit(onSubmit)}>\r\n                        <Card>\r\n                            <Card.Body>\r\n                                <Card.Title as=\"h3\"><center>Sign Up</center></Card.Title>\r\n                                <hr></hr>\r\n                                <Form.Group controlId=\"formBasicFullName\">\r\n                                    <Form.Label>Fullname</Form.Label>\r\n                                    <Form.Control type=\"text\" name=\"fullname\" placeholder=\"Enter fullname\" ref={register({ required: true })} autoFocus />\r\n                                </Form.Group>\r\n\r\n                                <Form.Group controlId=\"formBasicEmail\">\r\n                                    <Form.Label>Email</Form.Label>\r\n                                    <Form.Control type=\"email\" name=\"email\" placeholder=\"Enter email\" ref={register({ required: true })} />\r\n                                </Form.Group>\r\n\r\n                                <Form.Group controlId=\"formBasicPassword\">\r\n                                    <Form.Label>Password</Form.Label>\r\n                                    <Form.Control type=\"password\" name=\"password\" placeholder=\"Password\" ref={register({ required: true })} />\r\n                                </Form.Group>\r\n\r\n                                <Form.Group controlId=\"formBasicConfirmPassword\">\r\n                                    <Form.Label>Confirm Password</Form.Label>\r\n                                    <Form.Control type=\"password\" name=\"confirmPassword\" placeholder=\"Confirm Password\" ref={register({ required: true })} />\r\n                                </Form.Group>\r\n\r\n                                <Form.Group controlId=\"formBasicType\">\r\n                                    <Form.Label>Account Type</Form.Label>\r\n                                    <Form.Control as=\"select\" name=\"type\" ref={register({ required: true })} >\r\n                                        <option value=\"1\">Student</option>\r\n                                        <option value=\"2\">Teacher</option>\r\n                                    </Form.Control>\r\n                                </Form.Group>      \r\n                            </Card.Body>\r\n                            <Card.Footer>\r\n                                <Button className=\"float-right py-2\" variant=\"primary\" type=\"submit\">Sign up</Button>\r\n                                <Button className=\"float-right mr-3 py-2\" variant=\"danger\" onClick={cancelButton_Clicked}>Cancel</Button>\r\n                            </Card.Footer>\r\n                        </Card>\r\n                    </Form>\r\n                </Col>\r\n                <Col></Col>\r\n            </Row>\r\n            <Row>\r\n                <Col>\r\n                    <Popup open={open} position=\"right center\">\r\n                        <div>\r\n                            <a className=\"close\" onClick={() => setOpen(false)}></a>\r\n                            <Form onSubmit={handleSubmit(onSubmitOTPConfirm)}>\r\n                                <Form.Group controlId=\"formBasicOTP\">\r\n                                    <Form.Label>Please confirm code to active account</Form.Label>\r\n                                    <Form.Control type=\"text\" name=\"otp\" placeholder=\"Enter Confirm Code\" ref={register({ required: true })} autoFocus />\r\n                                </Form.Group>\r\n                                <Button variant=\"primary\" type=\"submit\">Confirm</Button>\r\n                                <Button variant=\"secondary\" onClick={cancelButton_Clicked}>Later</Button>\r\n                            </Form>\r\n                        </div>\r\n                    </Popup>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}","C:\\Users\\ad\\Desktop\\wnc-fe\\src\\views\\onlineAcademy.js",["412","413"],"import React, { useEffect, useReducer } from 'react'\r\nimport Header from \"../components/Header\";\r\nimport HomeContent from \"../components/HomeContent\";\r\nimport HomeFooter from \"../components/HomeFooter\";\r\nfunction onlineAcademy() {\r\n    return (\r\n        <div>\r\n            <Header />\r\n            {/* <HeaderPopup />\r\n            <HeaderPrimary /> */}\r\n            <HomeContent />\r\n            {/*    \r\n            <AdImage />\r\n            <Feature1 />\r\n            <Recommendations />\r\n            <Feature2 />\r\n            <FillerDiv />\r\n            <TopCategories />\r\n            <BecomeInstructor />\r\n            <TrustedCompanies />\r\n            <UdemyForBusiness />\r\n            <VideoAdDiv /> */}\r\n            <HomeFooter />\r\n            {/* <Footer /> */}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default onlineAcademy;","C:\\Users\\ad\\Desktop\\wnc-fe\\src\\views\\login.js",["414","415","416","417","418","419"],"C:\\Users\\ad\\Desktop\\wnc-fe\\src\\views\\admin.js",[],"C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\admin\\assets\\icons\\logo.js",[],"C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\HomeFooter.js",[],"C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\admin\\assets\\icons\\sygnet.js",[],"C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\admin\\assets\\icons\\logo-negative.js",[],"C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\Header.js",["420"],"C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\HomeContent.js",["421"],"import React from 'react';\r\nimport AdImage from \"../components/homeContent/adImage\";\r\nimport Feature1 from \"../components/homeContent/featureDiv/featureDiv1\";\r\nimport Feature2 from \"../components/homeContent/featureDiv/featureDiv2\";\r\nimport Recommendations from \"../components/homeContent/recommendations/recommendations\";\r\nimport FillerDiv from \"../components/homeContent/fillerDiv\";\r\nimport TopCategories from \"../components/homeContent/topCategories/topCategories\";\r\nimport BecomeInstructor from \"../components/homeContent/becomeInstructor\";\r\nimport TrustedCompanies from \"../components/homeContent/trustedCompanies\";\r\nimport UdemyForBusiness from \"../components/homeContent/udemyForBusiness\";\r\nimport VideoAdDiv from \"../components/homeContent/videoAdDiv\";\r\n\r\nfunction HomeContent() {\r\n    return (\r\n        <div>\r\n            <AdImage />\r\n            <Feature1 />\r\n            <Recommendations />\r\n            <Feature2 />\r\n            <FillerDiv />\r\n            <TopCategories />\r\n            <BecomeInstructor />\r\n            <TrustedCompanies />\r\n            <UdemyForBusiness />\r\n            {/* <VideoAdDiv /> */}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HomeContent;","C:\\Users\\ad\\Desktop\\wnc-fe\\src\\utils.js",[],"C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\admin\\containers\\TheLayout.js",[],"C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\admin\\views\\pages\\page404\\Page404.js",[],"C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\admin\\views\\pages\\page500\\Page500.js",[],"C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\footer\\footer.js",[],"C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\header\\headerPopup.js",[],"C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\homeContent\\fillerDiv.js",["422","423","424"],"import React, { useEffect, useReducer } from \"react\";\r\n// import \"../../components/homeContent/fillerDiv.css\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { axiosInstance, refreshToken } from '../../utils'\r\nimport { Card, Row, Col } from 'react-bootstrap';\r\nimport reducer from '../../onlineAcademyReducer';\r\nimport ApppContext from '../../onlineAcademyAppContext';\r\n\r\nfunction FillerDiv() { \r\n  const initialAppState = {\r\n    query: '',\r\n    items: []\r\n  }\r\n\r\n  const [store, dispatch] = useReducer(reducer, initialAppState);\r\n\r\n  useEffect(function() {\r\n    async function loadCourses() {\r\n      const res = await axiosInstance.get(\"/courses\");\r\n      console.log(res);\r\n      dispatch({\r\n        type: 'loadCourses',\r\n        payload: {\r\n          items: res.data,\r\n          query: ''\r\n        }\r\n      });\r\n    }\r\n    loadCourses();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <ApppContext.Provider value={{store, dispatch}}>\r\n      {store.items.map(item => \r\n      <Card key={item.id}>\r\n        <Card.Body>\r\n          <Card.Title><center>{item.title}</center></Card.Title>\r\n          <Card.Text>{item.descriptionShort}</Card.Text>\r\n        </Card.Body>\r\n      </Card>\r\n      )}\r\n      {/* {\r\n        console.log(store.items)\r\n      } */}\r\n      </ApppContext.Provider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FillerDiv;\r\n","C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\homeContent\\trustedCompanies.js",[],"C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\header\\headerPrimary.js",[],"C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\homeContent\\adImage.js",[],"C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\homeContent\\becomeInstructor.js",[],"C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\homeContent\\udemyForBusiness.js",[],"C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\homeContent\\videoAdDiv.js",[],"C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\homeContent\\featureDiv\\featureDiv1.js",[],"C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\homeContent\\recommendations\\recommendations.js",[],"C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\homeContent\\featureDiv\\featureDiv2.js",[],"C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\homeContent\\topCategories\\topCategories.js",[],"C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\admin\\containers\\index.js",[],"C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\admin\\containers\\TheSidebar.js",[],"C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\admin\\containers\\TheFooter.js",[],"C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\admin\\containers\\TheHeaderDropdown.js",["425"],"import React from 'react'\r\nimport {\r\n  CBadge,\r\n  CDropdown,\r\n  CDropdownItem,\r\n  CDropdownMenu,\r\n  CDropdownToggle,\r\n  CImg\r\n} from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\n\r\nconst TheHeaderDropdown = () => {\r\n  return (\r\n    <CDropdown\r\n      inNav\r\n      className=\"c-header-nav-items mx-2\"\r\n      direction=\"down\"\r\n    >\r\n      <CDropdownToggle className=\"c-header-nav-link\" caret={false}>\r\n        <div className=\"c-avatar\">\r\n          <CImg\r\n            src={'avatars/6.jpg'}\r\n            className=\"c-avatar-img\"\r\n            alt=\"admin@bootstrapmaster.com\"\r\n          />\r\n        </div>\r\n      </CDropdownToggle>\r\n      <CDropdownMenu className=\"pt-0\" placement=\"bottom-end\">\r\n        <CDropdownItem>\r\n          <CIcon name=\"cil-lock-locked\" className=\"mfe-2\" />\r\n          Logout\r\n        </CDropdownItem>\r\n      </CDropdownMenu>\r\n    </CDropdown>\r\n  )\r\n}\r\n\r\nexport default TheHeaderDropdown\r\n","C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\admin\\containers\\TheContent.js",[],"C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\admin\\containers\\TheHeader.js",["426"],"import React from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport {\r\n  CHeader,\r\n  CToggler,\r\n  CHeaderBrand,\r\n  CHeaderNav,\r\n  CHeaderNavItem,\r\n  CHeaderNavLink,\r\n  CSubheader,\r\n  CBreadcrumbRouter,\r\n  CLink\r\n} from '@coreui/react'\r\nimport CIcon from '@coreui/icons-react'\r\n\r\n// routes config\r\nimport routes from '../routes'\r\n\r\nimport { \r\n  TheHeaderDropdown,\r\n}  from './index'\r\n\r\nconst TheHeader = () => {\r\n  const dispatch = useDispatch()\r\n  const sidebarShow = useSelector(state => state.sidebarShow)\r\n\r\n  const toggleSidebar = () => {\r\n    const val = [true, 'responsive'].includes(sidebarShow) ? false : 'responsive'\r\n    dispatch({type: 'set', sidebarShow: val})\r\n  }\r\n\r\n  const toggleSidebarMobile = () => {\r\n    const val = [false, 'responsive'].includes(sidebarShow) ? true : 'responsive'\r\n    dispatch({type: 'set', sidebarShow: val})\r\n  }\r\n\r\n  return (\r\n    <CHeader withSubheader>\r\n      <CToggler\r\n        inHeader\r\n        className=\"ml-md-3 d-lg-none\"\r\n        onClick={toggleSidebarMobile}\r\n      />\r\n      <CToggler\r\n        inHeader\r\n        className=\"ml-3 d-md-down-none\"\r\n        onClick={toggleSidebar}\r\n      />\r\n      <CHeaderBrand className=\"mx-auto d-lg-none\" to=\"/\">\r\n        <CIcon name=\"logo\" height=\"48\" alt=\"Logo\"/>\r\n      </CHeaderBrand>\r\n\r\n      <CHeaderNav className=\"d-md-down-none mr-auto\">\r\n        <CHeaderNavItem className=\"px-3\" >\r\n          <CHeaderNavLink to=\"/dashboard\">Dashboard</CHeaderNavLink>\r\n        </CHeaderNavItem>\r\n      </CHeaderNav>\r\n\r\n      <CHeaderNav className=\"px-3\">\r\n        <TheHeaderDropdown/>\r\n      </CHeaderNav>\r\n\r\n      <CSubheader className=\"px-3 justify-content-between\">\r\n        <CBreadcrumbRouter \r\n          className=\"border-0 c-subheader-nav m-0 px-0 px-md-3\" \r\n          routes={routes} \r\n        />\r\n      </CSubheader>\r\n    </CHeader>\r\n  )\r\n}\r\n\r\nexport default TheHeader\r\n","C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\homeContent\\topCategories\\categoryCard.js",[],"C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\homeContent\\featureDiv\\featureCard.js",[],"C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\homeContent\\recommendations\\recommendedVideos.js",[],"C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\homeContent\\recommendations\\videoCard.js",[],"C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\admin\\containers\\_nav.js",["427","428"],"import React from 'react'\r\nimport CIcon from '@coreui/icons-react'\r\n\r\nconst _nav =  [\r\n  {\r\n    _tag: 'CSidebarNavItem',\r\n    name: 'Dashboard',\r\n    to: '/dashboard',\r\n  },\r\n  {\r\n    _tag: 'CSidebarNavTitle',\r\n    _children: ['User Manager']\r\n  },\r\n  {\r\n    _tag: 'CSidebarNavItem',\r\n    name: 'User',\r\n    to: '/user',\r\n  },\r\n  {\r\n    _tag: 'CSidebarNavTitle',\r\n    _children: ['Data Manager']\r\n  },\r\n  {\r\n    _tag: 'CSidebarNavItem',\r\n    name: 'Category',\r\n    to: '/category',\r\n  },\r\n  {\r\n    _tag: 'CSidebarNavItem',\r\n    name: 'Course',\r\n    to: '/course',\r\n  },\r\n]\r\n\r\nexport default _nav\r\n","C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\admin\\routes.js",["429"],"import React from 'react';\r\n\r\nconst Toaster = React.lazy(() => import('./views/notifications/toaster/Toaster'));\r\nconst Tables = React.lazy(() => import('./views/base/tables/Tables'));\r\n\r\nconst Breadcrumbs = React.lazy(() => import('./views/base/breadcrumbs/Breadcrumbs'));\r\nconst Cards = React.lazy(() => import('./views/base/cards/Cards'));\r\nconst Carousels = React.lazy(() => import('./views/base/carousels/Carousels'));\r\nconst Collapses = React.lazy(() => import('./views/base/collapses/Collapses'));\r\nconst BasicForms = React.lazy(() => import('./views/base/forms/BasicForms'));\r\n\r\nconst Jumbotrons = React.lazy(() => import('./views/base/jumbotrons/Jumbotrons'));\r\nconst ListGroups = React.lazy(() => import('./views/base/list-groups/ListGroups'));\r\nconst Navbars = React.lazy(() => import('./views/base/navbars/Navbars'));\r\nconst Navs = React.lazy(() => import('./views/base/navs/Navs'));\r\nconst Paginations = React.lazy(() => import('./views/base/paginations/Pagnations'));\r\nconst Popovers = React.lazy(() => import('./views/base/popovers/Popovers'));\r\nconst ProgressBar = React.lazy(() => import('./views/base/progress-bar/ProgressBar'));\r\nconst Switches = React.lazy(() => import('./views/base/switches/Switches'));\r\n\r\nconst Tabs = React.lazy(() => import('./views/base/tabs/Tabs'));\r\nconst Tooltips = React.lazy(() => import('./views/base/tooltips/Tooltips'));\r\nconst BrandButtons = React.lazy(() => import('./views/buttons/brand-buttons/BrandButtons'));\r\nconst ButtonDropdowns = React.lazy(() => import('./views/buttons/button-dropdowns/ButtonDropdowns'));\r\nconst ButtonGroups = React.lazy(() => import('./views/buttons/button-groups/ButtonGroups'));\r\nconst Buttons = React.lazy(() => import('./views/buttons/buttons/Buttons'));\r\nconst Charts = React.lazy(() => import('./views/charts/Charts'));\r\nconst Dashboard = React.lazy(() => import('./views/dashboard/Dashboard'));\r\nconst CoreUIIcons = React.lazy(() => import('./views/icons/coreui-icons/CoreUIIcons'));\r\nconst Flags = React.lazy(() => import('./views/icons/flags/Flags'));\r\nconst Brands = React.lazy(() => import('./views/icons/brands/Brands'));\r\nconst Alerts = React.lazy(() => import('./views/notifications/alerts/Alerts'));\r\nconst Badges = React.lazy(() => import('./views/notifications/badges/Badges'));\r\nconst Modals = React.lazy(() => import('./views/notifications/modals/Modals'));\r\nconst Colors = React.lazy(() => import('./views/theme/colors/Colors'));\r\nconst Typography = React.lazy(() => import('./views/theme/typography/Typography'));\r\nconst Widgets = React.lazy(() => import('./views/widgets/Widgets'));\r\nconst Users = React.lazy(() => import('./views/users/Users'));\r\n//const User = React.lazy(() => import('./views/users/User'));\r\n\r\nconst User = React.lazy(() => import('./views/user/User'));\r\nconst Category = React.lazy(() => import('./views/categories/Category'));\r\nconst Course = React.lazy(() => import('./views/courses/Course'));\r\n\r\nconst routes = [\r\n\t{ path: '/', exact: true, name: 'Home' },\r\n\t{ path: '/dashboard', name: 'Dashboard', component: Dashboard },\r\n\t{ path: '/theme', name: 'Theme', component: Colors, exact: true },\r\n\t{ path: '/theme/colors', name: 'Colors', component: Colors },\r\n\t{ path: '/theme/typography', name: 'Typography', component: Typography },\r\n\t{ path: '/base', name: 'Base', component: Cards, exact: true },\r\n\t{ path: '/base/breadcrumbs', name: 'Breadcrumbs', component: Breadcrumbs },\r\n\t{ path: '/base/cards', name: 'Cards', component: Cards },\r\n\t{ path: '/base/carousels', name: 'Carousel', component: Carousels },\r\n\t{ path: '/base/collapses', name: 'Collapse', component: Collapses },\r\n\t{ path: '/base/forms', name: 'Forms', component: BasicForms },\r\n\t{ path: '/base/jumbotrons', name: 'Jumbotrons', component: Jumbotrons },\r\n\t{ path: '/base/list-groups', name: 'List Groups', component: ListGroups },\r\n\t{ path: '/base/navbars', name: 'Navbars', component: Navbars },\r\n\t{ path: '/base/navs', name: 'Navs', component: Navs },\r\n\t{ path: '/base/paginations', name: 'Paginations', component: Paginations },\r\n\t{ path: '/base/popovers', name: 'Popovers', component: Popovers },\r\n\t{ path: '/base/progress-bar', name: 'Progress Bar', component: ProgressBar },\r\n\t{ path: '/base/switches', name: 'Switches', component: Switches },\r\n\t{ path: '/base/tables', name: 'Tables', component: Tables },\r\n\t{ path: '/base/tabs', name: 'Tabs', component: Tabs },\r\n\t{ path: '/base/tooltips', name: 'Tooltips', component: Tooltips },\r\n\t{ path: '/buttons', name: 'Buttons', component: Buttons, exact: true },\r\n\t{ path: '/buttons/buttons', name: 'Buttons', component: Buttons },\r\n\t{ path: '/buttons/button-dropdowns', name: 'Dropdowns', component: ButtonDropdowns },\r\n\t{ path: '/buttons/button-groups', name: 'Button Groups', component: ButtonGroups },\r\n\t{ path: '/buttons/brand-buttons', name: 'Brand Buttons', component: BrandButtons },\r\n\t{ path: '/charts', name: 'Charts', component: Charts },\r\n\t{ path: '/icons', exact: true, name: 'Icons', component: CoreUIIcons },\r\n\t{ path: '/icons/coreui-icons', name: 'CoreUI Icons', component: CoreUIIcons },\r\n\t{ path: '/icons/flags', name: 'Flags', component: Flags },\r\n\t{ path: '/icons/brands', name: 'Brands', component: Brands },\r\n\t{ path: '/notifications', name: 'Notifications', component: Alerts, exact: true },\r\n\t{ path: '/notifications/alerts', name: 'Alerts', component: Alerts },\r\n\t{ path: '/notifications/badges', name: 'Badges', component: Badges },\r\n\t{ path: '/notifications/modals', name: 'Modals', component: Modals },\r\n\t{ path: '/notifications/toaster', name: 'Toaster', component: Toaster },\r\n\t{ path: '/widgets', name: 'Widgets', component: Widgets },\r\n\t// { path: '/users', exact: true,  name: 'Users', component: Users },\r\n\t// { path: '/users/:id', exact: true, name: 'User Details', component: User },\r\n\t{ path: '/user', name: 'User', component: User },\r\n\t{ path: '/category', name: 'Category', component: Category },\r\n\t{ path: '/course', name: 'Course', component: Course },\r\n];\r\n\r\nexport default routes;\r\n","C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\admin\\views\\users\\Users.js",[],"C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\admin\\views\\courses\\Course.js",["430","431","432","433","434","435","436","437"],"import React, { lazy, useState, useEffect, useReducer, forwardRef } from 'react'\r\nimport { axiosInstance, parseJwt } from '../../../../utils';\r\nimport { useForm } from 'react-hook-form';\r\nimport { Modal, Button, Form, FormCheck, Col, Row } from 'react-bootstrap';\r\nimport reducer from '../../courseReducer';\r\nimport AppContext from '../../courseContext';\r\nimport swal from 'sweetalert';\r\n\r\nimport MaterialTable from 'material-table';\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport DetailsIcon from '@material-ui/icons/Details';\r\nimport { TrendingUpRounded } from '@material-ui/icons';\r\n\r\n\r\n\r\nexport default function Course(props) {\r\n    const [courseTable, setCourseTable] = useState([]);\r\n    const { register, handleSubmit, watch, errors } = useForm();\r\n    const [showModalDetail, setShowModalDetail] = useState(false);\r\n    const [showModalEdit, setShowModalEdit] = useState(false);\r\n    const [showModalDelete, setShowModalDelete] = useState(false);\r\n    const [showModalNew, setShowModalNew] = useState(false);\r\n    const [disableChangePassword, setDisableChangePassword] = useState(true);\r\n    const handleDisableChangePassword = () => { disableChangePassword ? setDisableChangePassword(false) : setDisableChangePassword(true) };\r\n    const [disableChangeStatus, setDisableChangeStatus] = useState(true);\r\n    const handleDisableChangeStatus = () => { disableChangeStatus ? setDisableChangeStatus(false) : setDisableChangeStatus(true) };\r\n    const handleShowModelDetail = () => setShowModalDetail(true);\r\n    const handleCloseModalDetail = () => setShowModalDetail(false);\r\n    const handleShowModelEdit = () => setShowModalEdit(true);\r\n    const handleCloseModalEdit = () => setShowModalEdit(false);\r\n    const handleShowModelDelete = () => setShowModalDelete(true);\r\n    const handleCloseModalDelete = () => setShowModalDelete(false);\r\n    const handleShowModelNew = () => setShowModalNew(true);\r\n    const handleCloseModalNew = () => setShowModalNew(false);\r\n    const initialCategoryData = { query: '', items: [] }\r\n    const [store, dispatch] = useReducer(reducer, initialCategoryData);\r\n    const defaultCourse = { id: null, title: null, descriptionShort: null, descriptionLong:null }\r\n\r\n    useEffect(function () {\r\n        async function loadDataCourse() {\r\n            const res = await axiosInstance.get('/courses', { headers: { 'x-access-token': localStorage.account_accessToken } });\r\n            if (res.status === 200) {\r\n                for (let i in res.data) {\r\n                    let resGetTeacherEmail = await axiosInstance.get('/users/'+ res.data[i].teacherId, { headers: { 'x-access-token': localStorage.account_accessToken } });\r\n                    if (resGetTeacherEmail.status === 200) {\r\n                        res.data[i].teacher = resGetTeacherEmail.data.email;\r\n                    }\r\n                    let resGetCategoryTitle = await axiosInstance.get('/categories/'+ res.data[i].categoryId, { headers: { 'x-access-token': localStorage.account_accessToken } });\r\n                    if (resGetCategoryTitle.status === 200) {\r\n                        res.data[i].category = resGetCategoryTitle.data.title;\r\n                    }\r\n                }\r\n                dispatch({\r\n                    type: 'init',\r\n                    payload: {\r\n                        items: res.data,\r\n                        query: ''\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        loadDataCourse();\r\n    }, []);\r\n    const columns = [\r\n        { title: \"ID\", field: \"id\", filtering: false },\r\n        { title: \"Title\", field: \"title\", filtering: false },\r\n        { title: \"Category Title\", field: \"category\" },\r\n        { title: \"Teacher Email\", field: \"teacher\" },\r\n    ];\r\n\r\n    const tableIcons = {\r\n        Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n        Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n        Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n        Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n        DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n        Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n        Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n        Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n        FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n        LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n        NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n        PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n        ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n        Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n        SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n        ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n        ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\r\n        DetailsIcon: forwardRef((props, ref) => <DetailsIcon {...props} ref={ref} />)\r\n    };\r\n    const reLoadDataCourse = async function () {\r\n        const res = await axiosInstance.get('/courses', { headers: { 'x-access-token': localStorage.account_accessToken } });\r\n        if (res.status === 200) {\r\n            for (let i in res.data) {\r\n                let resGetTeacherEmail = await axiosInstance.get('/users/'+ res.data[i].teacherId, { headers: { 'x-access-token': localStorage.account_accessToken } });\r\n                if (resGetTeacherEmail.status === 200) {\r\n                    res.data[i].teacher = resGetTeacherEmail.data.email;\r\n                }\r\n                let resGetCategoryTitle = await axiosInstance.get('/categories/'+ res.data[i].categoryId, { headers: { 'x-access-token': localStorage.account_accessToken } });\r\n                if (resGetCategoryTitle.status === 200) {\r\n                    res.data[i].category = resGetCategoryTitle.data.title;\r\n                }\r\n            }\r\n            dispatch({\r\n                type: 'init',\r\n                payload: {\r\n                    items: res.data,\r\n                    query: ''\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    const handleDetail = async function (dataRow) {\r\n        setCourseTable(defaultCourse);\r\n        let id = dataRow.id;\r\n        let res = await axiosInstance.get('/courses/' + id, { headers: { 'x-access-token': localStorage.account_accessToken } });\r\n        if (res.status === 200) {\r\n            setCourseTable(res.data);\r\n        }\r\n        handleShowModelDetail();\r\n    }\r\n\r\n    const handleEdit = async function (dataRow) {\r\n        setCourseTable(defaultCourse);\r\n        let id = dataRow.id;\r\n        let res = await axiosInstance.get('/courses/' + id, { headers: { 'x-access-token': localStorage.account_accessToken } });\r\n        if (res.status === 200) {\r\n            setCourseTable(res.data);\r\n        }\r\n        handleShowModelEdit();\r\n    }\r\n\r\n    const handleDelete = async function (dataRow) {\r\n        setCourseTable(defaultCourse);\r\n        let id = dataRow.id;\r\n        let res = await axiosInstance.get('/courses/' + id, { headers: { 'x-access-token': localStorage.account_accessToken } });\r\n        if (res.status === 200) {\r\n            setCourseTable(res.data);\r\n        }\r\n        handleShowModelDelete();\r\n    }\r\n\r\n    const handleNew = async function (dataRow) {\r\n        handleShowModelNew();\r\n    }\r\n\r\n    const onSubmitUpdate = async function (data) {\r\n        try {\r\n            if (data != null && data.id > 0) {\r\n                let id = data.id;\r\n                data.price = parseInt(data.price);\r\n                data.sale = parseInt(data.sale);\r\n                data.categoryId = parseInt(data.categoryId);\r\n                data.teacherId = parseInt(data.teacherId);\r\n                delete data.id;\r\n                let res = await axiosInstance.put('/courses/' + id, data, {\r\n                    headers: { 'x-access-token': localStorage.account_accessToken }\r\n                });\r\n                if (res.status === 200) {\r\n                    reLoadDataCourse();\r\n                    swal({\r\n                        title: \"Course is updated\",\r\n                        text: \"Course ID \" + id + \" updated\",\r\n                        icon: \"success\",\r\n                        button: \"OK\"\r\n                    });\r\n                    handleCloseModalEdit();\r\n                } else {\r\n                    swal({\r\n                        title: \"Failed\",\r\n                        icon: \"danger\",\r\n                        button: \"OK\"\r\n                    });\r\n                }\r\n            } else {\r\n                swal({\r\n                    title: \"Failed\",\r\n                    icon: \"danger\",\r\n                    button: \"OK\"\r\n                });\r\n            }\r\n        } catch (err) {\r\n            console.log(err.response.data);\r\n            swal({\r\n                title: \"Failed\",\r\n                text: err.response.data.message,\r\n                icon: \"danger\",\r\n                button: \"OK\"\r\n            });\r\n        }\r\n    }\r\n\r\n    const onSubmitDelete = async function (data) {\r\n        try {\r\n            if (data != null && data.id > 0) {\r\n                let id = data.id;\r\n                let res = await axiosInstance.delete('/courses/' + id, {\r\n                    headers: { 'x-access-token': localStorage.account_accessToken }\r\n                });\r\n                if (res.status === 200) {\r\n                    reLoadDataCourse();\r\n                    swal({\r\n                        title: \"Course is deleted\",\r\n                        text: \"Course ID \" + id + \" deleted\",\r\n                        icon: \"success\",\r\n                        button: \"OK\"\r\n                    });\r\n                    handleCloseModalDelete();\r\n                } else {\r\n                    swal({\r\n                        title: \"Failed\",\r\n                        icon: \"danger\",\r\n                        button: \"OK\"\r\n                    });\r\n                }\r\n            } else {\r\n                swal({\r\n                    title: \"Failed\",\r\n                    icon: \"danger\",\r\n                    button: \"OK\"\r\n                });\r\n            }\r\n        } catch (err) {\r\n            console.log(err.response.data);\r\n            swal({\r\n                title: \"Failed\",\r\n                icon: \"danger\",\r\n                button: \"OK\"\r\n            });\r\n        }\r\n    }\r\n\r\n    const onSubmitNew = async function (data) {\r\n        try {\r\n            if (data != null) {\r\n                data.price = parseInt(data.price);\r\n                data.sale = parseInt(data.sale);\r\n                data.categoryId = parseInt(data.categoryId);\r\n                data.teacherId = parseInt(data.teacherId);\r\n                let res = await axiosInstance.post('/courses', data, {\r\n                    headers: { 'x-access-token': localStorage.account_accessToken }\r\n                });\r\n                if (res.status === 201) {\r\n                    reLoadDataCourse();\r\n                    swal({\r\n                        title: \"Course is created\",\r\n                        text: \"Course ID \" + res.data.id + \" created\",\r\n                        icon: \"success\",\r\n                        button: \"OK\"\r\n                    });\r\n                    //handleCloseModalNew();\r\n                } else {\r\n                    swal({\r\n                        title: \"Failed\",\r\n                        icon: \"danger\",\r\n                        button: \"OK\"\r\n                    });\r\n                }\r\n            } else {\r\n                swal({\r\n                    title: \"Failed\",\r\n                    icon: \"danger\",\r\n                    button: \"OK\"\r\n                });\r\n            }\r\n        } catch (err) {\r\n            console.log(err.response.data);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <AppContext.Provider value={{ store, dispatch }}>\r\n                <div className=\"container mt-3\">\r\n                    <div className=\"row mt-3\">\r\n                        <div className=\"col-sm-12\">\r\n                            <div className=\"card shadow\">\r\n                                <h3 className=\"card-header d-flex\">\r\n                                    Course List from Academy\r\n            </h3>\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"row\">\r\n                                        <button className=\"btn btn-warning\" onClick={reLoadDataCourse}>Reload</button>\r\n                                        {/* <button className=\"btn btn-primary\" onClick={handleNew}>New</button> */}\r\n                                    </div>\r\n                                    <br></br>\r\n                                    <div style={{ maxWidth: '100%' }}>\r\n                                        <MaterialTable columns={columns} data={store.items} icons={tableIcons} title={null}\r\n                                            actions={[\r\n                                                {\r\n                                                    icon: tableIcons.DetailsIcon,\r\n                                                    tooltip: 'Detail Category',\r\n                                                    onClick: (event, rowData) => handleDetail(rowData)\r\n                                                },\r\n                                                {\r\n                                                    icon: tableIcons.Edit,\r\n                                                    tooltip: 'Modify Category',\r\n                                                    onClick: (event, rowData) => handleEdit(rowData)\r\n                                                },\r\n                                                {\r\n                                                    icon: tableIcons.Delete,\r\n                                                    tooltip: 'Delete Category',\r\n                                                    onClick: (event, rowData) => handleDelete(rowData)\r\n                                                }\r\n                                            ]}\r\n                                            options={{\r\n                                                filtering: true\r\n                                            }}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"card-footer text-muted\">\r\n                                    Footer\r\n          </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <Modal show={showModalDetail} onHide={handleCloseModalDetail}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Detail Course</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <Form>\r\n                            <Row>\r\n                                <Col>\r\n                                    <Form.Group >\r\n                                        <Form.Label>ID</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"id\" value={courseTable.id == null ? \"\" : courseTable.id} readOnly />\r\n                                    </Form.Group>\r\n                                    <Form.Group >\r\n                                        <Form.Label>Title</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"title\" value={courseTable.title == null ? \"\" : courseTable.title} readOnly />\r\n                                    </Form.Group>\r\n                                    <Form.Group >\r\n                                        <Form.Label>Description Short</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"descriptionShort\" value={courseTable.descriptionShort == null ? \"\" : courseTable.descriptionShort} readOnly />\r\n                                    </Form.Group>\r\n                                    <Form.Group >\r\n                                        <Form.Label>Description Long</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"descriptionLong\" value={courseTable.descriptionLong == null ? \"\" : courseTable.descriptionLong} readOnly />\r\n                                    </Form.Group>\r\n                                    <Form.Group >\r\n                                        <Form.Label>Thumbnail</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"thumbnail\" value={courseTable.thumbnail == null ? \"\" : courseTable.thumbnail} readOnly />\r\n                                    </Form.Group>\r\n                                    <Form.Group >\r\n                                        <Form.Label>Price</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"price\" value={courseTable.price == null ? \"\" : courseTable.price} readOnly />\r\n                                    </Form.Group>\r\n                                    <Form.Group >\r\n                                        <Form.Label>Sale</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"sale\" value={courseTable.sale == null ? \"\" : courseTable.sale} readOnly />\r\n                                    </Form.Group>\r\n                                    <Form.Group >\r\n                                        <Form.Label>Review Point</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"reviewPoint\" value={courseTable.reviewPoint == null ? \"\" : courseTable.reviewPoint} readOnly />\r\n                                    </Form.Group>\r\n                                </Col>\r\n                                <Col>\r\n                                    <Form.Group >\r\n                                        <Form.Label>Reviews</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"reviews\" value={courseTable.reviews == null ? \"\" : courseTable.reviews} readOnly />\r\n                                    </Form.Group>\r\n                                    <Form.Group >\r\n                                        <Form.Label>Participants</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"participants\" value={courseTable.participants == null ? \"\" : courseTable.participants} readOnly />\r\n                                    </Form.Group>\r\n                                    <Form.Group >\r\n                                        <Form.Label>Outline</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"outline\" value={courseTable.outline == null ? \"\" : courseTable.outline} readOnly />\r\n                                    </Form.Group>\r\n                                    <Form.Group >\r\n                                        <Form.Label>Teacher ID</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"teacherId\" value={courseTable.teacherId == null ? \"\" : courseTable.teacherId} readOnly />\r\n                                    </Form.Group>\r\n                                    <Form.Group >\r\n                                        <Form.Label>Category ID</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"categoryId\" value={courseTable.categoryId == null ? \"\" : courseTable.categoryId} readOnly />\r\n                                    </Form.Group>\r\n                                    <Form.Group >\r\n                                        <Form.Label>Complete Status</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"isCompleted\" value={courseTable.isCompleted == null ? \"\" : courseTable.isCompleted === 1 ? \"Yes\" : \"No\"} readOnly />\r\n                                    </Form.Group>\r\n                                    <Form.Group >\r\n                                        <Form.Label>Created Date</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"createdDate\" value={courseTable.createdDate == null ? \"\" : courseTable.createdDate} readOnly />\r\n                                    </Form.Group>\r\n                                    <Form.Group >\r\n                                        <Form.Label>Modified Date</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"modifiedDate\" value={courseTable.modifiedDate == null ? \"\" : courseTable.modifiedDate} readOnly />\r\n                                    </Form.Group>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={handleCloseModalDetail}>Close</Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n                <Modal show={showModalEdit} onHide={handleCloseModalEdit}>\r\n                    <Form onSubmit={handleSubmit(onSubmitUpdate)}>\r\n                        <Modal.Header closeButton>\r\n                            <Modal.Title>Update Category</Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                            <Row>\r\n                                <Col>\r\n                                    <Form.Group >\r\n                                        <Form.Label>ID</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"id\" defaultValue={courseTable.id == null ? \"\" : courseTable.id} ref={register({ required: false })} readOnly />\r\n                                    </Form.Group>\r\n                                    <Form.Group >\r\n                                        <Form.Label>Title</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"title\" defaultValue={courseTable.title == null ? \"\" : courseTable.title} ref={register({ required: false })} />\r\n                                    </Form.Group>\r\n                                    <Form.Group >\r\n                                        <Form.Label>Description Short</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"descriptionShort\" defaultValue={courseTable.descriptionShort == null ? \"\" : courseTable.descriptionShort} ref={register({ required: TrendingUpRounded })} />\r\n                                    </Form.Group>\r\n                                    <Form.Group >\r\n                                        <Form.Label>Description Long</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"descriptionLong\" defaultValue={courseTable.descriptionLong == null ? \"\" : courseTable.descriptionLong} ref={register({ required: true })} />\r\n                                    </Form.Group>\r\n                                    <Form.Group >\r\n                                        <Form.Label>Thumbnail</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"thumbnail\" defaultValue={courseTable.thumbnail == null ? \"\" : courseTable.thumbnail} ref={register({ required: false })} />\r\n                                    </Form.Group>\r\n                                </Col>\r\n                                <Col>\r\n                                    <Form.Group >\r\n                                        <Form.Label>Price</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"price\" defaultValue={courseTable.price == null ? \"\" : courseTable.price} ref={register({ required: false })} />\r\n                                    </Form.Group>\r\n                                    <Form.Group >\r\n                                        <Form.Label>Sale</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"sale\" defaultValue={courseTable.sale == null ? \"\" : courseTable.sale} ref={register({ required: false })} />\r\n                                    </Form.Group>\r\n                                    <Form.Group >\r\n                                        <Form.Label>Teacher ID</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"teacherId\" defaultValue={courseTable.teacherId == null ? \"\" : courseTable.teacherId} ref={register({ required: false })} />\r\n                                    </Form.Group>\r\n                                    <Form.Group >\r\n                                        <Form.Label>Category ID</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"categoryId\" defaultValue={courseTable.categoryId == null ? \"\" : courseTable.categoryId} ref={register({ required: false })} />\r\n                                    </Form.Group>\r\n                                </Col>\r\n                            </Row>\r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                            <Button variant=\"primary\" type=\"submit\">Update</Button>\r\n                            <Button variant=\"secondary\" onClick={handleCloseModalEdit}>Close</Button>\r\n                        </Modal.Footer>\r\n                    </Form>\r\n                </Modal>\r\n                <Modal show={showModalDelete} onHide={handleCloseModalDelete}>\r\n                    <Form onSubmit={handleSubmit(onSubmitDelete)}>\r\n                        <Modal.Header closeButton>\r\n                            <Modal.Title>Delete Category</Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                            <Form.Group >\r\n                                <Form.Label>ID</Form.Label>\r\n                                <Form.Control type=\"text\" name=\"id\" defaultValue={courseTable.id == null ? \"\" : courseTable.id} ref={register({ required: false })} readOnly />\r\n                            </Form.Group>\r\n                            <Form.Group >\r\n                                <Form.Label>Title</Form.Label>\r\n                                <Form.Control type=\"text\" name=\"title\" value={courseTable.title == null ? \"\" : courseTable.title} ref={register({ required: false })} readOnly />\r\n                            </Form.Group>\r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                            <Button variant=\"danger\" type=\"submit\">Delete</Button>\r\n                            <Button variant=\"secondary\" onClick={handleCloseModalDelete}>Close</Button>\r\n                        </Modal.Footer>\r\n                    </Form>\r\n                </Modal>\r\n                <Modal show={showModalNew} onHide={handleCloseModalNew}>\r\n                    <Form onSubmit={handleSubmit(onSubmitNew)}>\r\n                        <Modal.Header closeButton>\r\n                            <Modal.Title>New Course</Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                            <Row>\r\n                                <Col>\r\n                                    <Form.Group >\r\n                                        <Form.Label>Title</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"title\" ref={register({ required: false })} />\r\n                                    </Form.Group>\r\n                                    <Form.Group >\r\n                                        <Form.Label>Description Short</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"descriptionShort\" ref={register({ required: false })} />\r\n                                    </Form.Group>\r\n                                    <Form.Group >\r\n                                        <Form.Label>Description Long</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"descriptionLong\" ref={register({ required: false })} />\r\n                                    </Form.Group>\r\n                                    <Form.Group >\r\n                                        <Form.Label>Thumbnail</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"thumbnail\" ref={register({ required: false })} />\r\n                                    </Form.Group>\r\n                                    <Form.Group >\r\n                                        <Form.Label>Price</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"price\" ref={register({ required: false })} />\r\n                                    </Form.Group>\r\n                                </Col>\r\n                                <Col>\r\n                                    <Form.Group >\r\n                                        <Form.Label>Sale</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"sale\" ref={register({ required: false })} />\r\n                                    </Form.Group>\r\n                                    <Form.Group >\r\n                                        <Form.Label>Outline</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"outline\" ref={register({ required: false })} />\r\n                                    </Form.Group>\r\n                                    <Form.Group >\r\n                                        <Form.Label>Teacher ID</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"teacherId\" ref={register({ required: false })} />\r\n                                    </Form.Group>\r\n                                    <Form.Group >\r\n                                        <Form.Label>Category ID</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"categoryId\" ref={register({ required: false })} />\r\n                                    </Form.Group>\r\n                                </Col>\r\n                            </Row>\r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                            <Button variant=\"success\" type=\"submit\">Create</Button>\r\n                            <Button variant=\"secondary\" onClick={handleCloseModalNew}>Close</Button>\r\n                        </Modal.Footer>\r\n                    </Form>\r\n                </Modal>\r\n            </AppContext.Provider>\r\n        </div>\r\n    );\r\n}\r\n","C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\admin\\views\\user\\User.js",["438","439","440","441","442","443","444"],"import React, { lazy, useState, useEffect, useReducer, forwardRef } from 'react'\r\nimport { axiosInstance, parseJwt } from '../../../../utils';\r\nimport { useForm } from 'react-hook-form';\r\nimport { Modal, Button, Form, FormCheck, Col, Row } from 'react-bootstrap';\r\nimport reducer from '../../userReducer';\r\nimport AppContext from '../../userContext';\r\nimport swal from 'sweetalert';\r\n\r\nimport MaterialTable from 'material-table';\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport DetailsIcon from '@material-ui/icons/Details';\r\n\r\n\r\n\r\nexport default function User(props) {\r\n\tconst [userTable, setUserTable] = useState([]);\r\n\tconst { register, handleSubmit, watch, errors } = useForm();\r\n\tconst [showModalDetail, setShowModalDetail] = useState(false);\r\n\tconst [showModalEdit, setShowModalEdit] = useState(false);\r\n\tconst [showModalDelete, setShowModalDelete] = useState(false);\r\n\tconst [showModalNew, setShowModalNew] = useState(false);\r\n\tconst [disableChangePassword, setDisableChangePassword] = useState(true);\r\n\tconst handleDisableChangePassword = () => { disableChangePassword ? setDisableChangePassword(false) : setDisableChangePassword(true) };\r\n\tconst [disableChangeStatus, setDisableChangeStatus] = useState(true);\r\n\tconst handleDisableChangeStatus = () => { disableChangeStatus ? setDisableChangeStatus(false) : setDisableChangeStatus(true) };\r\n\tconst handleShowModelDetail = () => setShowModalDetail(true);\r\n\tconst handleCloseModalDetail = () => setShowModalDetail(false);\r\n\tconst handleShowModelEdit = () => setShowModalEdit(true);\r\n\tconst handleCloseModalEdit = () => setShowModalEdit(false);\r\n\tconst handleShowModelDelete = () => setShowModalDelete(true);\r\n\tconst handleCloseModalDelete = () => setShowModalDelete(false);\r\n\tconst handleShowModelNew = () => setShowModalNew(true);\r\n\tconst handleCloseModalNew = () => setShowModalNew(false);\r\n\tconst initialUserData = {query: '', items: []}\r\n\tconst [store, dispatch] = useReducer(reducer, initialUserData);\r\n\tconst defaulteUser = {id: null, email: null, fullname:null}\r\n\r\n\tuseEffect(function () {\r\n\t\tasync function loadDataUser() {\r\n\t\t\tconst res = await axiosInstance.get('/users', { headers: { 'x-access-token': localStorage.account_accessToken } });\r\n\t\t\tif (res.status === 200) {\r\n\t\t\t\tdispatch({\r\n\t\t\t\t\ttype: 'init',\r\n\t\t\t\t\tpayload: {\r\n\t\t\t\t\t\titems: res.data,\r\n\t\t\t\t\t\tquery: ''\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t\tloadDataUser();\r\n\t}, []);\r\n\tconst columns = [\r\n\t\t{ title: \"ID\", field: \"id\" },\r\n\t\t{ title: \"Fullname\", field: \"fullname\" },\r\n\t\t{ title: \"Email\", field: \"email\" },\r\n\t\t{ title: \"Type\", field: \"type\" }\r\n\t];\r\n\r\n\tconst tableIcons = {\r\n\t\tAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n\t\tCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n\t\tClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n\t\tDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n\t\tDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n\t\tEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n\t\tExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n\t\tFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n\t\tFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n\t\tLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n\t\tNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n\t\tPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n\t\tResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n\t\tSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n\t\tSortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n\t\tThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n\t\tViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\r\n\t\tDetailsIcon: forwardRef((props, ref) => <DetailsIcon {...props} ref={ref} />)\r\n\t};\r\n\tconst reLoadDataUser = async function () {\r\n\t\tconst res = await axiosInstance.get('/users', { headers: { 'x-access-token': localStorage.account_accessToken } });\r\n\t\tif (res.status === 200) {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: 'init',\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\titems: res.data,\r\n\t\t\t\t\tquery: ''\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tconst handleDetail = async function (dataRow) {\r\n\t\tsetUserTable(defaulteUser);\r\n\t\tlet id = dataRow.id;\r\n\t\tlet res = await axiosInstance.get('/users/' + id, { headers: { 'x-access-token': localStorage.account_accessToken } });\r\n\t\tif (res.status === 200) {\r\n\t\t\tsetUserTable(res.data);\r\n\t\t}\r\n\t\thandleShowModelDetail();\r\n\t}\r\n\r\n\tconst handleEdit = async function (dataRow) {\r\n\t\tsetUserTable(defaulteUser);\r\n\t\tlet id = dataRow.id;\r\n\t\tlet res = await axiosInstance.get('/users/' + id, { headers: { 'x-access-token': localStorage.account_accessToken } });\r\n\t\tif (res.status === 200) {\r\n\t\t\tsetUserTable(res.data);\r\n\t\t}\r\n\t\thandleShowModelEdit();\r\n\t}\r\n\r\n\tconst handleDelete = async function (dataRow) {\r\n\t\tsetUserTable(defaulteUser);\r\n\t\tlet id = dataRow.id;\r\n\t\tlet res = await axiosInstance.get('/users/' + id, { headers: { 'x-access-token': localStorage.account_accessToken } });\r\n\t\tif (res.status === 200) {\r\n\t\t\tsetUserTable(res.data);\r\n\t\t}\r\n\t\thandleShowModelDelete();\r\n\t}\r\n\r\n\tconst handleNew = async function (dataRow) {\r\n\t\thandleShowModelNew();\r\n\t}\r\n\r\n\tconst onSubmitUpdateUser = async function (data) {\r\n\t\ttry {\r\n\t\t\tif (data != null && data.id > 0) {\r\n\t\t\t\tlet id = data.id;\r\n\t\t\t\tdata.type = parseInt(data.type);\r\n\t\t\t\tdata.isActive = parseInt(data.isActive);\r\n\t\t\t\tdelete data.id;\r\n\t\t\t\tlet res = await axiosInstance.put('/users/' + id, data, {\r\n\t\t\t\t\theaders: { 'x-access-token': localStorage.account_accessToken }\r\n\t\t\t\t});\r\n\t\t\t\tif (res.status === 200) {\r\n\t\t\t\t\treLoadDataUser();\r\n\t\t\t\t\tswal({\r\n\t\t\t\t\t\ttitle: \"Account is updated\",\r\n\t\t\t\t\t\ttext: \"User ID \" + id + \" updated\",\r\n\t\t\t\t\t\ticon: \"success\",\r\n\t\t\t\t\t\tbutton: \"OK\"\r\n\t\t\t\t\t});\r\n\t\t\t\t\thandleCloseModalEdit();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tswal({\r\n\t\t\t\t\t\ttitle: \"Failed\",\r\n\t\t\t\t\t\ticon: \"danger\",\r\n\t\t\t\t\t\tbutton: \"OK\"\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tswal({\r\n\t\t\t\t\ttitle: \"Failed\",\r\n\t\t\t\t\ticon: \"danger\",\r\n\t\t\t\t\tbutton: \"OK\"\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err.response.data);\r\n\t\t}\r\n\t}\r\n\r\n\tconst onSubmitDeleteUser = async function (data) {\r\n\t\ttry {\r\n\t\t\tif (data != null && data.id > 0) {\r\n\t\t\t\tlet id = data.id;\r\n\t\t\t\tlet res = await axiosInstance.delete('/users/' + id, {\r\n\t\t\t\t\theaders: { 'x-access-token': localStorage.account_accessToken }\r\n\t\t\t\t});\r\n\t\t\t\tif (res.status === 200) {\r\n\t\t\t\t\treLoadDataUser();\r\n\t\t\t\t\tswal({\r\n\t\t\t\t\t\ttitle: \"Account is deleted\",\r\n\t\t\t\t\t\ttext: \"User ID \" + id + \" deleted\",\r\n\t\t\t\t\t\ticon: \"success\",\r\n\t\t\t\t\t\tbutton: \"OK\"\r\n\t\t\t\t\t});\r\n\t\t\t\t\thandleCloseModalDelete();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tswal({\r\n\t\t\t\t\t\ttitle: \"Failed\",\r\n\t\t\t\t\t\ticon: \"danger\",\r\n\t\t\t\t\t\tbutton: \"OK\"\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tswal({\r\n\t\t\t\t\ttitle: \"Failed\",\r\n\t\t\t\t\ticon: \"danger\",\r\n\t\t\t\t\tbutton: \"OK\"\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err.response.data);\r\n\t\t}\r\n\t}\r\n\r\n\tconst onSubmitNewUser = async function (data) {\r\n\t\ttry {\r\n\t\t\tif (data != null) {\r\n\t\t\t\tdata.type = parseInt(data.type);\r\n\t\t\t\tlet res = await axiosInstance.post('/users', data, {\r\n\t\t\t\t\theaders: { 'x-access-token': localStorage.account_accessToken }\r\n\t\t\t\t});\r\n\t\t\t\tif (res.status === 201) {\r\n\t\t\t\t\treLoadDataUser();\r\n\t\t\t\t\tswal({\r\n\t\t\t\t\t\ttitle: \"Account is created\",\r\n\t\t\t\t\t\ttext: \"User ID \" + res.data.id + \" created\",\r\n\t\t\t\t\t\ticon: \"success\",\r\n\t\t\t\t\t\tbutton: \"OK\"\r\n\t\t\t\t\t});\r\n\t\t\t\t\t//handleCloseModalNew();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tswal({\r\n\t\t\t\t\t\ttitle: \"Failed\",\r\n\t\t\t\t\t\ticon: \"danger\",\r\n\t\t\t\t\t\tbutton: \"OK\"\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tswal({\r\n\t\t\t\t\ttitle: \"Failed\",\r\n\t\t\t\t\ticon: \"danger\",\r\n\t\t\t\t\tbutton: \"OK\"\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err.response.data);\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<AppContext.Provider value={{ store, dispatch }}>\r\n\t\t\t\t<div className=\"container mt-3\">\r\n\t\t\t\t\t<div className=\"row mt-3\">\r\n\t\t\t\t\t\t<div className=\"col-sm-12\">\r\n\t\t\t\t\t\t\t<div className=\"card shadow\">\r\n\t\t\t\t\t\t\t\t<h3 className=\"card-header d-flex\">\r\n\t\t\t\t\t\t\t\t\tUser List from Academy\r\n            </h3>\r\n\t\t\t\t\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t\t\t\t<button className=\"btn btn-warning\" onClick={reLoadDataUser}>Reload</button>\r\n\t\t\t\t\t\t\t\t\t\t<button className=\"btn btn-primary\" onClick={handleNew}>New</button>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<br></br>\r\n\t\t\t\t\t\t\t\t\t<div style={{ maxWidth: '100%' }}>\r\n\t\t\t\t\t\t\t\t\t\t<MaterialTable columns={columns} data={store.items} icons={tableIcons} title={null}\r\n\t\t\t\t\t\t\t\t\t\t\tactions={[\r\n\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ticon: tableIcons.DetailsIcon,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttooltip: 'Detail User',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick: (event, rowData) => handleDetail(rowData)\r\n\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ticon: tableIcons.Edit,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttooltip: 'Modify user',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick: (event, rowData) => handleEdit(rowData)\r\n\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ticon: tableIcons.Delete,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttooltip: 'Delete User',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick: (event, rowData) => handleDelete(rowData)\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t]}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"card-footer text-muted\">\r\n\t\t\t\t\t\t\t\t\tFooter\r\n          </div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<Modal show={showModalDetail} onHide={handleCloseModalDetail}>\r\n\t\t\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t\t\t<Modal.Title>Detail User</Modal.Title>\r\n\t\t\t\t\t</Modal.Header>\r\n\t\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t\t<Form>\r\n\t\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t\t\t<Form.Group >\r\n\t\t\t\t\t\t\t\t\t\t<Form.Label>ID</Form.Label>\r\n\t\t\t\t\t\t\t\t\t\t<Form.Control type=\"text\" name=\"id\" value={userTable.id == null ? \"\" : userTable.id} readOnly />\r\n\t\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t\t<Form.Group >\r\n\t\t\t\t\t\t\t\t\t\t<Form.Label>Fullname</Form.Label>\r\n\t\t\t\t\t\t\t\t\t\t<Form.Control type=\"text\" name=\"fullname\" value={userTable.fullname == null ? \"\" : userTable.fullname} readOnly />\r\n\t\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t\t<Form.Group >\r\n\t\t\t\t\t\t\t\t\t\t<Form.Label>Email</Form.Label>\r\n\t\t\t\t\t\t\t\t\t\t<Form.Control type=\"email\" name=\"email\" value={userTable.email == null ? \"\" : userTable.email} readOnly />\r\n\t\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t\t<Form.Group >\r\n\t\t\t\t\t\t\t\t\t\t<Form.Label>Type</Form.Label>\r\n\t\t\t\t\t\t\t\t\t\t<Form.Control type=\"text\" name=\"type\" value={userTable.type == null ? \"\" : userTable.type === 1 ? \"Student\" : userTable.type === 2 ? \"Teacher\" : \"Admin\"} readOnly />\r\n\t\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t\t\t<Form.Group >\r\n\t\t\t\t\t\t\t\t\t\t<Form.Label>Active</Form.Label>\r\n\t\t\t\t\t\t\t\t\t\t<Form.Control type=\"text\" name=\"isActive\" value={userTable.isActive == null ? \"\" : userTable.isActive === 1 ? \"Yes\" : \"No\"} readOnly />\r\n\t\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t\t<Form.Group >\r\n\t\t\t\t\t\t\t\t\t\t<Form.Label>Watch List</Form.Label>\r\n\t\t\t\t\t\t\t\t\t\t<Form.Control type=\"text\" name=\"watchlist\" value={userTable.watchlist == null ? \"\" : userTable.watchlist} readOnly />\r\n\t\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t\t<Form.Group >\r\n\t\t\t\t\t\t\t\t\t\t<Form.Label>Created Date</Form.Label>\r\n\t\t\t\t\t\t\t\t\t\t<Form.Control type=\"text\" name=\"createdDate\" value={userTable.createdDate == null ? \"\" : userTable.createdDate} readOnly />\r\n\t\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t\t<Form.Group >\r\n\t\t\t\t\t\t\t\t\t\t<Form.Label>Modified Date</Form.Label>\r\n\t\t\t\t\t\t\t\t\t\t<Form.Control type=\"text\" name=\"modifiedDate\" value={userTable.modifiedDate == null ? \"\" : userTable.modifiedDate} readOnly />\r\n\t\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t</Modal.Body>\r\n\t\t\t\t\t<Modal.Footer>\r\n\t\t\t\t\t\t<Button variant=\"secondary\" onClick={handleCloseModalDetail}>Close</Button>\r\n\t\t\t\t\t</Modal.Footer>\r\n\t\t\t\t</Modal>\r\n\t\t\t\t<Modal show={showModalEdit} onHide={handleCloseModalEdit}>\r\n\t\t\t\t\t<Form onSubmit={handleSubmit(onSubmitUpdateUser)}>\r\n\t\t\t\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t\t\t\t<Modal.Title>Update User</Modal.Title>\r\n\t\t\t\t\t\t</Modal.Header>\r\n\t\t\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t\t\t<Form.Group >\r\n\t\t\t\t\t\t\t\t<Form.Label>ID</Form.Label>\r\n\t\t\t\t\t\t\t\t<Form.Control type=\"text\" name=\"id\" value={userTable.id == null ? \"\" : userTable.id} ref={register({ required: true })} readOnly />\r\n\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t<Form.Group >\r\n\t\t\t\t\t\t\t\t<Form.Label>Fullname</Form.Label>\r\n\t\t\t\t\t\t\t\t<Form.Control type=\"text\" name=\"fullname\" defaultValue={userTable.fullname == null ? \"\" : userTable.fullname} ref={register({ required: true })} autoFocus />\r\n\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t{/* <Form.Group >\r\n\t\t\t\t\t\t\t\t<Form.Check type=\"switch\" id=\"custom-switch\" label=\"Change password\" onChange={handleDisableChangePassword}/>\r\n\t\t\t\t\t\t\t\t<Form.Label>Password</Form.Label>\r\n\t\t\t\t\t\t\t\t<Form.Control type=\"text\" name=\"password\" ref={register({ required: !{disableChangePassword} })} disabled={disableChangePassword} />\r\n\t\t\t\t\t\t\t</Form.Group> */}\r\n\t\t\t\t\t\t\t<Form.Group >\r\n\t\t\t\t\t\t\t\t<Form.Label>Email</Form.Label>\r\n\t\t\t\t\t\t\t\t<Form.Control type=\"email\" name=\"email\" defaultValue={userTable.email == null ? \"\" : userTable.email} ref={register({ required: true })} readOnly />\r\n\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t<Form.Group>\r\n\t\t\t\t\t\t\t\t<Form.Label>Type</Form.Label>\r\n\t\t\t\t\t\t\t\t<Form.Control as=\"select\" name=\"type\" defaultValue={userTable.id==null?-1:userTable.type == null ? \"\" : userTable.type === 1 ? 1 : userTable.type === 2 ? 2 : 3} ref={register({ required: true })} >\r\n\t\t\t\t\t\t\t\t\t<option value=\"1\">Student</option>\r\n\t\t\t\t\t\t\t\t\t<option value=\"2\">Teacher</option>\r\n\t\t\t\t\t\t\t\t\t<option value=\"3\">Admin</option>\r\n\t\t\t\t\t\t\t\t</Form.Control>\r\n\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t<Form.Group>\r\n\t\t\t\t\t\t\t\t<Form.Label>Active</Form.Label>\r\n\t\t\t\t\t\t\t\t<Form.Control as=\"select\" name=\"isActive\" defaultValue={userTable.id==null?\"\":userTable.isActive == null ? \"\" : userTable.isActive === 1 ? 1 : 0} ref={register({ required: true })} >\r\n\t\t\t\t\t\t\t\t\t<option value=\"1\">Yes</option>\r\n\t\t\t\t\t\t\t\t\t<option value=\"0\">No</option>\r\n\t\t\t\t\t\t\t\t</Form.Control>\r\n\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t{/* <Form.Group>\r\n\t\t\t\t\t\t\t\t<Form.Label>Status</Form.Label>\r\n\t\t\t\t\t\t\t\t<Form.Check type=\"switch\" id=\"custom-switch\" label=\"Restore user\" onChange={handleDisableChangeStatus} disabled={userTable.isDeleted == null ? true : userTable.isDeleted === 1 ? false : true} />\r\n\t\t\t\t\t\t\t\t<Form.Control as=\"select\" name=\"isActive\" defaultValue={userTable.isDeleted == null ? \"\" : userTable.isDeleted === 1 ? 1 : 0} ref={register({ required: !{disableChangeStatus} })} disabled={disableChangeStatus}>\r\n\t\t\t\t\t\t\t\t\t<option value=\"1\">User is deleted</option>\r\n\t\t\t\t\t\t\t\t\t<option value=\"0\">User is live</option>\r\n\t\t\t\t\t\t\t\t</Form.Control>\r\n\t\t\t\t\t\t\t</Form.Group> */}\r\n\t\t\t\t\t\t\t{/* <Form.Group >\r\n\t\t\t\t\t\t\t\t<Form.Label>Watch List</Form.Label>\r\n\t\t\t\t\t\t\t\t<Form.Control type=\"text\" name=\"watchlist\" defaultValue={userTable.watchlist == null ? \"\" : userTable.watchlist} ref={register({ required: false })} />\r\n\t\t\t\t\t\t\t</Form.Group> */}\r\n\t\t\t\t\t\t</Modal.Body>\r\n\t\t\t\t\t\t<Modal.Footer>\r\n\t\t\t\t\t\t\t<Button variant=\"primary\" type=\"submit\">Update</Button>\r\n\t\t\t\t\t\t\t<Button variant=\"secondary\" onClick={handleCloseModalEdit}>Close</Button>\r\n\t\t\t\t\t\t</Modal.Footer>\r\n\t\t\t\t\t</Form>\r\n\t\t\t\t</Modal>\r\n\t\t\t\t<Modal show={showModalDelete} onHide={handleCloseModalDelete}>\r\n\t\t\t\t\t<Form onSubmit={handleSubmit(onSubmitDeleteUser)}>\r\n\t\t\t\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t\t\t\t<Modal.Title>Delete User</Modal.Title>\r\n\t\t\t\t\t\t</Modal.Header>\r\n\t\t\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t\t\t<Form.Group >\r\n\t\t\t\t\t\t\t\t\t\t<Form.Label>ID</Form.Label>\r\n\t\t\t\t\t\t\t\t\t\t<Form.Control type=\"text\" name=\"id\" defaultValue={userTable.id == null ? \"\" : userTable.id} ref={register({ required: false })} readOnly />\r\n\t\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t\t<Form.Group >\r\n\t\t\t\t\t\t\t\t\t\t<Form.Label>Fullname</Form.Label>\r\n\t\t\t\t\t\t\t\t\t\t<Form.Control type=\"text\" name=\"fullname\" defaultValue={userTable.fullname == null ? \"\" : userTable.fullname} readOnly />\r\n\t\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t\t<Form.Group >\r\n\t\t\t\t\t\t\t\t\t\t<Form.Label>Email</Form.Label>\r\n\t\t\t\t\t\t\t\t\t\t<Form.Control type=\"text\" name=\"email\" defaultValue={userTable.email == null ? \"\" : userTable.email} readOnly />\r\n\t\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t\t<Form.Group >\r\n\t\t\t\t\t\t\t\t\t\t<Form.Label>Type</Form.Label>\r\n\t\t\t\t\t\t\t\t\t\t<Form.Control type=\"text\" name=\"type\" defaultValue={userTable.type == null ? \"\" : userTable.type === 1 ? \"Student\" : userTable.type === 2 ? \"Teacher\" : \"Admin\"} readOnly />\r\n\t\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t\t<Form.Group >\r\n\t\t\t\t\t\t\t\t\t\t<Form.Label>Active</Form.Label>\r\n\t\t\t\t\t\t\t\t\t\t<Form.Control type=\"text\" name=\"isActive\" defaultValue={userTable.isActive == null ? \"\" : userTable.isActive === 1 ? \"Yes\" : \"No\"} readOnly />\r\n\t\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t\t<Form.Group >\r\n\t\t\t\t\t\t\t\t\t\t<Form.Label>Watch List</Form.Label>\r\n\t\t\t\t\t\t\t\t\t\t<Form.Control type=\"text\" name=\"watchlist\" defaultValue={userTable.watchlist == null ? \"\" : userTable.watchlist} readOnly />\r\n\t\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t\t<Form.Group >\r\n\t\t\t\t\t\t\t\t\t\t<Form.Label>Created Date</Form.Label>\r\n\t\t\t\t\t\t\t\t\t\t<Form.Control type=\"text\" name=\"createdDate\" defaultValue={userTable.createdDate == null ? \"\" : userTable.createdDate} readOnly />\r\n\t\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t\t<Form.Group >\r\n\t\t\t\t\t\t\t\t\t\t<Form.Label>Modified Date</Form.Label>\r\n\t\t\t\t\t\t\t\t\t\t<Form.Control type=\"text\" name=\"modifiedDate\" defaultValue={userTable.modifiedDate == null ? \"\" : userTable.modifiedDate} readOnly />\r\n\t\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t</Row>\r\n\r\n\t\t\t\t\t\t</Modal.Body>\r\n\t\t\t\t\t\t<Modal.Footer>\r\n\t\t\t\t\t\t\t<Button variant=\"danger\" type=\"submit\">Delete</Button>\r\n\t\t\t\t\t\t\t<Button variant=\"secondary\" onClick={handleCloseModalDelete}>Close</Button>\r\n\t\t\t\t\t\t</Modal.Footer>\r\n\t\t\t\t\t</Form>\r\n\t\t\t\t</Modal>\r\n\t\t\t\t<Modal show={showModalNew} onHide={handleCloseModalNew}>\r\n\t\t\t\t\t<Form onSubmit={handleSubmit(onSubmitNewUser)}>\r\n\t\t\t\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t\t\t\t<Modal.Title>New User</Modal.Title>\r\n\t\t\t\t\t\t</Modal.Header>\r\n\t\t\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t\t\t<Form.Group >\r\n\t\t\t\t\t\t\t\t<Form.Label>Fullname</Form.Label>\r\n\t\t\t\t\t\t\t\t<Form.Control type=\"text\" name=\"fullname\" ref={register({ required: true })} autoFocus />\r\n\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t<Form.Group >\r\n\t\t\t\t\t\t\t\t<Form.Label>Email</Form.Label>\r\n\t\t\t\t\t\t\t\t<Form.Control type=\"email\" name=\"email\" ref={register({ required: true })}  />\r\n\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t<Form.Group >\r\n\t\t\t\t\t\t\t\t<Form.Label>Password</Form.Label>\r\n\t\t\t\t\t\t\t\t<Form.Control type=\"password\" name=\"password\" ref={register({ required: true })}  />\r\n\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t<Form.Group>\r\n\t\t\t\t\t\t\t\t<Form.Label>Type</Form.Label>\r\n\t\t\t\t\t\t\t\t<Form.Control as=\"select\" name=\"type\" ref={register({ required: true })} >\r\n\t\t\t\t\t\t\t\t\t<option value=\"2\">Teacher</option>\r\n\t\t\t\t\t\t\t\t\t<option value=\"3\">Admin</option>\r\n\t\t\t\t\t\t\t\t</Form.Control>\r\n\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t</Modal.Body>\r\n\t\t\t\t\t\t<Modal.Footer>\r\n\t\t\t\t\t\t\t<Button variant=\"success\" type=\"submit\">Create</Button>\r\n\t\t\t\t\t\t\t<Button variant=\"secondary\" onClick={handleCloseModalNew}>Close</Button>\r\n\t\t\t\t\t\t</Modal.Footer>\r\n\t\t\t\t\t</Form>\r\n\t\t\t\t</Modal>\r\n\t\t\t</AppContext.Provider>\r\n\t\t</div>\r\n\t);\r\n}\r\n","C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\admin\\views\\categories\\Category.js",["445","446","447","448","449","450","451"],"import React, { lazy, useState, useEffect, useReducer, forwardRef } from 'react'\r\nimport { axiosInstance, parseJwt } from '../../../../utils';\r\nimport { useForm } from 'react-hook-form';\r\nimport { Modal, Button, Form, FormCheck, Col, Row } from 'react-bootstrap';\r\nimport reducer from '../../categoryReducer';\r\nimport AppContext from '../../categoryContext';\r\nimport swal from 'sweetalert';\r\n\r\nimport MaterialTable from 'material-table';\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport DetailsIcon from '@material-ui/icons/Details';\r\n\r\n\r\n\r\nexport default function Category(props) {\r\n\tconst [categoryTable, setCategoryTable] = useState([]);\r\n\tconst { register, handleSubmit, watch, errors } = useForm();\r\n\tconst [showModalDetail, setShowModalDetail] = useState(false);\r\n\tconst [showModalEdit, setShowModalEdit] = useState(false);\r\n\tconst [showModalDelete, setShowModalDelete] = useState(false);\r\n\tconst [showModalNew, setShowModalNew] = useState(false);\r\n\tconst [disableChangePassword, setDisableChangePassword] = useState(true);\r\n\tconst handleDisableChangePassword = () => { disableChangePassword ? setDisableChangePassword(false) : setDisableChangePassword(true) };\r\n\tconst [disableChangeStatus, setDisableChangeStatus] = useState(true);\r\n\tconst handleDisableChangeStatus = () => { disableChangeStatus ? setDisableChangeStatus(false) : setDisableChangeStatus(true) };\r\n\tconst handleShowModelDetail = () => setShowModalDetail(true);\r\n\tconst handleCloseModalDetail = () => setShowModalDetail(false);\r\n\tconst handleShowModelEdit = () => setShowModalEdit(true);\r\n\tconst handleCloseModalEdit = () => setShowModalEdit(false);\r\n\tconst handleShowModelDelete = () => setShowModalDelete(true);\r\n\tconst handleCloseModalDelete = () => setShowModalDelete(false);\r\n\tconst handleShowModelNew = () => setShowModalNew(true);\r\n\tconst handleCloseModalNew = () => setShowModalNew(false);\r\n\tconst initialCategoryData = {query: '', items: []}\r\n\tconst [store, dispatch] = useReducer(reducer, initialCategoryData);\r\n\tconst defaulteCategory = {id: null, title: null, description:null}\r\n\r\n\tuseEffect(function () {\r\n\t\tasync function loadDataCategory() {\r\n\t\t\tconst res = await axiosInstance.get('/categories', { headers: { 'x-access-token': localStorage.account_accessToken } });\r\n\t\t\tif (res.status === 200) {\r\n\t\t\t\tdispatch({\r\n\t\t\t\t\ttype: 'init',\r\n\t\t\t\t\tpayload: {\r\n\t\t\t\t\t\titems: res.data,\r\n\t\t\t\t\t\tquery: ''\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t\tloadDataCategory();\r\n\t}, []);\r\n\tconst columns = [\r\n\t\t{ title: \"ID\", field: \"id\" },\r\n\t\t{ title: \"Title\", field: \"title\" },\r\n\t\t{ title: \"Description\", field: \"description\" },\r\n\t];\r\n\r\n\tconst tableIcons = {\r\n\t\tAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n\t\tCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n\t\tClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n\t\tDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n\t\tDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n\t\tEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n\t\tExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n\t\tFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n\t\tFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n\t\tLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n\t\tNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n\t\tPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n\t\tResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n\t\tSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n\t\tSortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n\t\tThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n\t\tViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\r\n\t\tDetailsIcon: forwardRef((props, ref) => <DetailsIcon {...props} ref={ref} />)\r\n\t};\r\n\tconst reLoadDataCategory = async function () {\r\n\t\tconst res = await axiosInstance.get('/categories', { headers: { 'x-access-token': localStorage.account_accessToken } });\r\n\t\tif (res.status === 200) {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: 'init',\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\titems: res.data,\r\n\t\t\t\t\tquery: ''\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tconst handleDetail = async function (dataRow) {\r\n\t\tsetCategoryTable(defaulteCategory);\r\n\t\tlet id = dataRow.id;\r\n\t\tlet res = await axiosInstance.get('/categories/' + id, { headers: { 'x-access-token': localStorage.account_accessToken } });\r\n\t\tif (res.status === 200) {\r\n\t\t\tsetCategoryTable(res.data);\r\n\t\t}\r\n\t\thandleShowModelDetail();\r\n\t}\r\n\r\n\tconst handleEdit = async function (dataRow) {\r\n\t\tsetCategoryTable(defaulteCategory);\r\n\t\tlet id = dataRow.id;\r\n\t\tlet res = await axiosInstance.get('/categories/' + id, { headers: { 'x-access-token': localStorage.account_accessToken } });\r\n\t\tif (res.status === 200) {\r\n\t\t\tsetCategoryTable(res.data);\r\n\t\t}\r\n\t\thandleShowModelEdit();\r\n\t}\r\n\r\n\tconst handleDelete = async function (dataRow) {\r\n\t\tsetCategoryTable(defaulteCategory);\r\n\t\tlet id = dataRow.id;\r\n\t\tlet res = await axiosInstance.get('/categories/' + id, { headers: { 'x-access-token': localStorage.account_accessToken } });\r\n\t\tif (res.status === 200) {\r\n\t\t\tsetCategoryTable(res.data);\r\n\t\t}\r\n\t\thandleShowModelDelete();\r\n\t}\r\n\r\n\tconst handleNew = async function (dataRow) {\r\n\t\thandleShowModelNew();\r\n\t}\r\n\r\n\tconst onSubmitUpdate = async function (data) {\r\n\t\ttry {\r\n\t\t\tif (data != null && data.id > 0) {\r\n\t\t\t\tlet id = data.id;\r\n\t\t\t\tdelete data.id;\r\n\t\t\t\tlet res = await axiosInstance.put('/categories/' + id, data, {\r\n\t\t\t\t\theaders: { 'x-access-token': localStorage.account_accessToken }\r\n\t\t\t\t});\r\n\t\t\t\tif (res.status === 201) {\r\n\t\t\t\t\treLoadDataCategory();\r\n\t\t\t\t\tswal({\r\n\t\t\t\t\t\ttitle: \"Category is updated\",\r\n\t\t\t\t\t\ttext: \"Category ID \" + id + \" updated\",\r\n\t\t\t\t\t\ticon: \"success\",\r\n\t\t\t\t\t\tbutton: \"OK\"\r\n\t\t\t\t\t});\r\n\t\t\t\t\thandleCloseModalEdit();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tswal({\r\n\t\t\t\t\t\ttitle: \"Failed\",\r\n\t\t\t\t\t\ticon: \"danger\",\r\n\t\t\t\t\t\tbutton: \"OK\"\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tswal({\r\n\t\t\t\t\ttitle: \"Failed\",\r\n\t\t\t\t\ticon: \"danger\",\r\n\t\t\t\t\tbutton: \"OK\"\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err.response.data);\r\n\t\t}\r\n\t}\r\n\r\n\tconst onSubmitDelete = async function (data) {\r\n\t\ttry {\r\n\t\t\tif (data != null && data.id > 0) {\r\n\t\t\t\tlet id = data.id;\r\n\t\t\t\tlet res = await axiosInstance.delete('/categories/' + id, {\r\n\t\t\t\t\theaders: { 'x-access-token': localStorage.account_accessToken }\r\n\t\t\t\t});\r\n\t\t\t\tif (res.status === 200) {\r\n\t\t\t\t\treLoadDataCategory();\r\n\t\t\t\t\tswal({\r\n\t\t\t\t\t\ttitle: \"Category is deleted\",\r\n\t\t\t\t\t\ttext: \"Category ID \" + id + \" deleted\",\r\n\t\t\t\t\t\ticon: \"success\",\r\n\t\t\t\t\t\tbutton: \"OK\"\r\n\t\t\t\t\t});\r\n\t\t\t\t\thandleCloseModalDelete();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tswal({\r\n\t\t\t\t\t\ttitle: \"Failed\",\r\n\t\t\t\t\t\ticon: \"danger\",\r\n\t\t\t\t\t\tbutton: \"OK\"\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tswal({\r\n\t\t\t\t\ttitle: \"Failed\",\r\n\t\t\t\t\ticon: \"danger\",\r\n\t\t\t\t\tbutton: \"OK\"\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err.response.data);\r\n            swal({\r\n                title: \"Failed\",\r\n                text: \"Category has course\",\r\n                icon: \"danger\",\r\n                button: \"OK\"\r\n            });\r\n\t\t}\r\n\t}\r\n\r\n\tconst onSubmitNew= async function (data) {\r\n\t\ttry {\r\n\t\t\tif (data != null) {\r\n\t\t\t\tlet res = await axiosInstance.post('/categories', data, {\r\n\t\t\t\t\theaders: { 'x-access-token': localStorage.account_accessToken }\r\n\t\t\t\t});\r\n\t\t\t\tif (res.status === 201) {\r\n\t\t\t\t\treLoadDataCategory();\r\n\t\t\t\t\tswal({\r\n\t\t\t\t\t\ttitle: \"Category is created\",\r\n\t\t\t\t\t\ttext: \"Category ID \" + res.data.id + \" created\",\r\n\t\t\t\t\t\ticon: \"success\",\r\n\t\t\t\t\t\tbutton: \"OK\"\r\n\t\t\t\t\t});\r\n\t\t\t\t\t//handleCloseModalNew();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tswal({\r\n\t\t\t\t\t\ttitle: \"Failed\",\r\n\t\t\t\t\t\ticon: \"danger\",\r\n\t\t\t\t\t\tbutton: \"OK\"\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tswal({\r\n\t\t\t\t\ttitle: \"Failed\",\r\n\t\t\t\t\ticon: \"danger\",\r\n\t\t\t\t\tbutton: \"OK\"\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err.response.data);\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<AppContext.Provider value={{ store, dispatch }}>\r\n\t\t\t\t<div className=\"container mt-3\">\r\n\t\t\t\t\t<div className=\"row mt-3\">\r\n\t\t\t\t\t\t<div className=\"col-sm-12\">\r\n\t\t\t\t\t\t\t<div className=\"card shadow\">\r\n\t\t\t\t\t\t\t\t<h3 className=\"card-header d-flex\">\r\n                                Category List from Academy\r\n            </h3>\r\n\t\t\t\t\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t\t\t\t<button className=\"btn btn-warning\" onClick={reLoadDataCategory}>Reload</button>\r\n\t\t\t\t\t\t\t\t\t\t<button className=\"btn btn-primary\" onClick={handleNew}>New</button>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<br></br>\r\n\t\t\t\t\t\t\t\t\t<div style={{ maxWidth: '100%' }}>\r\n\t\t\t\t\t\t\t\t\t\t<MaterialTable columns={columns} data={store.items} icons={tableIcons} title={null}\r\n\t\t\t\t\t\t\t\t\t\t\tactions={[\r\n\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ticon: tableIcons.DetailsIcon,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttooltip: 'Detail Category',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick: (event, rowData) => handleDetail(rowData)\r\n\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ticon: tableIcons.Edit,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttooltip: 'Modify Category',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick: (event, rowData) => handleEdit(rowData)\r\n\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ticon: tableIcons.Delete,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttooltip: 'Delete Category',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick: (event, rowData) => handleDelete(rowData)\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t]}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"card-footer text-muted\">\r\n\t\t\t\t\t\t\t\t\tFooter\r\n          </div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<Modal show={showModalDetail} onHide={handleCloseModalDetail}>\r\n\t\t\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t\t\t<Modal.Title>Detail Category</Modal.Title>\r\n\t\t\t\t\t</Modal.Header>\r\n\t\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t\t<Form>\r\n\t\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t\t\t<Form.Group >\r\n\t\t\t\t\t\t\t\t\t\t<Form.Label>ID</Form.Label>\r\n\t\t\t\t\t\t\t\t\t\t<Form.Control type=\"text\" name=\"id\" value={categoryTable.id == null ? \"\" : categoryTable.id} readOnly />\r\n\t\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t\t<Form.Group >\r\n\t\t\t\t\t\t\t\t\t\t<Form.Label>Title</Form.Label>\r\n\t\t\t\t\t\t\t\t\t\t<Form.Control type=\"text\" name=\"title\" value={categoryTable.title == null ? \"\" : categoryTable.title} readOnly />\r\n\t\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t\t<Form.Group >\r\n\t\t\t\t\t\t\t\t\t\t<Form.Label>Description</Form.Label>\r\n\t\t\t\t\t\t\t\t\t\t<Form.Control type=\"text\" name=\"description\" value={categoryTable.description == null ? \"\" : categoryTable.description} readOnly />\r\n\t\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t\t\t<Form.Group >\r\n\t\t\t\t\t\t\t\t\t\t<Form.Label>Created Date</Form.Label>\r\n\t\t\t\t\t\t\t\t\t\t<Form.Control type=\"text\" name=\"createdDate\" value={categoryTable.createdDate == null ? \"\" : categoryTable.createdDate} readOnly />\r\n\t\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t\t<Form.Group >\r\n\t\t\t\t\t\t\t\t\t\t<Form.Label>Modified Date</Form.Label>\r\n\t\t\t\t\t\t\t\t\t\t<Form.Control type=\"text\" name=\"modifiedDate\" value={categoryTable.modifiedDate == null ? \"\" : categoryTable.modifiedDate} readOnly />\r\n\t\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t</Modal.Body>\r\n\t\t\t\t\t<Modal.Footer>\r\n\t\t\t\t\t\t<Button variant=\"secondary\" onClick={handleCloseModalDetail}>Close</Button>\r\n\t\t\t\t\t</Modal.Footer>\r\n\t\t\t\t</Modal>\r\n\t\t\t\t<Modal show={showModalEdit} onHide={handleCloseModalEdit}>\r\n\t\t\t\t\t<Form onSubmit={handleSubmit(onSubmitUpdate)}>\r\n\t\t\t\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t\t\t\t<Modal.Title>Update Category</Modal.Title>\r\n\t\t\t\t\t\t</Modal.Header>\r\n\t\t\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t\t\t<Form.Group >\r\n\t\t\t\t\t\t\t\t<Form.Label>ID</Form.Label>\r\n\t\t\t\t\t\t\t\t<Form.Control type=\"text\" name=\"id\" value={categoryTable.id == null ? \"\" : categoryTable.id} ref={register({ required: true })} readOnly />\r\n\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t<Form.Group >\r\n\t\t\t\t\t\t\t\t<Form.Label>Title</Form.Label>\r\n\t\t\t\t\t\t\t\t<Form.Control type=\"text\" name=\"title\" defaultValue={categoryTable.title == null ? \"\" : categoryTable.title} ref={register({ required: true })} autoFocus />\r\n\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t<Form.Group >\r\n\t\t\t\t\t\t\t\t<Form.Label>Description</Form.Label>\r\n\t\t\t\t\t\t\t\t<Form.Control type=\"text\" name=\"description\" defaultValue={categoryTable.description == null ? \"\" : categoryTable.description} ref={register({ required: true })} />\r\n\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t</Modal.Body>\r\n\t\t\t\t\t\t<Modal.Footer>\r\n\t\t\t\t\t\t\t<Button variant=\"primary\" type=\"submit\">Update</Button>\r\n\t\t\t\t\t\t\t<Button variant=\"secondary\" onClick={handleCloseModalEdit}>Close</Button>\r\n\t\t\t\t\t\t</Modal.Footer>\r\n\t\t\t\t\t</Form>\r\n\t\t\t\t</Modal>\r\n\t\t\t\t<Modal show={showModalDelete} onHide={handleCloseModalDelete}>\r\n\t\t\t\t\t<Form onSubmit={handleSubmit(onSubmitDelete)}>\r\n\t\t\t\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t\t\t\t<Modal.Title>Delete Category</Modal.Title>\r\n\t\t\t\t\t\t</Modal.Header>\r\n\t\t\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t\t\t<Form.Group >\r\n\t\t\t\t\t\t\t\t\t\t<Form.Label>ID</Form.Label>\r\n\t\t\t\t\t\t\t\t\t\t<Form.Control type=\"text\" name=\"id\" defaultValue={categoryTable.id == null ? \"\" : categoryTable.id} ref={register({ required: false })} readOnly />\r\n\t\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t\t<Form.Group >\r\n\t\t\t\t\t\t\t\t\t\t<Form.Label>Title</Form.Label>\r\n\t\t\t\t\t\t\t\t\t\t<Form.Control type=\"text\" name=\"title\" defaultValue={categoryTable.title == null ? \"\" : categoryTable.title} readOnly />\r\n\t\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t\t<Form.Group >\r\n\t\t\t\t\t\t\t\t\t\t<Form.Label>Description</Form.Label>\r\n\t\t\t\t\t\t\t\t\t\t<Form.Control type=\"text\" name=\"description\" defaultValue={categoryTable.description == null ? \"\" : categoryTable.description} readOnly />\r\n\t\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t\t\t<Form.Group >\r\n\t\t\t\t\t\t\t\t\t\t<Form.Label>Created Date</Form.Label>\r\n\t\t\t\t\t\t\t\t\t\t<Form.Control type=\"text\" name=\"createdDate\" defaultValue={categoryTable.createdDate == null ? \"\" : categoryTable.createdDate} readOnly />\r\n\t\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t\t<Form.Group >\r\n\t\t\t\t\t\t\t\t\t\t<Form.Label>Modified Date</Form.Label>\r\n\t\t\t\t\t\t\t\t\t\t<Form.Control type=\"text\" name=\"modifiedDate\" defaultValue={categoryTable.modifiedDate == null ? \"\" : categoryTable.modifiedDate} readOnly />\r\n\t\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t</Row>\r\n\r\n\t\t\t\t\t\t</Modal.Body>\r\n\t\t\t\t\t\t<Modal.Footer>\r\n\t\t\t\t\t\t\t<Button variant=\"danger\" type=\"submit\">Delete</Button>\r\n\t\t\t\t\t\t\t<Button variant=\"secondary\" onClick={handleCloseModalDelete}>Close</Button>\r\n\t\t\t\t\t\t</Modal.Footer>\r\n\t\t\t\t\t</Form>\r\n\t\t\t\t</Modal>\r\n\t\t\t\t<Modal show={showModalNew} onHide={handleCloseModalNew}>\r\n\t\t\t\t\t<Form onSubmit={handleSubmit(onSubmitNew)}>\r\n\t\t\t\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t\t\t\t<Modal.Title>New Category</Modal.Title>\r\n\t\t\t\t\t\t</Modal.Header>\r\n\t\t\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t\t\t<Form.Group >\r\n\t\t\t\t\t\t\t\t<Form.Label>Title</Form.Label>\r\n\t\t\t\t\t\t\t\t<Form.Control type=\"text\" name=\"title\" ref={register({ required: true })} autoFocus />\r\n\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t<Form.Group >\r\n\t\t\t\t\t\t\t\t<Form.Label>Description</Form.Label>\r\n\t\t\t\t\t\t\t\t<Form.Control type=\"text\" name=\"description\" ref={register({ required: true })}  />\r\n\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t</Modal.Body>\r\n\t\t\t\t\t\t<Modal.Footer>\r\n\t\t\t\t\t\t\t<Button variant=\"success\" type=\"submit\">Create</Button>\r\n\t\t\t\t\t\t\t<Button variant=\"secondary\" onClick={handleCloseModalNew}>Close</Button>\r\n\t\t\t\t\t\t</Modal.Footer>\r\n\t\t\t\t\t</Form>\r\n\t\t\t\t</Modal>\r\n\t\t\t</AppContext.Provider>\r\n\t\t</div>\r\n\t);\r\n}\r\n","C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\admin\\views\\widgets\\Widgets.js",[],"C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\admin\\views\\dashboard\\Dashboard.js",[],"C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\admin\\views\\charts\\Charts.js",[],"C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\admin\\views\\users\\UsersData.js",[],"C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\admin\\views\\theme\\typography\\Typography.js",[],"C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\admin\\views\\notifications\\badges\\Badges.js",[],"C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\admin\\views\\notifications\\modals\\Modals.js",[],"C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\admin\\views\\theme\\colors\\Colors.js",[],"C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\admin\\views\\notifications\\alerts\\Alerts.js",[],"C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\admin\\views\\notifications\\toaster\\Toaster.js",[],"C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\admin\\views\\icons\\brands\\Brands.js",[],"C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\admin\\views\\icons\\flags\\Flags.js",[],"C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\admin\\views\\icons\\coreui-icons\\CoreUIIcons.js",[],"C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\admin\\views\\buttons\\button-groups\\ButtonGroups.js",[],"C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\admin\\views\\buttons\\buttons\\Buttons.js",[],"C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\admin\\views\\buttons\\button-dropdowns\\ButtonDropdowns.js",[],"C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\admin\\views\\buttons\\brand-buttons\\BrandButtons.js",[],"C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\admin\\views\\base\\tooltips\\Tooltips.js",[],"C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\admin\\views\\base\\progress-bar\\ProgressBar.js",[],"C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\admin\\views\\base\\tabs\\Tabs.js",[],"C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\admin\\views\\base\\switches\\Switches.js",[],"C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\admin\\views\\base\\paginations\\Pagnations.js",[],"C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\admin\\views\\base\\navs\\Navs.js",[],"C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\admin\\views\\base\\navbars\\Navbars.js",[],"C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\admin\\views\\base\\popovers\\Popovers.js",[],"C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\admin\\views\\base\\list-groups\\ListGroups.js",[],"C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\admin\\views\\base\\collapses\\Collapses.js",[],"C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\admin\\views\\base\\forms\\BasicForms.js",[],"C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\admin\\views\\base\\jumbotrons\\Jumbotrons.js",[],"C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\admin\\views\\base\\breadcrumbs\\Breadcrumbs.js",[],"C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\admin\\views\\base\\carousels\\Carousels.js",[],"C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\admin\\views\\base\\tables\\Tables.js",[],"C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\admin\\views\\base\\cards\\Cards.js",[],"C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\admin\\views\\widgets\\WidgetsDropdown.js",[],"C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\admin\\views\\widgets\\WidgetsBrand.js",[],"C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\admin\\views\\charts\\MainChartExample.js",[],"C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\admin\\categoryContext.js",[],"C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\admin\\views\\charts\\ChartBarSimple.js",[],"C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\admin\\views\\charts\\ChartLineSimple.js",[],"C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\admin\\categoryReducer.js",[],"C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\admin\\userContext.js",[],"C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\admin\\userReducer.js",[],"C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\admin\\reusable\\index.js",[],"C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\admin\\courseReducer.js",[],"C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\admin\\courseContext.js",[],"C:\\Users\\ad\\Desktop\\wnc-fe\\src\\components\\admin\\reusable\\DocsLink.js",[],"C:\\Users\\ad\\Desktop\\wnc-fe\\src\\onlineAcademyAppContext.js",[],"C:\\Users\\ad\\Desktop\\wnc-fe\\src\\onlineAcademyReducer.js",["452"],"export default function reducer(state, action) {\r\n    switch (action.type) {\r\n      case 'loadCourses':\r\n        return {\r\n          query: action.payload.query,\r\n          items: action.payload.items\r\n        }\r\n  \r\n    //   case 'add_item':\r\n    //     return {\r\n    //       ...state,\r\n    //       items: [...state.items, action.payload]\r\n    //     }\r\n  \r\n    //   case 'update_query':\r\n    //     return {\r\n    //       ...state,\r\n    //       query: action.payload.query\r\n    //     }\r\n  \r\n    //   case 'finish_task':\r\n    //     return {\r\n    //       ...state,\r\n    //       items: state.items.map(item => item.id === action.payload.id ? { ...item, complete: true } : item)\r\n    //     }\r\n  \r\n    //   default:\r\n    //     return state;\r\n     }\r\n  }",{"ruleId":"453","replacedBy":"454"},{"ruleId":"455","replacedBy":"456"},{"ruleId":"457","severity":1,"message":"458","line":5,"column":10,"nodeType":"459","messageId":"460","endLine":5,"endColumn":14},{"ruleId":"457","severity":1,"message":"461","line":18,"column":37,"nodeType":"459","messageId":"460","endLine":18,"endColumn":42},{"ruleId":"457","severity":1,"message":"462","line":18,"column":44,"nodeType":"459","messageId":"460","endLine":18,"endColumn":50},{"ruleId":"457","severity":1,"message":"463","line":21,"column":13,"nodeType":"459","messageId":"460","endLine":21,"endColumn":17},{"ruleId":"457","severity":1,"message":"464","line":23,"column":12,"nodeType":"459","messageId":"460","endLine":23,"endColumn":19},{"ruleId":"465","severity":1,"message":"466","line":154,"column":29,"nodeType":"467","endLine":154,"endColumn":81},{"ruleId":"468","severity":1,"message":"469","line":154,"column":29,"nodeType":"467","endLine":154,"endColumn":81},{"ruleId":"457","severity":1,"message":"470","line":1,"column":17,"nodeType":"459","messageId":"460","endLine":1,"endColumn":26},{"ruleId":"457","severity":1,"message":"471","line":1,"column":28,"nodeType":"459","messageId":"460","endLine":1,"endColumn":38},{"ruleId":"457","severity":1,"message":"458","line":5,"column":10,"nodeType":"459","messageId":"460","endLine":5,"endColumn":14},{"ruleId":"457","severity":1,"message":"472","line":6,"column":51,"nodeType":"459","messageId":"460","endLine":6,"endColumn":65},{"ruleId":"457","severity":1,"message":"473","line":6,"column":67,"nodeType":"459","messageId":"460","endLine":6,"endColumn":75},{"ruleId":"457","severity":1,"message":"461","line":9,"column":35,"nodeType":"459","messageId":"460","endLine":9,"endColumn":40},{"ruleId":"457","severity":1,"message":"462","line":9,"column":42,"nodeType":"459","messageId":"460","endLine":9,"endColumn":48},{"ruleId":"457","severity":1,"message":"474","line":12,"column":17,"nodeType":"459","messageId":"460","endLine":12,"endColumn":24},{"ruleId":"457","severity":1,"message":"475","line":2,"column":8,"nodeType":"459","messageId":"460","endLine":2,"endColumn":19},{"ruleId":"457","severity":1,"message":"476","line":11,"column":8,"nodeType":"459","messageId":"460","endLine":11,"endColumn":18},{"ruleId":"457","severity":1,"message":"477","line":4,"column":25,"nodeType":"459","messageId":"460","endLine":4,"endColumn":37},{"ruleId":"457","severity":1,"message":"478","line":5,"column":16,"nodeType":"459","messageId":"460","endLine":5,"endColumn":19},{"ruleId":"457","severity":1,"message":"479","line":5,"column":21,"nodeType":"459","messageId":"460","endLine":5,"endColumn":24},{"ruleId":"457","severity":1,"message":"480","line":3,"column":3,"nodeType":"459","messageId":"460","endLine":3,"endColumn":9},{"ruleId":"457","severity":1,"message":"481","line":12,"column":3,"nodeType":"459","messageId":"460","endLine":12,"endColumn":8},{"ruleId":"457","severity":1,"message":"482","line":1,"column":8,"nodeType":"459","messageId":"460","endLine":1,"endColumn":13},{"ruleId":"457","severity":1,"message":"483","line":2,"column":8,"nodeType":"459","messageId":"460","endLine":2,"endColumn":13},{"ruleId":"457","severity":1,"message":"484","line":38,"column":7,"nodeType":"459","messageId":"460","endLine":38,"endColumn":12},{"ruleId":"457","severity":1,"message":"485","line":1,"column":17,"nodeType":"459","messageId":"460","endLine":1,"endColumn":21},{"ruleId":"457","severity":1,"message":"486","line":2,"column":25,"nodeType":"459","messageId":"460","endLine":2,"endColumn":33},{"ruleId":"457","severity":1,"message":"487","line":4,"column":31,"nodeType":"459","messageId":"460","endLine":4,"endColumn":40},{"ruleId":"457","severity":1,"message":"461","line":32,"column":37,"nodeType":"459","messageId":"460","endLine":32,"endColumn":42},{"ruleId":"457","severity":1,"message":"462","line":32,"column":44,"nodeType":"459","messageId":"460","endLine":32,"endColumn":50},{"ruleId":"457","severity":1,"message":"488","line":38,"column":11,"nodeType":"459","messageId":"460","endLine":38,"endColumn":38},{"ruleId":"457","severity":1,"message":"489","line":40,"column":11,"nodeType":"459","messageId":"460","endLine":40,"endColumn":36},{"ruleId":"457","severity":1,"message":"490","line":158,"column":11,"nodeType":"459","messageId":"460","endLine":158,"endColumn":20},{"ruleId":"457","severity":1,"message":"485","line":1,"column":17,"nodeType":"459","messageId":"460","endLine":1,"endColumn":21},{"ruleId":"457","severity":1,"message":"486","line":2,"column":25,"nodeType":"459","messageId":"460","endLine":2,"endColumn":33},{"ruleId":"457","severity":1,"message":"487","line":4,"column":31,"nodeType":"459","messageId":"460","endLine":4,"endColumn":40},{"ruleId":"457","severity":1,"message":"461","line":31,"column":34,"nodeType":"459","messageId":"460","endLine":31,"endColumn":39},{"ruleId":"457","severity":1,"message":"462","line":31,"column":41,"nodeType":"459","messageId":"460","endLine":31,"endColumn":47},{"ruleId":"457","severity":1,"message":"488","line":37,"column":8,"nodeType":"459","messageId":"460","endLine":37,"endColumn":35},{"ruleId":"457","severity":1,"message":"489","line":39,"column":8,"nodeType":"459","messageId":"460","endLine":39,"endColumn":33},{"ruleId":"457","severity":1,"message":"485","line":1,"column":17,"nodeType":"459","messageId":"460","endLine":1,"endColumn":21},{"ruleId":"457","severity":1,"message":"486","line":2,"column":25,"nodeType":"459","messageId":"460","endLine":2,"endColumn":33},{"ruleId":"457","severity":1,"message":"487","line":4,"column":31,"nodeType":"459","messageId":"460","endLine":4,"endColumn":40},{"ruleId":"457","severity":1,"message":"461","line":31,"column":34,"nodeType":"459","messageId":"460","endLine":31,"endColumn":39},{"ruleId":"457","severity":1,"message":"462","line":31,"column":41,"nodeType":"459","messageId":"460","endLine":31,"endColumn":47},{"ruleId":"457","severity":1,"message":"488","line":37,"column":8,"nodeType":"459","messageId":"460","endLine":37,"endColumn":35},{"ruleId":"457","severity":1,"message":"489","line":39,"column":8,"nodeType":"459","messageId":"460","endLine":39,"endColumn":33},{"ruleId":"491","severity":1,"message":"492","line":2,"column":5,"nodeType":"493","messageId":"494","endLine":29,"endColumn":7},"no-native-reassign",["495"],"no-negated-in-lhs",["496"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'watch' is assigned a value but never used.","'errors' is assigned a value but never used.","'from' is assigned a value but never used.","'account' is assigned a value but never used.","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'useEffect' is defined but never used.","'useReducer' is defined but never used.","'DropdownButton' is defined but never used.","'Dropdown' is defined but never used.","'toAdmin' is assigned a value but never used.","'HeaderPopup' is defined but never used.","'VideoAdDiv' is defined but never used.","'refreshToken' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'CBadge' is defined but never used.","'CLink' is defined but never used.","'React' is defined but never used.","'CIcon' is defined but never used.","'Users' is assigned a value but never used.","'lazy' is defined but never used.","'parseJwt' is defined but never used.","'FormCheck' is defined but never used.","'handleDisableChangePassword' is assigned a value but never used.","'handleDisableChangeStatus' is assigned a value but never used.","'handleNew' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-global-assign","no-unsafe-negation"]