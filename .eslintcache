[{"V:\\workspace_js\\wnc-final-project-online-academy-fe\\src\\index.js":"1","V:\\workspace_js\\wnc-final-project-online-academy-fe\\src\\App.js":"2","V:\\workspace_js\\wnc-final-project-online-academy-fe\\src\\components\\admin\\assets\\icons\\index.js":"3","V:\\workspace_js\\wnc-final-project-online-academy-fe\\src\\components\\admin\\assets\\icons\\logo.js":"4","V:\\workspace_js\\wnc-final-project-online-academy-fe\\src\\components\\admin\\assets\\icons\\logo-negative.js":"5","V:\\workspace_js\\wnc-final-project-online-academy-fe\\src\\components\\admin\\assets\\icons\\sygnet.js":"6","V:\\workspace_js\\wnc-final-project-online-academy-fe\\src\\views\\admin.js":"7","V:\\workspace_js\\wnc-final-project-online-academy-fe\\src\\views\\onlineAcademy.js":"8","V:\\workspace_js\\wnc-final-project-online-academy-fe\\src\\views\\login.js":"9","V:\\workspace_js\\wnc-final-project-online-academy-fe\\src\\views\\signup.js":"10","V:\\workspace_js\\wnc-final-project-online-academy-fe\\src\\components\\Header.js":"11","V:\\workspace_js\\wnc-final-project-online-academy-fe\\src\\components\\HomeFooter.js":"12","V:\\workspace_js\\wnc-final-project-online-academy-fe\\src\\components\\HomeContent.js":"13","V:\\workspace_js\\wnc-final-project-online-academy-fe\\src\\components\\admin\\containers\\TheLayout.js":"14","V:\\workspace_js\\wnc-final-project-online-academy-fe\\src\\utils.js":"15","V:\\workspace_js\\wnc-final-project-online-academy-fe\\src\\components\\header\\headerPrimary.js":"16","V:\\workspace_js\\wnc-final-project-online-academy-fe\\src\\components\\header\\headerPopup.js":"17","V:\\workspace_js\\wnc-final-project-online-academy-fe\\src\\components\\homeContent\\udemyForBusiness.js":"18","V:\\workspace_js\\wnc-final-project-online-academy-fe\\src\\components\\footer\\footer.js":"19","V:\\workspace_js\\wnc-final-project-online-academy-fe\\src\\components\\homeContent\\trustedCompanies.js":"20","V:\\workspace_js\\wnc-final-project-online-academy-fe\\src\\components\\homeContent\\videoAdDiv.js":"21","V:\\workspace_js\\wnc-final-project-online-academy-fe\\src\\components\\admin\\containers\\index.js":"22","V:\\workspace_js\\wnc-final-project-online-academy-fe\\src\\components\\homeContent\\becomeInstructor.js":"23","V:\\workspace_js\\wnc-final-project-online-academy-fe\\src\\components\\homeContent\\topCategories\\topCategories.js":"24","V:\\workspace_js\\wnc-final-project-online-academy-fe\\src\\components\\homeContent\\adImage.js":"25","V:\\workspace_js\\wnc-final-project-online-academy-fe\\src\\components\\homeContent\\recommendations\\recommendations.js":"26","V:\\workspace_js\\wnc-final-project-online-academy-fe\\src\\components\\homeContent\\featureDiv\\featureDiv1.js":"27","V:\\workspace_js\\wnc-final-project-online-academy-fe\\src\\components\\homeContent\\featureDiv\\featureDiv2.js":"28","V:\\workspace_js\\wnc-final-project-online-academy-fe\\src\\components\\homeContent\\fillerDiv.js":"29","V:\\workspace_js\\wnc-final-project-online-academy-fe\\src\\components\\admin\\containers\\TheHeader.js":"30","V:\\workspace_js\\wnc-final-project-online-academy-fe\\src\\components\\admin\\containers\\TheSidebar.js":"31","V:\\workspace_js\\wnc-final-project-online-academy-fe\\src\\components\\admin\\containers\\TheHeaderDropdown.js":"32","V:\\workspace_js\\wnc-final-project-online-academy-fe\\src\\components\\admin\\containers\\TheFooter.js":"33","V:\\workspace_js\\wnc-final-project-online-academy-fe\\src\\components\\admin\\containers\\TheContent.js":"34","V:\\workspace_js\\wnc-final-project-online-academy-fe\\src\\components\\homeContent\\topCategories\\categoryCard.js":"35","V:\\workspace_js\\wnc-final-project-online-academy-fe\\src\\components\\homeContent\\recommendations\\recommendedVideos.js":"36","V:\\workspace_js\\wnc-final-project-online-academy-fe\\src\\onlineAcademyAppContext.js":"37","V:\\workspace_js\\wnc-final-project-online-academy-fe\\src\\onlineAcademyReducer.js":"38","V:\\workspace_js\\wnc-final-project-online-academy-fe\\src\\components\\admin\\routes.js":"39","V:\\workspace_js\\wnc-final-project-online-academy-fe\\src\\components\\admin\\containers\\_nav.js":"40","V:\\workspace_js\\wnc-final-project-online-academy-fe\\src\\components\\homeContent\\recommendations\\videoCard.js":"41","V:\\workspace_js\\wnc-final-project-online-academy-fe\\src\\components\\admin\\views\\user\\User.js":"42","V:\\workspace_js\\wnc-final-project-online-academy-fe\\src\\components\\admin\\views\\dashboard\\Dashboard.js":"43","V:\\workspace_js\\wnc-final-project-online-academy-fe\\src\\components\\admin\\userContext.js":"44","V:\\workspace_js\\wnc-final-project-online-academy-fe\\src\\components\\admin\\userReducer.js":"45","V:\\workspace_js\\wnc-final-project-online-academy-fe\\src\\components\\homeContent\\featureDiv\\featureCard.js":"46","V:\\workspace_js\\wnc-final-project-online-academy-fe\\src\\components\\admin\\views\\categories\\Category.js":"47","V:\\workspace_js\\wnc-final-project-online-academy-fe\\src\\components\\admin\\categoryReducer.js":"48","V:\\workspace_js\\wnc-final-project-online-academy-fe\\src\\components\\admin\\categoryContext.js":"49","V:\\workspace_js\\wnc-final-project-online-academy-fe\\src\\components\\admin\\views\\courses\\Course.js":"50","V:\\workspace_js\\wnc-final-project-online-academy-fe\\src\\components\\admin\\courseContext.js":"51","V:\\workspace_js\\wnc-final-project-online-academy-fe\\src\\components\\admin\\courseReducer.js":"52","V:\\workspace_js\\wnc-final-project-online-academy-fe\\src\\views\\accountInfo.js":"53","V:\\workspace_js\\wnc-final-project-online-academy-fe\\src\\views\\onlineAcademySignIn.js":"54","V:\\workspace_js\\wnc-final-project-online-academy-fe\\src\\components\\homeContent\\searchCourse.js":"55","V:\\workspace_js\\wnc-final-project-online-academy-fe\\src\\components\\homeContent\\ListCourses.js":"56","V:\\workspace_js\\wnc-final-project-online-academy-fe\\src\\components\\homeContent\\ListCategories.js":"57","V:\\workspace_js\\wnc-final-project-online-academy-fe\\src\\components\\homeContent\\CustomPagination.js":"58","V:\\workspace_js\\wnc-final-project-online-academy-fe\\src\\components\\homeContent\\Course.js":"59","V:\\workspace_js\\wnc-final-project-online-academy-fe\\src\\components\\admin\\views\\widgets\\WidgetsDropdown.js":"60","V:\\workspace_js\\wnc-final-project-online-academy-fe\\src\\components\\admin\\store.js":"61","V:\\workspace_js\\wnc-final-project-online-academy-fe\\src\\components\\admin\\serviceWorker.js":"62","V:\\workspace_js\\wnc-final-project-online-academy-fe\\src\\components\\admin\\polyfill.js":"63"},{"size":924,"mtime":1615385299431,"results":"64","hashOfConfig":"65"},{"size":1267,"mtime":1615837833642,"results":"66","hashOfConfig":"65"},{"size":3813,"mtime":1615542130929,"results":"67","hashOfConfig":"65"},{"size":6920,"mtime":1607966133000,"results":"68","hashOfConfig":"65"},{"size":2915,"mtime":1615394673536,"results":"69","hashOfConfig":"65"},{"size":978,"mtime":1607966133000,"results":"70","hashOfConfig":"65"},{"size":940,"mtime":1615891525484,"results":"71","hashOfConfig":"65"},{"size":807,"mtime":1615877906172,"results":"72","hashOfConfig":"65"},{"size":2516,"mtime":1615878073606,"results":"73","hashOfConfig":"65"},{"size":7766,"mtime":1615877906173,"results":"74","hashOfConfig":"65"},{"size":371,"mtime":1615837668461,"results":"75","hashOfConfig":"65"},{"size":214,"mtime":1613624545017,"results":"76","hashOfConfig":"65"},{"size":4324,"mtime":1615877906110,"results":"77","hashOfConfig":"65"},{"size":413,"mtime":1607966133000,"results":"78","hashOfConfig":"65"},{"size":1129,"mtime":1615837668484,"results":"79","hashOfConfig":"65"},{"size":2128,"mtime":1615837668483,"results":"80","hashOfConfig":"65"},{"size":808,"mtime":1613624545019,"results":"81","hashOfConfig":"65"},{"size":754,"mtime":1613624545029,"results":"82","hashOfConfig":"65"},{"size":1230,"mtime":1613624545018,"results":"83","hashOfConfig":"65"},{"size":1244,"mtime":1613624545029,"results":"84","hashOfConfig":"65"},{"size":912,"mtime":1613624545030,"results":"85","hashOfConfig":"65"},{"size":335,"mtime":1615391778652,"results":"86","hashOfConfig":"65"},{"size":849,"mtime":1613624545021,"results":"87","hashOfConfig":"65"},{"size":1851,"mtime":1613624545028,"results":"88","hashOfConfig":"65"},{"size":983,"mtime":1613624545021,"results":"89","hashOfConfig":"65"},{"size":572,"mtime":1613624545025,"results":"90","hashOfConfig":"65"},{"size":912,"mtime":1613624545023,"results":"91","hashOfConfig":"65"},{"size":1024,"mtime":1613624545024,"results":"92","hashOfConfig":"65"},{"size":1149,"mtime":1615877906158,"results":"93","hashOfConfig":"65"},{"size":1804,"mtime":1615894073715,"results":"94","hashOfConfig":"65"},{"size":1319,"mtime":1615894239992,"results":"95","hashOfConfig":"65"},{"size":914,"mtime":1615835023001,"results":"96","hashOfConfig":"65"},{"size":394,"mtime":1615894039872,"results":"97","hashOfConfig":"65"},{"size":944,"mtime":1615836832391,"results":"98","hashOfConfig":"65"},{"size":373,"mtime":1613624545028,"results":"99","hashOfConfig":"65"},{"size":1941,"mtime":1613624545026,"results":"100","hashOfConfig":"65"},{"size":145,"mtime":1614058540740,"results":"101","hashOfConfig":"65"},{"size":1264,"mtime":1615877906160,"results":"102","hashOfConfig":"65"},{"size":659,"mtime":1615836789532,"results":"103","hashOfConfig":"65"},{"size":520,"mtime":1615893955903,"results":"104","hashOfConfig":"65"},{"size":949,"mtime":1613624545027,"results":"105","hashOfConfig":"65"},{"size":22192,"mtime":1615830886709,"results":"106","hashOfConfig":"65"},{"size":473,"mtime":1615893794842,"results":"107","hashOfConfig":"65"},{"size":145,"mtime":1615633237995,"results":"108","hashOfConfig":"65"},{"size":571,"mtime":1615718525865,"results":"109","hashOfConfig":"65"},{"size":351,"mtime":1613624545022,"results":"110","hashOfConfig":"65"},{"size":18014,"mtime":1615830042362,"results":"111","hashOfConfig":"65"},{"size":571,"mtime":1615734328796,"results":"112","hashOfConfig":"65"},{"size":145,"mtime":1615734393345,"results":"113","hashOfConfig":"65"},{"size":31542,"mtime":1615831024212,"results":"114","hashOfConfig":"65"},{"size":145,"mtime":1615788987906,"results":"115","hashOfConfig":"65"},{"size":571,"mtime":1615788994225,"results":"116","hashOfConfig":"65"},{"size":845,"mtime":1615837800609,"results":"117","hashOfConfig":"65"},{"size":894,"mtime":1615838263646,"results":"118","hashOfConfig":"65"},{"size":1083,"mtime":1615877906159,"results":"119","hashOfConfig":"65"},{"size":1028,"mtime":1615877906148,"results":"120","hashOfConfig":"65"},{"size":1454,"mtime":1615877906140,"results":"121","hashOfConfig":"65"},{"size":918,"mtime":1615877906130,"results":"122","hashOfConfig":"65"},{"size":1466,"mtime":1615877906110,"results":"123","hashOfConfig":"65"},{"size":1770,"mtime":1615894799123,"results":"124","hashOfConfig":"65"},{"size":324,"mtime":1607966133000,"results":"125","hashOfConfig":"65"},{"size":4686,"mtime":1607966133000,"results":"126","hashOfConfig":"65"},{"size":1895,"mtime":1607966133000,"results":"127","hashOfConfig":"65"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},"1mgnj56",{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"143","messages":"144","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"130"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"130"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"130"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"130"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"130"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"193"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"198","messages":"199","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"130"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"203","messages":"204","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"130"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"130"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"130"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"130"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"130"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248","usedDeprecatedRules":"130"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"251","usedDeprecatedRules":"130"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"256","usedDeprecatedRules":"130"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"259","usedDeprecatedRules":"130"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"264","usedDeprecatedRules":"130"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"V:\\workspace_js\\wnc-final-project-online-academy-fe\\src\\index.js",[],["273","274"],"V:\\workspace_js\\wnc-final-project-online-academy-fe\\src\\App.js",[],"V:\\workspace_js\\wnc-final-project-online-academy-fe\\src\\components\\admin\\assets\\icons\\index.js",[],"V:\\workspace_js\\wnc-final-project-online-academy-fe\\src\\components\\admin\\assets\\icons\\logo.js",[],"V:\\workspace_js\\wnc-final-project-online-academy-fe\\src\\components\\admin\\assets\\icons\\logo-negative.js",[],"V:\\workspace_js\\wnc-final-project-online-academy-fe\\src\\components\\admin\\assets\\icons\\sygnet.js",[],"V:\\workspace_js\\wnc-final-project-online-academy-fe\\src\\views\\admin.js",["275","276","277"],"V:\\workspace_js\\wnc-final-project-online-academy-fe\\src\\views\\onlineAcademy.js",["278","279"],"import React, { useEffect, useReducer } from 'react'\r\nimport Header from \"../components/Header\";\r\nimport HomeContent from \"../components/HomeContent\";\r\nimport HomeFooter from \"../components/HomeFooter\";\r\nfunction onlineAcademy() {\r\n    return (\r\n        <div>\r\n            <Header />\r\n            {/* <HeaderPopup />\r\n            <HeaderPrimary /> */}\r\n            <HomeContent />\r\n            {/*    \r\n            <AdImage />\r\n            <Feature1 />\r\n            <Recommendations />\r\n            <Feature2 />\r\n            <FillerDiv />\r\n            <TopCategories />\r\n            <BecomeInstructor />\r\n            <TrustedCompanies />\r\n            <UdemyForBusiness />\r\n            <VideoAdDiv /> */}\r\n            <HomeFooter />\r\n            {/* <Footer /> */}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default onlineAcademy;","V:\\workspace_js\\wnc-final-project-online-academy-fe\\src\\views\\login.js",["280","281","282","283","284","285"],"import React from 'react'\r\nimport { useForm } from 'react-hook-form';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport { axiosInstance, parseJwt } from '../utils';\r\nimport { Link } from 'react-router-dom';\r\nimport { Container, Row, Col, Card, Form, Button, DropdownButton, Dropdown } from 'react-bootstrap';\r\n\r\nexport default function Login(props) {\r\n\tconst { register, handleSubmit, watch, errors } = useForm();\r\n\tconst history = useHistory();\r\n\tconst location = useLocation();\r\n\tconst { from, toAdmin } = location.state || { from: { pathname: '/' } || { toAdmin: { pathname: '/admin' } } };\r\n\tconst onSubmit = async function (data) {\r\n\t\ttry {\r\n\t\t\tconst res = await axiosInstance.post('/auth', data);\r\n\t\t\tif (res.data.authenticated) {\r\n\t\t\t\tlocalStorage.account_accessToken = res.data.accessToken;\r\n\t\t\t\tlocalStorage.account_userID = parseJwt(res.data.accessToken).userId;\r\n\t\t\t\tlocalStorage.account_expToken = parseJwt(res.data.accessToken).exp;\r\n\t\t\t\tlocalStorage.account_refreshToken = res.data.refreshToken;\r\n\t\t\t\tlocalStorage.account_email = data.email;\r\n\t\t\t\t// history.push(from.pathname);\r\n\t\t\t\tif (res.data.type === 3) {\r\n\t\t\t\t\thistory.push(\"/admin\");\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\thistory.replace(from);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\talert('Invalid login.');\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err.response.data);\r\n\t\t}\r\n\t}\r\n\r\n\tconst BackToHome_Clicked = function () {\r\n\t\thistory.push(\"/home\");\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<Row>\r\n\t\t\t\t<Col></Col>\r\n\t\t\t\t<Col xs={6} className=\"mt-4\">\r\n\t\t\t\t\t<Form onSubmit={handleSubmit(onSubmit)}>\r\n\t\t\t\t\t\t<Card>\r\n\t\t\t\t\t\t\t<Card.Body>\r\n\t\t\t\t\t\t\t\t<Card.Title as=\"h3\"><center>Log In</center></Card.Title>\r\n\t\t\t\t\t\t\t\t<hr></hr>\r\n\t\t\t\t\t\t\t\t<Form.Group controlId=\"formBasicEmail\">\r\n\t\t\t\t\t\t\t\t\t<Form.Label>Email:</Form.Label>\r\n\t\t\t\t\t\t\t\t\t<Form.Control type=\"email\" name=\"email\" placeholder=\"Enter email\" ref={register({ required: true })} autoFocus />\r\n\t\t\t\t\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t\t\t\t\t<Form.Group controlId=\"formBasicPassword\">\r\n\t\t\t\t\t\t\t\t\t<Form.Label>Password</Form.Label>\r\n\t\t\t\t\t\t\t\t\t<Form.Control type=\"password\" name=\"password\" placeholder=\"Password\" ref={register({ required: true })} />\r\n\t\t\t\t\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t\t\t\t</Card.Body>\r\n\t\t\t\t\t\t\t<Card.Footer>\r\n\t\t\t\t\t\t\t\t<Button className=\"float-right py-2\" variant=\"primary\" type=\"submit\">Login</Button>\r\n\t\t\t\t\t\t\t\t<Button className=\"float-right mr-3 py-2\" variant=\"danger\" onClick={BackToHome_Clicked}>Cancel</Button>\r\n\t\t\t\t\t\t\t</Card.Footer>\r\n\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t</Form>\r\n\t\t\t\t</Col>\r\n\t\t\t\t<Col></Col>\r\n\t\t\t</Row>\r\n\r\n\t\t</Container>\r\n\t)\r\n}","V:\\workspace_js\\wnc-final-project-online-academy-fe\\src\\views\\signup.js",["286","287","288","289","290","291","292"],"import React, { useState } from 'react'\r\nimport { useForm } from 'react-hook-form';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport { axiosInstance, parseJwt } from '../utils';\r\nimport { Link } from 'react-router-dom';\r\nimport Popup from \"reactjs-popup\";\r\nimport swal from 'sweetalert';\r\nimport {\r\n    Container,\r\n    Row,\r\n    Col,\r\n    Card,\r\n    Form,\r\n    Button\r\n} from 'react-bootstrap';\r\n\r\nexport default function Signup(props) {\r\n    const { register, handleSubmit, watch, errors } = useForm();\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n    const { from } = location.state || { from: { pathname: '/' } };\r\n    const [open, setOpen] = useState(false);\r\n    const [account, setAccount] = useState();\r\n    const onSubmit = async function (data) {\r\n        if (data.password != null && data.password === data.confirmPassword) {\r\n            try {\r\n                data.type = parseInt(data.type);\r\n                delete data.confirmPassword;\r\n                const res = await axiosInstance.post('/users', data);\r\n                if (res.status === 201) {\r\n                    setOpen(true);\r\n                    const res = await axiosInstance.post('/auth', data);\r\n                    if (res.data.authenticated) {\r\n                        setAccount(res.data);\r\n                        localStorage.account_accessToken = res.data.accessToken;\r\n                        localStorage.account_ID = parseJwt(res.data.accessToken).userId;\r\n                        localStorage.account_email = data.email;\r\n                        //axiosInstance.defaults.headers.post['x-access-token'] = res.data.accessToken;\r\n                    }\r\n                    else {\r\n                        alert('Invalid login.');\r\n                    }\r\n                } else if (res.status === 400) {\r\n                    alert(res.message);\r\n                } else {\r\n                    alert('Invalid login.');\r\n                }\r\n            } catch (err) {\r\n                console.log(err.response.data);\r\n            }\r\n        }\r\n    }\r\n    const onSubmitOTPConfirm = async function (data) {\r\n        if (data.otp != null) {\r\n            try {\r\n                console.log(data);\r\n                var acc = {otp:data.otp};\r\n                console.log(acc);\r\n                const res = await axiosInstance.post('/users/otp/validate', acc, {headers: {'x-access-token': localStorage.account_accessToken}});\r\n                if (res.status === 200) {\r\n                    swal({\r\n                        title: \"Account is active\",\r\n                        text: \"You can purchase course\",\r\n                        icon: \"success\",\r\n                        button: \"Go Home\"\r\n                    }).then((value) => {\r\n                        if (value) {\r\n                            cancelButton_Clicked();\r\n                        }\r\n                    });\r\n                } else {\r\n                    swal({\r\n                        title: \"Invalid Code\",\r\n                        text: \"Please try again\",\r\n                        icon: \"warning\",\r\n                        button: \"OK\",\r\n                        dangerMode: false,\r\n                        timer: 1000\r\n                    }).then((value) => {\r\n                        if (value) {\r\n                            setOpen(true);\r\n                        }\r\n                    });\r\n                }\r\n            } catch (err) {\r\n                console.log(err.response.data);\r\n                swal({\r\n                    title: \"Invalid Code\",\r\n                    text: \"Please try again\",\r\n                    icon: \"warning\",\r\n                    buttons:false,\r\n                    timer:1000\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    const cancelButton_Clicked = function () {\r\n        history.push(\"/home\");\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Row>\r\n                {/* <Col><Button variant=\"danger\" size=\"lg\" onClick={cancelButton_Clicked}>Back</Button></Col> */}\r\n                <Col></Col>\r\n                <Col xs={6} className=\"mt-4\">\r\n                    <Form onSubmit={handleSubmit(onSubmit)}>\r\n                        <Card>\r\n                            <Card.Body>\r\n                                <Card.Title as=\"h3\"><center>Sign Up</center></Card.Title>\r\n                                <hr></hr>\r\n                                <Form.Group controlId=\"formBasicFullName\">\r\n                                    <Form.Label>Fullname</Form.Label>\r\n                                    <Form.Control type=\"text\" name=\"fullname\" placeholder=\"Enter fullname\" ref={register({ required: true })} autoFocus />\r\n                                </Form.Group>\r\n\r\n                                <Form.Group controlId=\"formBasicEmail\">\r\n                                    <Form.Label>Email</Form.Label>\r\n                                    <Form.Control type=\"email\" name=\"email\" placeholder=\"Enter email\" ref={register({ required: true })} />\r\n                                </Form.Group>\r\n\r\n                                <Form.Group controlId=\"formBasicPassword\">\r\n                                    <Form.Label>Password</Form.Label>\r\n                                    <Form.Control type=\"password\" name=\"password\" placeholder=\"Password\" ref={register({ required: true })} />\r\n                                </Form.Group>\r\n\r\n                                <Form.Group controlId=\"formBasicConfirmPassword\">\r\n                                    <Form.Label>Confirm Password</Form.Label>\r\n                                    <Form.Control type=\"password\" name=\"confirmPassword\" placeholder=\"Confirm Password\" ref={register({ required: true })} />\r\n                                </Form.Group>\r\n\r\n                                <Form.Group controlId=\"formBasicType\">\r\n                                    <Form.Label>Account Type</Form.Label>\r\n                                    <Form.Control as=\"select\" name=\"type\" ref={register({ required: true })} >\r\n                                        <option value=\"1\">Student</option>\r\n                                    </Form.Control>\r\n                                </Form.Group>      \r\n                            </Card.Body>\r\n                            <Card.Footer>\r\n                                <Button className=\"float-right py-2\" variant=\"primary\" type=\"submit\">Sign up</Button>\r\n                                <Button className=\"float-right mr-3 py-2\" variant=\"danger\" onClick={cancelButton_Clicked}>Cancel</Button>\r\n                            </Card.Footer>\r\n                        </Card>\r\n                    </Form>\r\n                </Col>\r\n                <Col></Col>\r\n            </Row>\r\n            <Row>\r\n                <Col>\r\n                    <Popup open={open} position=\"right center\">\r\n                        <div>\r\n                            <a className=\"close\" onClick={() => setOpen(false)}></a>\r\n                            <Form onSubmit={handleSubmit(onSubmitOTPConfirm)}>\r\n                                <Form.Group controlId=\"formBasicOTP\">\r\n                                    <Form.Label>Please confirm code to active account</Form.Label>\r\n                                    <Form.Control type=\"text\" name=\"otp\" placeholder=\"Enter Confirm Code\" ref={register({ required: true })} autoFocus />\r\n                                </Form.Group>\r\n                                <Button variant=\"primary\" type=\"submit\">Confirm</Button>\r\n                                <Button variant=\"secondary\" onClick={cancelButton_Clicked}>Later</Button>\r\n                            </Form>\r\n                        </div>\r\n                    </Popup>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}","V:\\workspace_js\\wnc-final-project-online-academy-fe\\src\\components\\Header.js",[],"V:\\workspace_js\\wnc-final-project-online-academy-fe\\src\\components\\HomeFooter.js",[],"V:\\workspace_js\\wnc-final-project-online-academy-fe\\src\\components\\HomeContent.js",["293"],"import React from 'react';\r\nimport AdImage from \"../components/homeContent/adImage\";\r\nimport Feature1 from \"../components/homeContent/featureDiv/featureDiv1\";\r\nimport Feature2 from \"../components/homeContent/featureDiv/featureDiv2\";\r\nimport Recommendations from \"../components/homeContent/recommendations/recommendations\";\r\nimport FillerDiv from \"../components/homeContent/fillerDiv\";\r\nimport TopCategories from \"../components/homeContent/topCategories/topCategories\";\r\nimport BecomeInstructor from \"../components/homeContent/becomeInstructor\";\r\nimport TrustedCompanies from \"../components/homeContent/trustedCompanies\";\r\nimport UdemyForBusiness from \"../components/homeContent/udemyForBusiness\";\r\nimport VideoAdDiv from \"../components/homeContent/videoAdDiv\";\r\n\r\nfunction HomeContent() {\r\n    return (\r\n        <div>\r\n            <AdImage />\r\n            <Feature1 />\r\n            <Recommendations />\r\n            <Feature2 />\r\n            <FillerDiv />\r\n            <TopCategories />\r\n            <BecomeInstructor />\r\n            <TrustedCompanies />\r\n            <UdemyForBusiness />\r\n            {/* <VideoAdDiv /> */}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HomeContent;","V:\\workspace_js\\wnc-final-project-online-academy-fe\\src\\components\\admin\\containers\\TheLayout.js",[],"V:\\workspace_js\\wnc-final-project-online-academy-fe\\src\\utils.js",[],"V:\\workspace_js\\wnc-final-project-online-academy-fe\\src\\components\\header\\headerPrimary.js",["294","295"],"import React from \"react\";\r\nimport \"../../components/header/headerPrimary.css\";\r\nimport ShoppingCartOutlinedIcon from \"@material-ui/icons/ShoppingCartOutlined\";\r\nimport SearchOutlinedIcon from \"@material-ui/icons/SearchOutlined\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Button\r\n} from 'react-bootstrap';\r\nfunction HeaderPrimary() {\r\n  const btnLoginIn_Clicked = function() {\r\n\r\n  }\r\n\r\n  return (\r\n    <div className=\"headerPrimary\">\r\n      <div className=\"left part\">\r\n        <div className=\"udemyLogo\">\r\n          <img src=\"..//logo.jpg\" className=\"logo\" alt=\"logo\"></img>\r\n        </div>\r\n        <div className=\"categoriesDiv\">\r\n          <span className=\"categories\">Categories</span>\r\n        </div>\r\n      </div>\r\n      <div className=\"mid part\">\r\n        <div className=\"searchIcon\">\r\n          <SearchOutlinedIcon className=\"icon\" />\r\n        </div>\r\n        <input className=\"searchBar\" placeholder=\"Search for anything\"></input>\r\n      </div>\r\n      <div className=\"right part\">\r\n        <div className=\"businessDiv\">\r\n          <span className=\"business\">Udemy for Business</span>\r\n        </div>\r\n        <div className=\"teachDiv\">\r\n          <span className=\"teach\">Teach on Udemy</span>\r\n        </div>\r\n        <div className=\"cartDiv\">\r\n          <ShoppingCartOutlinedIcon className=\"icon\" />\r\n        </div>\r\n        <Link to=\"/login\" style={{ textDecoration: 'none' }}><div className=\"login button\">Log In</div></Link>\r\n        <Link to=\"/signup\" style={{ textDecoration: 'none' }}><div className=\"signup button\">Sign Up</div></Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HeaderPrimary;\r\n","V:\\workspace_js\\wnc-final-project-online-academy-fe\\src\\components\\header\\headerPopup.js",[],"V:\\workspace_js\\wnc-final-project-online-academy-fe\\src\\components\\homeContent\\udemyForBusiness.js",[],"V:\\workspace_js\\wnc-final-project-online-academy-fe\\src\\components\\footer\\footer.js",[],"V:\\workspace_js\\wnc-final-project-online-academy-fe\\src\\components\\homeContent\\trustedCompanies.js",[],"V:\\workspace_js\\wnc-final-project-online-academy-fe\\src\\components\\homeContent\\videoAdDiv.js",[],"V:\\workspace_js\\wnc-final-project-online-academy-fe\\src\\components\\admin\\containers\\index.js",[],"V:\\workspace_js\\wnc-final-project-online-academy-fe\\src\\components\\homeContent\\becomeInstructor.js",[],"V:\\workspace_js\\wnc-final-project-online-academy-fe\\src\\components\\homeContent\\topCategories\\topCategories.js",[],"V:\\workspace_js\\wnc-final-project-online-academy-fe\\src\\components\\homeContent\\adImage.js",[],"V:\\workspace_js\\wnc-final-project-online-academy-fe\\src\\components\\homeContent\\recommendations\\recommendations.js",[],"V:\\workspace_js\\wnc-final-project-online-academy-fe\\src\\components\\homeContent\\featureDiv\\featureDiv1.js",[],"V:\\workspace_js\\wnc-final-project-online-academy-fe\\src\\components\\homeContent\\featureDiv\\featureDiv2.js",[],"V:\\workspace_js\\wnc-final-project-online-academy-fe\\src\\components\\homeContent\\fillerDiv.js",["296","297","298"],"import React, { useEffect, useReducer } from \"react\";\r\n// import \"../../components/homeContent/fillerDiv.css\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { axiosInstance, refreshToken } from '../../utils'\r\nimport { Card, Row, Col } from 'react-bootstrap';\r\nimport reducer from '../../onlineAcademyReducer';\r\nimport ApppContext from '../../onlineAcademyAppContext';\r\n\r\nfunction FillerDiv() { \r\n  const initialAppState = {\r\n    query: '',\r\n    items: []\r\n  }\r\n\r\n  const [store, dispatch] = useReducer(reducer, initialAppState);\r\n\r\n  useEffect(function() {\r\n    async function loadCourses() {\r\n      const res = await axiosInstance.get(\"/courses\");\r\n      console.log(res);\r\n      dispatch({\r\n        type: 'loadCourses',\r\n        payload: {\r\n          items: res.data,\r\n          query: ''\r\n        }\r\n      });\r\n    }\r\n    loadCourses();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <ApppContext.Provider value={{store, dispatch}}>\r\n      {store.items.map(item => \r\n      <Card key={item.id}>\r\n        <Card.Body>\r\n          <Card.Title><center>{item.title}</center></Card.Title>\r\n          <Card.Text>{item.descriptionShort}</Card.Text>\r\n        </Card.Body>\r\n      </Card>\r\n      )}\r\n      {/* {\r\n        console.log(store.items)\r\n      } */}\r\n      </ApppContext.Provider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FillerDiv;\r\n",["299","300"],"V:\\workspace_js\\wnc-final-project-online-academy-fe\\src\\components\\admin\\containers\\TheHeader.js",["301"],"V:\\workspace_js\\wnc-final-project-online-academy-fe\\src\\components\\admin\\containers\\TheSidebar.js",[],"V:\\workspace_js\\wnc-final-project-online-academy-fe\\src\\components\\admin\\containers\\TheHeaderDropdown.js",["302","303","304","305","306"],"import React from 'react'\nimport {\n\tCBadge,\n\tCDropdown,\n\tCDropdownItem,\n\tCDropdownMenu,\n\tCDropdownToggle,\n\tCImg\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport AccountInfo from \"../../../views/accountInfo\";\n\nconst TheHeaderDropdown = () => {\n\treturn (\n\t\t<CDropdown\n\t\t\tinNav\n\t\t\tclassName=\"c-header-nav-items mx-2\"\n\t\t\tdirection=\"down\"\n\t\t>\n\t\t\t<CDropdownToggle className=\"c-header-nav-link\" caret={false}>\n\t\t\t\t{/* <div className=\"c-avatar\">\n          <CImg\n            src={'avatars/6.jpg'}\n            className=\"c-avatar-img\"\n            alt=\"admin@bootstrapmaster.com\"\n          />\n        </div> */}\n\t\t\t\t<AccountInfo />\n\t\t\t</CDropdownToggle>\n\t\t\t{/* <CDropdownMenu className=\"pt-0\" placement=\"bottom-end\">\n\t\t\t\t<CDropdownItem>\n\t\t\t\t\t\t<CIcon name=\"cil-lock-locked\" className=\"mfe-2\" />\n\t\t\t\tLogout\n\t\t\t\t</CDropdownItem>\n\t\t\t</CDropdownMenu> */}\n\t\t</CDropdown>\n\t)\n}\n\nexport default TheHeaderDropdown\n","V:\\workspace_js\\wnc-final-project-online-academy-fe\\src\\components\\admin\\containers\\TheFooter.js",[],"V:\\workspace_js\\wnc-final-project-online-academy-fe\\src\\components\\admin\\containers\\TheContent.js",["307"],"import React, { Suspense } from 'react'\nimport {\n\tRedirect,\n\tRoute,\n\tSwitch,\n\tLink\n} from 'react-router-dom'\nimport { CContainer, CFade } from '@coreui/react'\n\n// routes config\nimport routes from '../routes'\n\nconst loading = (\n\t<div className=\"pt-3 text-center\">\n\t\t<div className=\"sk-spinner sk-spinner-pulse\"></div>\n\t</div>\n)\n\nconst TheContent = () => {\n\treturn (\n\t\t<main className=\"c-main\">\n\t\t\t<CContainer fluid>\n\t\t\t\t<Suspense fallback={loading}>\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t{routes.map((route, idx) => {\n\t\t\t\t\t\t\treturn route.component && (\n\t\t\t\t\t\t\t\t<Route\n\t\t\t\t\t\t\t\t\tkey={idx}\n\t\t\t\t\t\t\t\t\tpath={route.path}\n\t\t\t\t\t\t\t\t\texact={route.exact}\n\t\t\t\t\t\t\t\t\tname={route.name}\n\t\t\t\t\t\t\t\t\trender={props => (\n\t\t\t\t\t\t\t\t\t\t<CFade>\n\t\t\t\t\t\t\t\t\t\t\t<route.component {...props} />\n\t\t\t\t\t\t\t\t\t\t</CFade>\n\t\t\t\t\t\t\t\t\t)} />\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t})}\n\t\t\t\t\t\t<Redirect from=\"/\" to=\"/admin/dashboard\" />\n\t\t\t\t\t</Switch>\n\t\t\t\t</Suspense>\n\t\t\t</CContainer>\n\t\t</main>\n\t)\n}\n\nexport default React.memo(TheContent)\n","V:\\workspace_js\\wnc-final-project-online-academy-fe\\src\\components\\homeContent\\topCategories\\categoryCard.js",[],"V:\\workspace_js\\wnc-final-project-online-academy-fe\\src\\components\\homeContent\\recommendations\\recommendedVideos.js",[],"V:\\workspace_js\\wnc-final-project-online-academy-fe\\src\\onlineAcademyAppContext.js",[],"V:\\workspace_js\\wnc-final-project-online-academy-fe\\src\\onlineAcademyReducer.js",["308"],"export default function reducer(state, action) {\r\n    switch (action.type) {\r\n      case 'loadCourses':\r\n        return {\r\n          query: action.payload.query,\r\n          items: action.payload.items\r\n        }\r\n  \r\n    //   case 'add_item':\r\n    //     return {\r\n    //       ...state,\r\n    //       items: [...state.items, action.payload]\r\n    //     }\r\n  \r\n    //   case 'update_query':\r\n    //     return {\r\n    //       ...state,\r\n    //       query: action.payload.query\r\n    //     }\r\n  \r\n    //   case 'finish_task':\r\n    //     return {\r\n    //       ...state,\r\n    //       items: state.items.map(item => item.id === action.payload.id ? { ...item, complete: true } : item)\r\n    //     }\r\n  \r\n    //   default:\r\n    //     return state;\r\n     }\r\n  }","V:\\workspace_js\\wnc-final-project-online-academy-fe\\src\\components\\admin\\routes.js",[],"V:\\workspace_js\\wnc-final-project-online-academy-fe\\src\\components\\admin\\containers\\_nav.js",[],"V:\\workspace_js\\wnc-final-project-online-academy-fe\\src\\components\\homeContent\\recommendations\\videoCard.js",[],"V:\\workspace_js\\wnc-final-project-online-academy-fe\\src\\components\\admin\\views\\user\\User.js",["309","310","311","312","313","314","315","316","317"],"import React, { lazy, useState, useEffect, useReducer, forwardRef } from 'react'\r\nimport { axiosInstance, parseJwt } from '../../../../utils';\r\nimport { useForm } from 'react-hook-form';\r\nimport { Modal, Button, Form, FormCheck, Col, Row, ToggleButtonGroup, ToggleButton, ButtonGroup } from 'react-bootstrap';\r\nimport reducer from '../../userReducer';\r\nimport AppContext from '../../userContext';\r\nimport swal from 'sweetalert';\r\n\r\nimport MaterialTable from 'material-table';\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport DetailsIcon from '@material-ui/icons/Details';\r\nimport { Label } from '@material-ui/icons';\r\n\r\n\r\n\r\nexport default function User(props) {\r\n\tconst [userTable, setUserTable] = useState([]);\r\n\tconst { register, handleSubmit, watch, errors } = useForm();\r\n\tconst [showModalDetail, setShowModalDetail] = useState(false);\r\n\tconst [showModalEdit, setShowModalEdit] = useState(false);\r\n\tconst [showModalDelete, setShowModalDelete] = useState(false);\r\n\tconst [showModalNew, setShowModalNew] = useState(false);\r\n\tconst [disableChangePassword, setDisableChangePassword] = useState(true);\r\n\tconst handleDisableChangePassword = () => { disableChangePassword ? setDisableChangePassword(false) : setDisableChangePassword(true) };\r\n\tconst [disableChangeStatus, setDisableChangeStatus] = useState(true);\r\n\tconst handleDisableChangeStatus = () => { disableChangeStatus ? setDisableChangeStatus(false) : setDisableChangeStatus(true) };\r\n\tconst handleShowModelDetail = () => setShowModalDetail(true);\r\n\tconst handleCloseModalDetail = () => setShowModalDetail(false);\r\n\tconst handleShowModelEdit = () => setShowModalEdit(true);\r\n\tconst handleCloseModalEdit = () => setShowModalEdit(false);\r\n\tconst handleShowModelDelete = () => setShowModalDelete(true);\r\n\tconst handleCloseModalDelete = () => setShowModalDelete(false);\r\n\tconst handleShowModelNew = () => setShowModalNew(true);\r\n\tconst handleCloseModalNew = () => setShowModalNew(false);\r\n\tconst [radioValue, setRadioValue] = useState('1');\r\n\tconst initialUserData = { query: '', items: [] }\r\n\tconst [store, dispatch] = useReducer(reducer, initialUserData);\r\n\tconst defaulteUser = { id: null, email: null, fullname: null }\r\n\r\n\tuseEffect(function () {\r\n\t\tasync function loadDataUser() {\r\n\t\t\tconst res = await axiosInstance.get('/users', { headers: { 'x-access-token': localStorage.account_accessToken } });\r\n\t\t\tif (res.status === 200) {\r\n\t\t\t\tres.data.map(item => {\r\n\t\t\t\t\treturn item.type===1?item.typeName=\"Student\":item.type===2?item.typeName=\"Teacher\":item.type===3?item.typeName=\"Admin\":\"\"; \r\n\t\t\t\t});\r\n\t\t\t\tdispatch({\r\n\t\t\t\t\ttype: 'init',\r\n\t\t\t\t\tpayload: {\r\n\t\t\t\t\t\titems: res.data,\r\n\t\t\t\t\t\tquery: ''\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t\tloadDataUser();\r\n\t}, []);\r\n\tconst radios = [\r\n\t\t{ name: 'Show all account', value: '1' },\r\n\t\t{ name: 'Show only teacher account', value: '2' },\r\n\t\t{ name: 'Show only student account', value: '3' },\r\n\t];\r\n\tconst columns = [\r\n\t\t{ title: \"ID\", field: \"id\" },\r\n\t\t{ title: \"Fullname\", field: \"fullname\" },\r\n\t\t{ title: \"Email\", field: \"email\" },\r\n\t\t{ title: \"Type\", field: \"typeName\" }\r\n\t];\r\n\r\n\tconst tableIcons = {\r\n\t\tAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n\t\tCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n\t\tClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n\t\tDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n\t\tDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n\t\tEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n\t\tExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n\t\tFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n\t\tFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n\t\tLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n\t\tNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n\t\tPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n\t\tResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n\t\tSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n\t\tSortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n\t\tThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n\t\tViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\r\n\t\tDetailsIcon: forwardRef((props, ref) => <DetailsIcon {...props} ref={ref} />)\r\n\t};\r\n\tconst reLoadDataUser = async function () {\r\n\t\tconst res = await axiosInstance.get('/users', { headers: { 'x-access-token': localStorage.account_accessToken } });\r\n\t\tif (res.status === 200) {\r\n\t\t\tres.data.map(item => {\r\n\t\t\t\treturn item.type===1?item.typeName=\"Student\":item.type===2?item.typeName=\"Teacher\":item.type===3?item.typeName=\"Admin\":\"\"; \r\n\t\t\t});\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: 'init',\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\titems: res.data,\r\n\t\t\t\t\tquery: ''\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\tconst reLoadDataOnlyTeacher = async function () {\r\n\t\tconst res = await axiosInstance.get('/users/teacher', { headers: { 'x-access-token': localStorage.account_accessToken } });\r\n\t\tif (res.status === 200) {\r\n\t\t\tres.data.map(item => {\r\n\t\t\t\treturn item.type===1?item.typeName=\"Student\":item.type===2?item.typeName=\"Teacher\":item.type===3?item.typeName=\"Admin\":\"\"; \r\n\t\t\t});\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: 'init',\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\titems: res.data,\r\n\t\t\t\t\tquery: ''\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\tconst reLoadDataOnlyStudent = async function () {\r\n\t\tconst res = await axiosInstance.get('/users/student', { headers: { 'x-access-token': localStorage.account_accessToken } });\r\n\t\tif (res.status === 200) {\r\n\t\t\tres.data.map(item => {\r\n\t\t\t\treturn item.type===1?item.typeName=\"Student\":item.type===2?item.typeName=\"Teacher\":item.type===3?item.typeName=\"Admin\":\"\"; \r\n\t\t\t});\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: 'init',\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\titems: res.data,\r\n\t\t\t\t\tquery: ''\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tconst handleFilterShowAccount = async function(value) {\r\n\t\tswitch(parseInt(value)) {\r\n\t\t\tcase 1:\r\n\t\t\t\tawait reLoadDataUser();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 2:\r\n\t\t\t\tawait reLoadDataOnlyTeacher();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 3:\r\n\t\t\t\tawait reLoadDataOnlyStudent();\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\tconst handleDetail = async function (dataRow) {\r\n\t\tsetUserTable(defaulteUser);\r\n\t\tlet id = dataRow.id;\r\n\t\t// let res = await axiosInstance.get('/users/' + id, { headers: { 'x-access-token': localStorage.account_accessToken } });\r\n\t\t// if (res.status === 200) {\r\n\t\t// \tsetUserTable(res.data);\r\n\t\t// }\r\n\t\tsetUserTable((store.items.filter(item => item.id===id))[0]);\r\n\t\thandleShowModelDetail();\r\n\t}\r\n\r\n\tconst handleEdit = async function (dataRow) {\r\n\t\tsetUserTable(defaulteUser);\r\n\t\tlet id = dataRow.id;\r\n\t\t// let res = await axiosInstance.get('/users/' + id, { headers: { 'x-access-token': localStorage.account_accessToken } });\r\n\t\t// if (res.status === 200) {\r\n\t\t// \tsetUserTable(res.data);\r\n\t\t// }\r\n\t\tsetUserTable((store.items.filter(item => item.id===id))[0]);\r\n\t\thandleShowModelEdit();\r\n\t}\r\n\r\n\tconst handleDelete = async function (dataRow) {\r\n\t\tsetUserTable(defaulteUser);\r\n\t\tlet id = dataRow.id;\r\n\t\t// let res = await axiosInstance.get('/users/' + id, { headers: { 'x-access-token': localStorage.account_accessToken } });\r\n\t\t// if (res.status === 200) {\r\n\t\t// \tsetUserTable(res.data);\r\n\t\t// }\r\n\t\tsetUserTable((store.items.filter(item => item.id===id))[0]);\r\n\t\thandleShowModelDelete();\r\n\t}\r\n\r\n\tconst handleNew = async function (dataRow) {\r\n\t\thandleShowModelNew();\r\n\t}\r\n\r\n\tconst onSubmitUpdateUser = async function (data) {\r\n\t\ttry {\r\n\t\t\tif (data != null && data.id > 0) {\r\n\t\t\t\tlet id = data.id;\r\n\t\t\t\tdata.type = parseInt(data.type);\r\n\t\t\t\tdata.isActive = parseInt(data.isActive);\r\n\t\t\t\tdelete data.id;\r\n\t\t\t\tlet res = await axiosInstance.put('/users/' + id, data, {\r\n\t\t\t\t\theaders: { 'x-access-token': localStorage.account_accessToken }\r\n\t\t\t\t});\r\n\t\t\t\tif (res.status === 200) {\r\n\t\t\t\t\treLoadDataUser();\r\n\t\t\t\t\tswal({\r\n\t\t\t\t\t\ttitle: \"Account is updated\",\r\n\t\t\t\t\t\ttext: \"User ID \" + id + \" updated\",\r\n\t\t\t\t\t\ticon: \"success\",\r\n\t\t\t\t\t\tbutton: \"OK\"\r\n\t\t\t\t\t});\r\n\t\t\t\t\thandleCloseModalEdit();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tswal({\r\n\t\t\t\t\t\ttitle: \"Failed\",\r\n\t\t\t\t\t\ticon: \"danger\",\r\n\t\t\t\t\t\tbutton: \"OK\"\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tswal({\r\n\t\t\t\t\ttitle: \"Failed\",\r\n\t\t\t\t\ticon: \"danger\",\r\n\t\t\t\t\tbutton: \"OK\"\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err.response.data);\r\n\t\t}\r\n\t}\r\n\r\n\tconst onSubmitDeleteUser = async function (data) {\r\n\t\ttry {\r\n\t\t\tif (data != null && data.id > 0) {\r\n\t\t\t\tlet id = data.id;\r\n\t\t\t\tlet res = await axiosInstance.delete('/users/' + id, {\r\n\t\t\t\t\theaders: { 'x-access-token': localStorage.account_accessToken }\r\n\t\t\t\t});\r\n\t\t\t\tif (res.status === 200) {\r\n\t\t\t\t\treLoadDataUser();\r\n\t\t\t\t\tswal({\r\n\t\t\t\t\t\ttitle: \"Account is deleted\",\r\n\t\t\t\t\t\ttext: \"User ID \" + id + \" deleted\",\r\n\t\t\t\t\t\ticon: \"success\",\r\n\t\t\t\t\t\tbutton: \"OK\"\r\n\t\t\t\t\t});\r\n\t\t\t\t\thandleCloseModalDelete();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tswal({\r\n\t\t\t\t\t\ttitle: \"Failed\",\r\n\t\t\t\t\t\ticon: \"danger\",\r\n\t\t\t\t\t\tbutton: \"OK\"\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tswal({\r\n\t\t\t\t\ttitle: \"Failed\",\r\n\t\t\t\t\ticon: \"danger\",\r\n\t\t\t\t\tbutton: \"OK\"\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err.response.data);\r\n\t\t}\r\n\t}\r\n\r\n\tconst onSubmitNewUser = async function (data) {\r\n\t\ttry {\r\n\t\t\tif (data != null) {\r\n\t\t\t\tdata.type = parseInt(data.type);\r\n\t\t\t\tlet res = await axiosInstance.post('/users', data, {\r\n\t\t\t\t\theaders: { 'x-access-token': localStorage.account_accessToken }\r\n\t\t\t\t});\r\n\t\t\t\tif (res.status === 201) {\r\n\t\t\t\t\treLoadDataUser();\r\n\t\t\t\t\tswal({\r\n\t\t\t\t\t\ttitle: \"Account is created\",\r\n\t\t\t\t\t\ttext: \"User ID \" + res.data.id + \" created\",\r\n\t\t\t\t\t\ticon: \"success\",\r\n\t\t\t\t\t\tbutton: \"OK\"\r\n\t\t\t\t\t});\r\n\t\t\t\t\t//handleCloseModalNew();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tswal({\r\n\t\t\t\t\t\ttitle: \"Failed\",\r\n\t\t\t\t\t\ticon: \"danger\",\r\n\t\t\t\t\t\tbutton: \"OK\"\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tswal({\r\n\t\t\t\t\ttitle: \"Failed\",\r\n\t\t\t\t\ticon: \"danger\",\r\n\t\t\t\t\tbutton: \"OK\"\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err.response.data);\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<AppContext.Provider value={{ store, dispatch }}>\r\n\t\t\t\t<div className=\"container mt-3\">\r\n\t\t\t\t\t<div className=\"row mt-3\">\r\n\t\t\t\t\t\t<div className=\"col-sm-12\">\r\n\t\t\t\t\t\t\t<div className=\"card shadow\">\r\n\t\t\t\t\t\t\t\t<h3 className=\"card-header d-flex\">\r\n\t\t\t\t\t\t\t\t\tUser List from Academy\r\n            </h3>\r\n\t\t\t\t\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t\t\t\t<button className=\"btn btn-warning\" onClick={reLoadDataUser}>Reload</button>\r\n\t\t\t\t\t\t\t\t\t\t<button className=\"btn btn-primary\" onClick={handleNew}>New Account Teacher</button>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t\t\t\t<ButtonGroup toggle>\r\n\t\t\t\t\t\t\t\t\t\t\t{radios.map((radio, idx) => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<ToggleButton\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={idx}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"radio\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"secondary\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tname=\"radio\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={radio.value}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tchecked={radioValue === radio.value}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => {setRadioValue(e.currentTarget.value); handleFilterShowAccount(e.currentTarget.value);}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{radio.name}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</ToggleButton>\r\n\t\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t\t</ButtonGroup>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<br></br>\r\n\t\t\t\t\t\t\t\t\t<div style={{ maxWidth: '100%' }}>\r\n\t\t\t\t\t\t\t\t\t\t<MaterialTable columns={columns} data={store.items} icons={tableIcons} title={null}\r\n\t\t\t\t\t\t\t\t\t\t\tactions={[\r\n\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ticon: tableIcons.DetailsIcon,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttooltip: 'Detail User',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick: (event, rowData) => handleDetail(rowData)\r\n\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ticon: tableIcons.Edit,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttooltip: 'Modify user',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick: (event, rowData) => handleEdit(rowData)\r\n\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ticon: tableIcons.Delete,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttooltip: 'Delete User',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick: (event, rowData) => handleDelete(rowData)\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t]}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"card-footer text-muted\">\r\n\t\t\t\t\t\t\t\t\tFooter\r\n          </div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<Modal show={showModalDetail} onHide={handleCloseModalDetail}>\r\n\t\t\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t\t\t<Modal.Title>Detail User</Modal.Title>\r\n\t\t\t\t\t</Modal.Header>\r\n\t\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t\t<Form>\r\n\t\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t\t\t<Form.Group >\r\n\t\t\t\t\t\t\t\t\t\t<Form.Label>ID</Form.Label>\r\n\t\t\t\t\t\t\t\t\t\t<Form.Control type=\"text\" name=\"id\" value={userTable.id == null ? \"\" : userTable.id} readOnly />\r\n\t\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t\t<Form.Group >\r\n\t\t\t\t\t\t\t\t\t\t<Form.Label>Fullname</Form.Label>\r\n\t\t\t\t\t\t\t\t\t\t<Form.Control type=\"text\" name=\"fullname\" value={userTable.fullname == null ? \"\" : userTable.fullname} readOnly />\r\n\t\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t\t<Form.Group >\r\n\t\t\t\t\t\t\t\t\t\t<Form.Label>Email</Form.Label>\r\n\t\t\t\t\t\t\t\t\t\t<Form.Control type=\"email\" name=\"email\" value={userTable.email == null ? \"\" : userTable.email} readOnly />\r\n\t\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t\t<Form.Group >\r\n\t\t\t\t\t\t\t\t\t\t<Form.Label>Type</Form.Label>\r\n\t\t\t\t\t\t\t\t\t\t<Form.Control type=\"text\" name=\"type\" value={userTable.type == null ? \"\" : userTable.type === 1 ? \"Student\" : userTable.type === 2 ? \"Teacher\" : \"Admin\"} readOnly />\r\n\t\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t\t\t<Form.Group >\r\n\t\t\t\t\t\t\t\t\t\t<Form.Label>Active</Form.Label>\r\n\t\t\t\t\t\t\t\t\t\t<Form.Control type=\"text\" name=\"isActive\" value={userTable.isActive == null ? \"\" : userTable.isActive === 1 ? \"Yes\" : \"No\"} readOnly />\r\n\t\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t\t<Form.Group >\r\n\t\t\t\t\t\t\t\t\t\t<Form.Label>Watch List</Form.Label>\r\n\t\t\t\t\t\t\t\t\t\t<Form.Control type=\"text\" name=\"watchlist\" value={userTable.watchlist == null ? \"\" : userTable.watchlist} readOnly />\r\n\t\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t\t<Form.Group >\r\n\t\t\t\t\t\t\t\t\t\t<Form.Label>Created Date</Form.Label>\r\n\t\t\t\t\t\t\t\t\t\t<Form.Control type=\"text\" name=\"createdDate\" value={userTable.createdDate == null ? \"\" : userTable.createdDate} readOnly />\r\n\t\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t\t<Form.Group >\r\n\t\t\t\t\t\t\t\t\t\t<Form.Label>Modified Date</Form.Label>\r\n\t\t\t\t\t\t\t\t\t\t<Form.Control type=\"text\" name=\"modifiedDate\" value={userTable.modifiedDate == null ? \"\" : userTable.modifiedDate} readOnly />\r\n\t\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t</Modal.Body>\r\n\t\t\t\t\t<Modal.Footer>\r\n\t\t\t\t\t\t<Button variant=\"secondary\" onClick={handleCloseModalDetail}>Close</Button>\r\n\t\t\t\t\t</Modal.Footer>\r\n\t\t\t\t</Modal>\r\n\t\t\t\t<Modal show={showModalEdit} onHide={handleCloseModalEdit}>\r\n\t\t\t\t\t<Form onSubmit={handleSubmit(onSubmitUpdateUser)}>\r\n\t\t\t\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t\t\t\t<Modal.Title>Update User</Modal.Title>\r\n\t\t\t\t\t\t</Modal.Header>\r\n\t\t\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t\t\t<Form.Group >\r\n\t\t\t\t\t\t\t\t<Form.Label>ID</Form.Label>\r\n\t\t\t\t\t\t\t\t<Form.Control type=\"text\" name=\"id\" value={userTable.id == null ? \"\" : userTable.id} ref={register({ required: true })} readOnly />\r\n\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t<Form.Group >\r\n\t\t\t\t\t\t\t\t<Form.Label>Fullname</Form.Label>\r\n\t\t\t\t\t\t\t\t<Form.Control type=\"text\" name=\"fullname\" defaultValue={userTable.fullname == null ? \"\" : userTable.fullname} ref={register({ required: true })} autoFocus />\r\n\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t{/* <Form.Group >\r\n\t\t\t\t\t\t\t\t<Form.Check type=\"switch\" id=\"custom-switch\" label=\"Change password\" onChange={handleDisableChangePassword}/>\r\n\t\t\t\t\t\t\t\t<Form.Label>Password</Form.Label>\r\n\t\t\t\t\t\t\t\t<Form.Control type=\"text\" name=\"password\" ref={register({ required: !{disableChangePassword} })} disabled={disableChangePassword} />\r\n\t\t\t\t\t\t\t</Form.Group> */}\r\n\t\t\t\t\t\t\t<Form.Group >\r\n\t\t\t\t\t\t\t\t<Form.Label>Email</Form.Label>\r\n\t\t\t\t\t\t\t\t<Form.Control type=\"email\" name=\"email\" defaultValue={userTable.email == null ? \"\" : userTable.email} ref={register({ required: true })} readOnly />\r\n\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t<Form.Group>\r\n\t\t\t\t\t\t\t\t<Form.Label>Type</Form.Label>\r\n\t\t\t\t\t\t\t\t<Form.Control as=\"select\" name=\"type\" defaultValue={userTable.id == null ? -1 : userTable.type == null ? \"\" : userTable.type === 1 ? 1 : userTable.type === 2 ? 2 : 3} ref={register({ required: true })} >\r\n\t\t\t\t\t\t\t\t\t<option value=\"1\">Student</option>\r\n\t\t\t\t\t\t\t\t\t<option value=\"2\">Teacher</option>\r\n\t\t\t\t\t\t\t\t\t<option value=\"3\">Admin</option>\r\n\t\t\t\t\t\t\t\t</Form.Control>\r\n\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t<Form.Group>\r\n\t\t\t\t\t\t\t\t<Form.Label>Active</Form.Label>\r\n\t\t\t\t\t\t\t\t<Form.Control as=\"select\" name=\"isActive\" defaultValue={userTable.id == null ? \"\" : userTable.isActive == null ? \"\" : userTable.isActive === 1 ? 1 : 0} ref={register({ required: true })} >\r\n\t\t\t\t\t\t\t\t\t<option value=\"1\">Yes</option>\r\n\t\t\t\t\t\t\t\t\t<option value=\"0\">No</option>\r\n\t\t\t\t\t\t\t\t</Form.Control>\r\n\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t{/* <Form.Group>\r\n\t\t\t\t\t\t\t\t<Form.Label>Status</Form.Label>\r\n\t\t\t\t\t\t\t\t<Form.Check type=\"switch\" id=\"custom-switch\" label=\"Restore user\" onChange={handleDisableChangeStatus} disabled={userTable.isDeleted == null ? true : userTable.isDeleted === 1 ? false : true} />\r\n\t\t\t\t\t\t\t\t<Form.Control as=\"select\" name=\"isActive\" defaultValue={userTable.isDeleted == null ? \"\" : userTable.isDeleted === 1 ? 1 : 0} ref={register({ required: !{disableChangeStatus} })} disabled={disableChangeStatus}>\r\n\t\t\t\t\t\t\t\t\t<option value=\"1\">User is deleted</option>\r\n\t\t\t\t\t\t\t\t\t<option value=\"0\">User is live</option>\r\n\t\t\t\t\t\t\t\t</Form.Control>\r\n\t\t\t\t\t\t\t</Form.Group> */}\r\n\t\t\t\t\t\t\t{/* <Form.Group >\r\n\t\t\t\t\t\t\t\t<Form.Label>Watch List</Form.Label>\r\n\t\t\t\t\t\t\t\t<Form.Control type=\"text\" name=\"watchlist\" defaultValue={userTable.watchlist == null ? \"\" : userTable.watchlist} ref={register({ required: false })} />\r\n\t\t\t\t\t\t\t</Form.Group> */}\r\n\t\t\t\t\t\t</Modal.Body>\r\n\t\t\t\t\t\t<Modal.Footer>\r\n\t\t\t\t\t\t\t<Button variant=\"primary\" type=\"submit\">Update</Button>\r\n\t\t\t\t\t\t\t<Button variant=\"secondary\" onClick={handleCloseModalEdit}>Close</Button>\r\n\t\t\t\t\t\t</Modal.Footer>\r\n\t\t\t\t\t</Form>\r\n\t\t\t\t</Modal>\r\n\t\t\t\t<Modal show={showModalDelete} onHide={handleCloseModalDelete}>\r\n\t\t\t\t\t<Form onSubmit={handleSubmit(onSubmitDeleteUser)}>\r\n\t\t\t\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t\t\t\t<Modal.Title>Delete User</Modal.Title>\r\n\t\t\t\t\t\t</Modal.Header>\r\n\t\t\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t\t\t<Form.Group >\r\n\t\t\t\t\t\t\t\t\t\t<Form.Label>ID</Form.Label>\r\n\t\t\t\t\t\t\t\t\t\t<Form.Control type=\"text\" name=\"id\" defaultValue={userTable.id == null ? \"\" : userTable.id} ref={register({ required: false })} readOnly />\r\n\t\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t\t<Form.Group >\r\n\t\t\t\t\t\t\t\t\t\t<Form.Label>Fullname</Form.Label>\r\n\t\t\t\t\t\t\t\t\t\t<Form.Control type=\"text\" name=\"fullname\" defaultValue={userTable.fullname == null ? \"\" : userTable.fullname} readOnly />\r\n\t\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t\t<Form.Group >\r\n\t\t\t\t\t\t\t\t\t\t<Form.Label>Email</Form.Label>\r\n\t\t\t\t\t\t\t\t\t\t<Form.Control type=\"text\" name=\"email\" defaultValue={userTable.email == null ? \"\" : userTable.email} readOnly />\r\n\t\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t\t<Form.Group >\r\n\t\t\t\t\t\t\t\t\t\t<Form.Label>Type</Form.Label>\r\n\t\t\t\t\t\t\t\t\t\t<Form.Control type=\"text\" name=\"type\" defaultValue={userTable.type == null ? \"\" : userTable.type === 1 ? \"Student\" : userTable.type === 2 ? \"Teacher\" : \"Admin\"} readOnly />\r\n\t\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t\t\t<Form.Group >\r\n\t\t\t\t\t\t\t\t\t\t<Form.Label>Active</Form.Label>\r\n\t\t\t\t\t\t\t\t\t\t<Form.Control type=\"text\" name=\"isActive\" defaultValue={userTable.isActive == null ? \"\" : userTable.isActive === 1 ? \"Yes\" : \"No\"} readOnly />\r\n\t\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t\t<Form.Group >\r\n\t\t\t\t\t\t\t\t\t\t<Form.Label>Watch List</Form.Label>\r\n\t\t\t\t\t\t\t\t\t\t<Form.Control type=\"text\" name=\"watchlist\" defaultValue={userTable.watchlist == null ? \"\" : userTable.watchlist} readOnly />\r\n\t\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t\t<Form.Group >\r\n\t\t\t\t\t\t\t\t\t\t<Form.Label>Created Date</Form.Label>\r\n\t\t\t\t\t\t\t\t\t\t<Form.Control type=\"text\" name=\"createdDate\" defaultValue={userTable.createdDate == null ? \"\" : userTable.createdDate} readOnly />\r\n\t\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t\t<Form.Group >\r\n\t\t\t\t\t\t\t\t\t\t<Form.Label>Modified Date</Form.Label>\r\n\t\t\t\t\t\t\t\t\t\t<Form.Control type=\"text\" name=\"modifiedDate\" defaultValue={userTable.modifiedDate == null ? \"\" : userTable.modifiedDate} readOnly />\r\n\t\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t</Row>\r\n\r\n\t\t\t\t\t\t</Modal.Body>\r\n\t\t\t\t\t\t<Modal.Footer>\r\n\t\t\t\t\t\t\t<Button variant=\"danger\" type=\"submit\">Delete</Button>\r\n\t\t\t\t\t\t\t<Button variant=\"secondary\" onClick={handleCloseModalDelete}>Close</Button>\r\n\t\t\t\t\t\t</Modal.Footer>\r\n\t\t\t\t\t</Form>\r\n\t\t\t\t</Modal>\r\n\t\t\t\t<Modal show={showModalNew} onHide={handleCloseModalNew}>\r\n\t\t\t\t\t<Form onSubmit={handleSubmit(onSubmitNewUser)}>\r\n\t\t\t\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t\t\t\t<Modal.Title>New User</Modal.Title>\r\n\t\t\t\t\t\t</Modal.Header>\r\n\t\t\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t\t\t<Form.Group >\r\n\t\t\t\t\t\t\t\t<Form.Label>Fullname</Form.Label>\r\n\t\t\t\t\t\t\t\t<Form.Control type=\"text\" name=\"fullname\" ref={register({ required: true })} autoFocus />\r\n\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t<Form.Group >\r\n\t\t\t\t\t\t\t\t<Form.Label>Email</Form.Label>\r\n\t\t\t\t\t\t\t\t<Form.Control type=\"email\" name=\"email\" ref={register({ required: true })} />\r\n\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t<Form.Group >\r\n\t\t\t\t\t\t\t\t<Form.Label>Password</Form.Label>\r\n\t\t\t\t\t\t\t\t<Form.Control type=\"password\" name=\"password\" ref={register({ required: true })} />\r\n\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t<Form.Group>\r\n\t\t\t\t\t\t\t\t<Form.Label>Type</Form.Label>\r\n\t\t\t\t\t\t\t\t<Form.Control as=\"select\" name=\"type\" ref={register({ required: true })} >\r\n\t\t\t\t\t\t\t\t\t<option value=\"2\">Teacher</option>\r\n\t\t\t\t\t\t\t\t\t<option value=\"3\">Admin</option>\r\n\t\t\t\t\t\t\t\t</Form.Control>\r\n\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t</Modal.Body>\r\n\t\t\t\t\t\t<Modal.Footer>\r\n\t\t\t\t\t\t\t<Button variant=\"success\" type=\"submit\">Create</Button>\r\n\t\t\t\t\t\t\t<Button variant=\"secondary\" onClick={handleCloseModalNew}>Close</Button>\r\n\t\t\t\t\t\t</Modal.Footer>\r\n\t\t\t\t\t</Form>\r\n\t\t\t\t</Modal>\r\n\t\t\t</AppContext.Provider>\r\n\t\t</div>\r\n\t);\r\n}\r\n","V:\\workspace_js\\wnc-final-project-online-academy-fe\\src\\components\\admin\\views\\dashboard\\Dashboard.js",["318","319","320","321","322","323","324","325","326","327","328","329","330"],"V:\\workspace_js\\wnc-final-project-online-academy-fe\\src\\components\\admin\\userContext.js",[],"V:\\workspace_js\\wnc-final-project-online-academy-fe\\src\\components\\admin\\userReducer.js",[],"V:\\workspace_js\\wnc-final-project-online-academy-fe\\src\\components\\homeContent\\featureDiv\\featureCard.js",[],"V:\\workspace_js\\wnc-final-project-online-academy-fe\\src\\components\\admin\\views\\categories\\Category.js",["331","332","333","334","335","336","337"],"import React, { lazy, useState, useEffect, useReducer, forwardRef } from 'react'\r\nimport { axiosInstance, parseJwt } from '../../../../utils';\r\nimport { useForm } from 'react-hook-form';\r\nimport { Modal, Button, Form, FormCheck, Col, Row } from 'react-bootstrap';\r\nimport reducer from '../../categoryReducer';\r\nimport AppContext from '../../categoryContext';\r\nimport swal from 'sweetalert';\r\n\r\nimport MaterialTable from 'material-table';\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport DetailsIcon from '@material-ui/icons/Details';\r\n\r\n\r\n\r\nexport default function Category(props) {\r\n\tconst [categoryTable, setCategoryTable] = useState([]);\r\n\tconst { register, handleSubmit, watch, errors } = useForm();\r\n\tconst [showModalDetail, setShowModalDetail] = useState(false);\r\n\tconst [showModalEdit, setShowModalEdit] = useState(false);\r\n\tconst [showModalDelete, setShowModalDelete] = useState(false);\r\n\tconst [showModalNew, setShowModalNew] = useState(false);\r\n\tconst [disableChangePassword, setDisableChangePassword] = useState(true);\r\n\tconst handleDisableChangePassword = () => { disableChangePassword ? setDisableChangePassword(false) : setDisableChangePassword(true) };\r\n\tconst [disableChangeStatus, setDisableChangeStatus] = useState(true);\r\n\tconst handleDisableChangeStatus = () => { disableChangeStatus ? setDisableChangeStatus(false) : setDisableChangeStatus(true) };\r\n\tconst handleShowModelDetail = () => setShowModalDetail(true);\r\n\tconst handleCloseModalDetail = () => setShowModalDetail(false);\r\n\tconst handleShowModelEdit = () => setShowModalEdit(true);\r\n\tconst handleCloseModalEdit = () => setShowModalEdit(false);\r\n\tconst handleShowModelDelete = () => setShowModalDelete(true);\r\n\tconst handleCloseModalDelete = () => setShowModalDelete(false);\r\n\tconst handleShowModelNew = () => setShowModalNew(true);\r\n\tconst handleCloseModalNew = () => setShowModalNew(false);\r\n\tconst initialCategoryData = { query: '', items: [] }\r\n\tconst [store, dispatch] = useReducer(reducer, initialCategoryData);\r\n\tconst defaulteCategory = { id: null, title: null, description: null }\r\n\r\n\tuseEffect(function () {\r\n\t\tasync function loadDataCategory() {\r\n\t\t\tconst res = await axiosInstance.get('/categories', { headers: { 'x-access-token': localStorage.account_accessToken } });\r\n\t\t\tif (res.status === 200) {\r\n\t\t\t\tdispatch({\r\n\t\t\t\t\ttype: 'init',\r\n\t\t\t\t\tpayload: {\r\n\t\t\t\t\t\titems: res.data,\r\n\t\t\t\t\t\tquery: ''\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t\tloadDataCategory();\r\n\t}, []);\r\n\tconst columns = [\r\n\t\t{ title: \"ID\", field: \"id\" },\r\n\t\t{ title: \"Title\", field: \"title\" },\r\n\t\t{ title: \"Description\", field: \"description\" },\r\n\t\t{ title: \"Level\", field: \"level\" },\r\n\t];\r\n\r\n\tconst tableIcons = {\r\n\t\tAdd: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n\t\tCheck: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n\t\tClear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n\t\tDelete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n\t\tDetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n\t\tEdit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n\t\tExport: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n\t\tFilter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n\t\tFirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n\t\tLastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n\t\tNextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n\t\tPreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n\t\tResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n\t\tSearch: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n\t\tSortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n\t\tThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n\t\tViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\r\n\t\tDetailsIcon: forwardRef((props, ref) => <DetailsIcon {...props} ref={ref} />)\r\n\t};\r\n\tconst reLoadDataCategory = async function () {\r\n\t\tconst res = await axiosInstance.get('/categories', { headers: { 'x-access-token': localStorage.account_accessToken } });\r\n\t\tif (res.status === 200) {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: 'init',\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\titems: res.data,\r\n\t\t\t\t\tquery: ''\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tconst handleDetail = async function (dataRow) {\r\n\t\tsetCategoryTable(defaulteCategory);\r\n\t\tlet id = dataRow.id;\r\n\t\t// let res = await axiosInstance.get('/categories/' + id, { headers: { 'x-access-token': localStorage.account_accessToken } });\r\n\t\t// if (res.status === 200) {\r\n\t\t// \tsetCategoryTable(res.data);\r\n\t\t// }\r\n\t\tsetCategoryTable((store.items.filter(item => item.id===id))[0]);\r\n\t\thandleShowModelDetail();\r\n\t}\r\n\r\n\tconst handleEdit = async function (dataRow) {\r\n\t\tsetCategoryTable(defaulteCategory);\r\n\t\tlet id = parseInt(dataRow.id);\r\n\t\t// let res = await axiosInstance.get('/categories/' + id, { headers: { 'x-access-token': localStorage.account_accessToken } });\r\n\t\t// if (res.status === 200) {\r\n\t\t// \tsetCategoryTable(res.data);\r\n\t\t// }\r\n\t\tsetCategoryTable((store.items.filter(item => item.id===id))[0]);\r\n\t\thandleShowModelEdit();\r\n\t}\r\n\r\n\tconst handleDelete = async function (dataRow) {\r\n\t\tsetCategoryTable(defaulteCategory);\r\n\t\tlet id = dataRow.id;\r\n\t\t// let res = await axiosInstance.get('/categories/' + id, { headers: { 'x-access-token': localStorage.account_accessToken } });\r\n\t\t// if (res.status === 200) {\r\n\t\t// \tsetCategoryTable(res.data);\r\n\t\t// }\r\n\t\tsetCategoryTable((store.items.filter(item => item.id===id))[0]);\r\n\t\thandleShowModelDelete();\r\n\t}\r\n\r\n\tconst handleNew = async function (dataRow) {\r\n\t\thandleShowModelNew();\r\n\t}\r\n\r\n\tconst onSubmitUpdate = async function (data) {\r\n\t\ttry {\r\n\t\t\tif (data != null && data.id > 0) {\r\n\t\t\t\tconst id = data.id;\r\n\t\t\t\tdata.level = parseInt(data.level);\r\n\t\t\t\tdata.owned = parseInt(data.owned);\r\n\t\t\t\tdelete data.id;\r\n\t\t\t\tlet res = await axiosInstance.put('/categories/' + id, data, {\r\n\t\t\t\t\theaders: { 'x-access-token': localStorage.account_accessToken }\r\n\t\t\t\t});\r\n\t\t\t\tif (res.status === 201) {\r\n\t\t\t\t\treLoadDataCategory();\r\n\t\t\t\t\tswal({\r\n\t\t\t\t\t\ttitle: \"Category is updated\",\r\n\t\t\t\t\t\ttext: \"Category ID \" + id + \" updated\",\r\n\t\t\t\t\t\ticon: \"success\",\r\n\t\t\t\t\t\tbutton: \"OK\"\r\n\t\t\t\t\t});\r\n\t\t\t\t\thandleCloseModalEdit();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tswal({\r\n\t\t\t\t\t\ttitle: \"Failed\",\r\n\t\t\t\t\t\ticon: \"danger\",\r\n\t\t\t\t\t\tbutton: \"OK\"\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tswal({\r\n\t\t\t\t\ttitle: \"Failed\",\r\n\t\t\t\t\ticon: \"danger\",\r\n\t\t\t\t\tbutton: \"OK\"\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err.response.data);\r\n\t\t\tswal({\r\n\t\t\t\ttitle: \"Failed\",\r\n\t\t\t\ttext: err.response.data.message,\r\n\t\t\t\ticon: \"danger\",\r\n\t\t\t\tbutton: \"OK\"\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tconst onSubmitDelete = async function (data) {\r\n\t\ttry {\r\n\t\t\tif (data != null && data.id > 0) {\r\n\t\t\t\tlet id = data.id;\r\n\t\t\t\tlet res = await axiosInstance.delete('/categories/' + id, {\r\n\t\t\t\t\theaders: { 'x-access-token': localStorage.account_accessToken }\r\n\t\t\t\t});\r\n\t\t\t\tif (res.status === 200) {\r\n\t\t\t\t\treLoadDataCategory();\r\n\t\t\t\t\tswal({\r\n\t\t\t\t\t\ttitle: \"Category is deleted\",\r\n\t\t\t\t\t\ttext: \"Category ID \" + id + \" deleted\",\r\n\t\t\t\t\t\ticon: \"success\",\r\n\t\t\t\t\t\tbutton: \"OK\"\r\n\t\t\t\t\t});\r\n\t\t\t\t\thandleCloseModalDelete();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tswal({\r\n\t\t\t\t\t\ttitle: \"Failed\",\r\n\t\t\t\t\t\ticon: \"danger\",\r\n\t\t\t\t\t\tbutton: \"OK\"\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tswal({\r\n\t\t\t\t\ttitle: \"Failed\",\r\n\t\t\t\t\ticon: \"danger\",\r\n\t\t\t\t\tbutton: \"OK\"\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err.response.data);\r\n\t\t\tswal({\r\n\t\t\t\ttitle: \"Failed\",\r\n\t\t\t\ttext: \"Category has course\",\r\n\t\t\t\ticon: \"danger\",\r\n\t\t\t\tbutton: \"OK\"\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tconst onSubmitNew = async function (data) {\r\n\t\ttry {\r\n\t\t\tif (data != null) {\r\n\t\t\t\tdata.level = parseInt(data.level);\r\n\t\t\t\tdata.owned = parseInt(data.owned);\r\n\t\t\t\tlet res = await axiosInstance.post('/categories', data, {\r\n\t\t\t\t\theaders: { 'x-access-token': localStorage.account_accessToken }\r\n\t\t\t\t});\r\n\t\t\t\tif (res.status === 201) {\r\n\t\t\t\t\treLoadDataCategory();\r\n\t\t\t\t\tswal({\r\n\t\t\t\t\t\ttitle: \"Category is created\",\r\n\t\t\t\t\t\ttext: \"Category ID \" + res.data.id + \" created\",\r\n\t\t\t\t\t\ticon: \"success\",\r\n\t\t\t\t\t\tbutton: \"OK\"\r\n\t\t\t\t\t});\r\n\t\t\t\t\t//handleCloseModalNew();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tswal({\r\n\t\t\t\t\t\ttitle: \"Failed\",\r\n\t\t\t\t\t\ticon: \"danger\",\r\n\t\t\t\t\t\tbutton: \"OK\"\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tswal({\r\n\t\t\t\t\ttitle: \"Failed\",\r\n\t\t\t\t\ticon: \"danger\",\r\n\t\t\t\t\tbutton: \"OK\"\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err.response.data);\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<AppContext.Provider value={{ store, dispatch }}>\r\n\t\t\t\t<div className=\"container mt-3\">\r\n\t\t\t\t\t<div className=\"row mt-3\">\r\n\t\t\t\t\t\t<div className=\"col-sm-12\">\r\n\t\t\t\t\t\t\t<div className=\"card shadow\">\r\n\t\t\t\t\t\t\t\t<h3 className=\"card-header d-flex\">\r\n\t\t\t\t\t\t\t\t\tCategory List from Academy\r\n            </h3>\r\n\t\t\t\t\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t\t\t\t\t<button className=\"btn btn-warning\" onClick={reLoadDataCategory}>Reload</button>\r\n\t\t\t\t\t\t\t\t\t\t<button className=\"btn btn-primary\" onClick={handleNew}>New</button>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<br></br>\r\n\t\t\t\t\t\t\t\t\t<div style={{ maxWidth: '100%' }}>\r\n\t\t\t\t\t\t\t\t\t\t<MaterialTable columns={columns} data={store.items} icons={tableIcons} title={null}\r\n\t\t\t\t\t\t\t\t\t\t\tactions={[\r\n\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ticon: tableIcons.DetailsIcon,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttooltip: 'Detail Category',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick: (event, rowData) => handleDetail(rowData)\r\n\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ticon: tableIcons.Edit,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttooltip: 'Modify Category',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick: (event, rowData) => handleEdit(rowData)\r\n\t\t\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ticon: tableIcons.Delete,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttooltip: 'Delete Category',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick: (event, rowData) => handleDelete(rowData)\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t]}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"card-footer text-muted\">\r\n\t\t\t\t\t\t\t\t\tFooter\r\n          </div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<Modal show={showModalDetail} onHide={handleCloseModalDetail}>\r\n\t\t\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t\t\t<Modal.Title>Detail Category</Modal.Title>\r\n\t\t\t\t\t</Modal.Header>\r\n\t\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t\t<Form>\r\n\t\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t\t\t<Form.Group >\r\n\t\t\t\t\t\t\t\t\t\t<Form.Label>ID</Form.Label>\r\n\t\t\t\t\t\t\t\t\t\t<Form.Control type=\"text\" name=\"id\" value={categoryTable.id == null ? \"\" : categoryTable.id} readOnly />\r\n\t\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t\t<Form.Group >\r\n\t\t\t\t\t\t\t\t\t\t<Form.Label>Title</Form.Label>\r\n\t\t\t\t\t\t\t\t\t\t<Form.Control type=\"text\" name=\"title\" value={categoryTable.title == null ? \"\" : categoryTable.title} readOnly />\r\n\t\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t\t<Form.Group >\r\n\t\t\t\t\t\t\t\t\t\t<Form.Label>Description</Form.Label>\r\n\t\t\t\t\t\t\t\t\t\t<Form.Control type=\"text\" name=\"description\" value={categoryTable.description == null ? \"\" : categoryTable.description} readOnly />\r\n\t\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t\t<Form.Group >\r\n\t\t\t\t\t\t\t\t\t\t<Form.Label>Level</Form.Label>\r\n\t\t\t\t\t\t\t\t\t\t<Form.Control type=\"text\" name=\"level\" value={categoryTable.level == null ? \"\" : categoryTable.level} readOnly />\r\n\t\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t\t<Form.Group >\r\n\t\t\t\t\t\t\t\t\t\t<Form.Label>Owned</Form.Label>\r\n\t\t\t\t\t\t\t\t\t\t<Form.Control type=\"text\" name=\"owned\" value={categoryTable.owned == null ? \"\" : categoryTable.owned === 0 ? \"\" : categoryTable.owned} readOnly />\r\n\t\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t\t\t<Form.Group >\r\n\t\t\t\t\t\t\t\t\t\t<Form.Label>Created Date</Form.Label>\r\n\t\t\t\t\t\t\t\t\t\t<Form.Control type=\"text\" name=\"createdDate\" value={categoryTable.createdDate == null ? \"\" : categoryTable.createdDate} readOnly />\r\n\t\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t\t<Form.Group >\r\n\t\t\t\t\t\t\t\t\t\t<Form.Label>Modified Date</Form.Label>\r\n\t\t\t\t\t\t\t\t\t\t<Form.Control type=\"text\" name=\"modifiedDate\" value={categoryTable.modifiedDate == null ? \"\" : categoryTable.modifiedDate} readOnly />\r\n\t\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t</Modal.Body>\r\n\t\t\t\t\t<Modal.Footer>\r\n\t\t\t\t\t\t<Button variant=\"secondary\" onClick={handleCloseModalDetail}>Close</Button>\r\n\t\t\t\t\t</Modal.Footer>\r\n\t\t\t\t</Modal>\r\n\t\t\t\t<Modal show={showModalEdit} onHide={handleCloseModalEdit}>\r\n\t\t\t\t\t<Form onSubmit={handleSubmit(onSubmitUpdate)}>\r\n\t\t\t\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t\t\t\t<Modal.Title>Update Category</Modal.Title>\r\n\t\t\t\t\t\t</Modal.Header>\r\n\t\t\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t\t\t<Form.Group >\r\n\t\t\t\t\t\t\t\t<Form.Label>ID</Form.Label>\r\n\t\t\t\t\t\t\t\t<Form.Control type=\"text\" name=\"id\" value={categoryTable.id == null ? \"\" : categoryTable.id} ref={register({ required: true })} readOnly />\r\n\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t<Form.Group >\r\n\t\t\t\t\t\t\t\t<Form.Label>Title</Form.Label>\r\n\t\t\t\t\t\t\t\t<Form.Control type=\"text\" name=\"title\" defaultValue={categoryTable.title == null ? \"\" : categoryTable.title} ref={register({ required: true })} autoFocus />\r\n\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t<Form.Group >\r\n\t\t\t\t\t\t\t\t<Form.Label>Description</Form.Label>\r\n\t\t\t\t\t\t\t\t<Form.Control type=\"text\" name=\"description\" defaultValue={categoryTable.description == null ? \"\" : categoryTable.description} ref={register({ required: true })} />\r\n\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t<Form.Group >\r\n\t\t\t\t\t\t\t\t<Form.Label>Level</Form.Label>\r\n\t\t\t\t\t\t\t\t<Form.Control type=\"text\" name=\"level\" defaultValue={categoryTable.level == null ? \"\" : categoryTable.level} ref={register({ required: true })} />\r\n\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t<Form.Group >\r\n\t\t\t\t\t\t\t\t<Form.Label>Owned</Form.Label>\r\n\t\t\t\t\t\t\t\t<Form.Control type=\"text\" name=\"owned\" defaultValue={categoryTable.owned == null ? \"\" : categoryTable.owned === 0 ? \"\" : categoryTable.owned} ref={register({ required: true })} />\r\n\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t</Modal.Body>\r\n\t\t\t\t\t\t<Modal.Footer>\r\n\t\t\t\t\t\t\t<Button variant=\"primary\" type=\"submit\">Update</Button>\r\n\t\t\t\t\t\t\t<Button variant=\"secondary\" onClick={handleCloseModalEdit}>Close</Button>\r\n\t\t\t\t\t\t</Modal.Footer>\r\n\t\t\t\t\t</Form>\r\n\t\t\t\t</Modal>\r\n\t\t\t\t<Modal show={showModalDelete} onHide={handleCloseModalDelete}>\r\n\t\t\t\t\t<Form onSubmit={handleSubmit(onSubmitDelete)}>\r\n\t\t\t\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t\t\t\t<Modal.Title>Delete Category</Modal.Title>\r\n\t\t\t\t\t\t</Modal.Header>\r\n\t\t\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t\t\t<Form.Group >\r\n\t\t\t\t\t\t\t\t\t\t<Form.Label>ID</Form.Label>\r\n\t\t\t\t\t\t\t\t\t\t<Form.Control type=\"text\" name=\"id\" defaultValue={categoryTable.id == null ? \"\" : categoryTable.id} ref={register({ required: false })} readOnly />\r\n\t\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t\t<Form.Group >\r\n\t\t\t\t\t\t\t\t\t\t<Form.Label>Title</Form.Label>\r\n\t\t\t\t\t\t\t\t\t\t<Form.Control type=\"text\" name=\"title\" defaultValue={categoryTable.title == null ? \"\" : categoryTable.title} readOnly />\r\n\t\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t\t<Form.Group >\r\n\t\t\t\t\t\t\t\t\t\t<Form.Label>Description</Form.Label>\r\n\t\t\t\t\t\t\t\t\t\t<Form.Control type=\"text\" name=\"description\" defaultValue={categoryTable.description == null ? \"\" : categoryTable.description} readOnly />\r\n\t\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t\t<Form.Group >\r\n\t\t\t\t\t\t\t\t\t\t<Form.Label>Level</Form.Label>\r\n\t\t\t\t\t\t\t\t\t\t<Form.Control type=\"text\" name=\"level\" defaultValue={categoryTable.level == null ? \"\" : categoryTable.level} readOnly />\r\n\t\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t\t<Form.Group >\r\n\t\t\t\t\t\t\t\t\t\t<Form.Label>Owned</Form.Label>\r\n\t\t\t\t\t\t\t\t\t\t<Form.Control type=\"text\" name=\"owned\" defaultValue={categoryTable.owned == null ? \"\" : categoryTable.owned === 0 ? \"\" : categoryTable.owned} readOnly />\r\n\t\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t\t\t<Form.Group >\r\n\t\t\t\t\t\t\t\t\t\t<Form.Label>Created Date</Form.Label>\r\n\t\t\t\t\t\t\t\t\t\t<Form.Control type=\"text\" name=\"createdDate\" defaultValue={categoryTable.createdDate == null ? \"\" : categoryTable.createdDate} readOnly />\r\n\t\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t\t<Form.Group >\r\n\t\t\t\t\t\t\t\t\t\t<Form.Label>Modified Date</Form.Label>\r\n\t\t\t\t\t\t\t\t\t\t<Form.Control type=\"text\" name=\"modifiedDate\" defaultValue={categoryTable.modifiedDate == null ? \"\" : categoryTable.modifiedDate} readOnly />\r\n\t\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t</Row>\r\n\r\n\t\t\t\t\t\t</Modal.Body>\r\n\t\t\t\t\t\t<Modal.Footer>\r\n\t\t\t\t\t\t\t<Button variant=\"danger\" type=\"submit\">Delete</Button>\r\n\t\t\t\t\t\t\t<Button variant=\"secondary\" onClick={handleCloseModalDelete}>Close</Button>\r\n\t\t\t\t\t\t</Modal.Footer>\r\n\t\t\t\t\t</Form>\r\n\t\t\t\t</Modal>\r\n\t\t\t\t<Modal show={showModalNew} onHide={handleCloseModalNew}>\r\n\t\t\t\t\t<Form onSubmit={handleSubmit(onSubmitNew)}>\r\n\t\t\t\t\t\t<Modal.Header closeButton>\r\n\t\t\t\t\t\t\t<Modal.Title>New Category</Modal.Title>\r\n\t\t\t\t\t\t</Modal.Header>\r\n\t\t\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t\t\t<Form.Group >\r\n\t\t\t\t\t\t\t\t<Form.Label>Title</Form.Label>\r\n\t\t\t\t\t\t\t\t<Form.Control type=\"text\" name=\"title\" ref={register({ required: true })} autoFocus />\r\n\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t<Form.Group >\r\n\t\t\t\t\t\t\t\t<Form.Label>Description</Form.Label>\r\n\t\t\t\t\t\t\t\t<Form.Control type=\"text\" name=\"description\" ref={register({ required: true })} />\r\n\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t<Form.Group >\r\n\t\t\t\t\t\t\t\t<Form.Label>Level</Form.Label>\r\n\t\t\t\t\t\t\t\t<Form.Control type=\"text\" name=\"level\" ref={register({ required: true })} />\r\n\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t<Form.Group >\r\n\t\t\t\t\t\t\t\t<Form.Label>Owned</Form.Label>\r\n\t\t\t\t\t\t\t\t<Form.Control type=\"text\" name=\"owned\" ref={register({ required: true })} />\r\n\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t</Modal.Body>\r\n\t\t\t\t\t\t<Modal.Footer>\r\n\t\t\t\t\t\t\t<Button variant=\"success\" type=\"submit\">Create</Button>\r\n\t\t\t\t\t\t\t<Button variant=\"secondary\" onClick={handleCloseModalNew}>Close</Button>\r\n\t\t\t\t\t\t</Modal.Footer>\r\n\t\t\t\t\t</Form>\r\n\t\t\t\t</Modal>\r\n\t\t\t</AppContext.Provider>\r\n\t\t</div>\r\n\t);\r\n}\r\n","V:\\workspace_js\\wnc-final-project-online-academy-fe\\src\\components\\admin\\categoryReducer.js",[],"V:\\workspace_js\\wnc-final-project-online-academy-fe\\src\\components\\admin\\categoryContext.js",[],"V:\\workspace_js\\wnc-final-project-online-academy-fe\\src\\components\\admin\\views\\courses\\Course.js",["338","339","340","341","342","343","344","345"],"import React, { lazy, useState, useEffect, useReducer, forwardRef } from 'react'\r\nimport { axiosInstance, parseJwt } from '../../../../utils';\r\nimport { useForm } from 'react-hook-form';\r\nimport { Modal, Button, Form, FormCheck, Col, Row } from 'react-bootstrap';\r\nimport reducer from '../../courseReducer';\r\nimport AppContext from '../../courseContext';\r\nimport swal from 'sweetalert';\r\n\r\nimport MaterialTable from 'material-table';\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport DetailsIcon from '@material-ui/icons/Details';\r\nimport { TrendingUpRounded } from '@material-ui/icons';\r\n\r\n\r\n\r\nexport default function Course(props) {\r\n    const [courseTable, setCourseTable] = useState([]);\r\n    const { register, handleSubmit, watch, errors } = useForm();\r\n    const [showModalDetail, setShowModalDetail] = useState(false);\r\n    const [showModalEdit, setShowModalEdit] = useState(false);\r\n    const [showModalDelete, setShowModalDelete] = useState(false);\r\n    const [showModalNew, setShowModalNew] = useState(false);\r\n    const [disableChangePassword, setDisableChangePassword] = useState(true);\r\n    const handleDisableChangePassword = () => { disableChangePassword ? setDisableChangePassword(false) : setDisableChangePassword(true) };\r\n    const [disableChangeStatus, setDisableChangeStatus] = useState(true);\r\n    const handleDisableChangeStatus = () => { disableChangeStatus ? setDisableChangeStatus(false) : setDisableChangeStatus(true) };\r\n    const handleShowModelDetail = () => setShowModalDetail(true);\r\n    const handleCloseModalDetail = () => setShowModalDetail(false);\r\n    const handleShowModelEdit = () => setShowModalEdit(true);\r\n    const handleCloseModalEdit = () => setShowModalEdit(false);\r\n    const handleShowModelDelete = () => setShowModalDelete(true);\r\n    const handleCloseModalDelete = () => setShowModalDelete(false);\r\n    const handleShowModelNew = () => setShowModalNew(true);\r\n    const handleCloseModalNew = () => setShowModalNew(false);\r\n    const initialCategoryData = { query: '', items: [] }\r\n    const [store, dispatch] = useReducer(reducer, initialCategoryData);\r\n    const defaultCourse = { id: null, title: null, descriptionShort: null, descriptionLong:null }\r\n\r\n    useEffect(function () {\r\n        async function loadDataCourse() {\r\n            const res = await axiosInstance.get('/courses', { headers: { 'x-access-token': localStorage.account_accessToken } });\r\n            if (res.status === 200) {\r\n                for (let i in res.data) {\r\n                    let resGetTeacherEmail = await axiosInstance.get('/users/'+ res.data[i].teacherId, { headers: { 'x-access-token': localStorage.account_accessToken } });\r\n                    if (resGetTeacherEmail.status === 200) {\r\n                        res.data[i].teacher = resGetTeacherEmail.data.email;\r\n                    }\r\n                    let resGetCategoryTitle = await axiosInstance.get('/categories/'+ res.data[i].categoryId, { headers: { 'x-access-token': localStorage.account_accessToken } });\r\n                    if (resGetCategoryTitle.status === 200) {\r\n                        res.data[i].category = resGetCategoryTitle.data.title;\r\n                    }\r\n                }\r\n                dispatch({\r\n                    type: 'init',\r\n                    payload: {\r\n                        items: res.data,\r\n                        query: ''\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        loadDataCourse();\r\n    }, []);\r\n    const columns = [\r\n        { title: \"ID\", field: \"id\", filtering: false },\r\n        { title: \"Title\", field: \"title\", filtering: false },\r\n        { title: \"Category Title\", field: \"category\" },\r\n        { title: \"Teacher Email\", field: \"teacher\" },\r\n    ];\r\n\r\n    const tableIcons = {\r\n        Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n        Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n        Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n        Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n        DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n        Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n        Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n        Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n        FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n        LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n        NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n        PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n        ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n        Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n        SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n        ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n        ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\r\n        DetailsIcon: forwardRef((props, ref) => <DetailsIcon {...props} ref={ref} />)\r\n    };\r\n    const reLoadDataCourse = async function () {\r\n        const res = await axiosInstance.get('/courses', { headers: { 'x-access-token': localStorage.account_accessToken } });\r\n        if (res.status === 200) {\r\n            for (let i in res.data) {\r\n                let resGetTeacherEmail = await axiosInstance.get('/users/'+ res.data[i].teacherId, { headers: { 'x-access-token': localStorage.account_accessToken } });\r\n                if (resGetTeacherEmail.status === 200) {\r\n                    res.data[i].teacher = resGetTeacherEmail.data.email;\r\n                }\r\n                let resGetCategoryTitle = await axiosInstance.get('/categories/'+ res.data[i].categoryId, { headers: { 'x-access-token': localStorage.account_accessToken } });\r\n                if (resGetCategoryTitle.status === 200) {\r\n                    res.data[i].category = resGetCategoryTitle.data.title;\r\n                }\r\n            }\r\n            dispatch({\r\n                type: 'init',\r\n                payload: {\r\n                    items: res.data,\r\n                    query: ''\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    const handleDetail = async function (dataRow) {\r\n        setCourseTable(defaultCourse);\r\n        let id = dataRow.id;\r\n        // let res = await axiosInstance.get('/courses/' + id, { headers: { 'x-access-token': localStorage.account_accessToken } });\r\n        // if (res.status === 200) {\r\n        //     setCourseTable(res.data);\r\n        // }\r\n        setCourseTable((store.items.filter(item => item.id===id))[0]);\r\n        handleShowModelDetail();\r\n    }\r\n\r\n    const handleEdit = async function (dataRow) {\r\n        setCourseTable(defaultCourse);\r\n        let id = dataRow.id;\r\n        // let res = await axiosInstance.get('/courses/' + id, { headers: { 'x-access-token': localStorage.account_accessToken } });\r\n        // if (res.status === 200) {\r\n        //     setCourseTable(res.data);\r\n        // }\r\n        setCourseTable((store.items.filter(item => item.id===id))[0]);\r\n        handleShowModelEdit();\r\n    }\r\n\r\n    const handleDelete = async function (dataRow) {\r\n        setCourseTable(defaultCourse);\r\n        let id = dataRow.id;\r\n        // let res = await axiosInstance.get('/courses/' + id, { headers: { 'x-access-token': localStorage.account_accessToken } });\r\n        // if (res.status === 200) {\r\n        //     setCourseTable(res.data);\r\n        // }\r\n        setCourseTable((store.items.filter(item => item.id===id))[0]);\r\n        handleShowModelDelete();\r\n    }\r\n\r\n    const handleNew = async function (dataRow) {\r\n        handleShowModelNew();\r\n    }\r\n\r\n    const onSubmitUpdate = async function (data) {\r\n        try {\r\n            if (data != null && data.id > 0) {\r\n                let id = data.id;\r\n                data.price = parseInt(data.price);\r\n                data.sale = parseInt(data.sale);\r\n                data.categoryId = parseInt(data.categoryId);\r\n                data.teacherId = parseInt(data.teacherId);\r\n                delete data.id;\r\n                let res = await axiosInstance.put('/courses/' + id, data, {\r\n                    headers: { 'x-access-token': localStorage.account_accessToken }\r\n                });\r\n                if (res.status === 200) {\r\n                    reLoadDataCourse();\r\n                    swal({\r\n                        title: \"Course is updated\",\r\n                        text: \"Course ID \" + id + \" updated\",\r\n                        icon: \"success\",\r\n                        button: \"OK\"\r\n                    });\r\n                    handleCloseModalEdit();\r\n                } else {\r\n                    swal({\r\n                        title: \"Failed\",\r\n                        icon: \"danger\",\r\n                        button: \"OK\"\r\n                    });\r\n                }\r\n            } else {\r\n                swal({\r\n                    title: \"Failed\",\r\n                    icon: \"danger\",\r\n                    button: \"OK\"\r\n                });\r\n            }\r\n        } catch (err) {\r\n            console.log(err.response.data);\r\n            swal({\r\n                title: \"Failed\",\r\n                text: err.response.data.message,\r\n                icon: \"danger\",\r\n                button: \"OK\"\r\n            });\r\n        }\r\n    }\r\n\r\n    const onSubmitDelete = async function (data) {\r\n        try {\r\n            if (data != null && data.id > 0) {\r\n                let id = data.id;\r\n                let res = await axiosInstance.delete('/courses/' + id, {\r\n                    headers: { 'x-access-token': localStorage.account_accessToken }\r\n                });\r\n                if (res.status === 200) {\r\n                    reLoadDataCourse();\r\n                    swal({\r\n                        title: \"Course is deleted\",\r\n                        text: \"Course ID \" + id + \" deleted\",\r\n                        icon: \"success\",\r\n                        button: \"OK\"\r\n                    });\r\n                    handleCloseModalDelete();\r\n                } else {\r\n                    swal({\r\n                        title: \"Failed\",\r\n                        icon: \"danger\",\r\n                        button: \"OK\"\r\n                    });\r\n                }\r\n            } else {\r\n                swal({\r\n                    title: \"Failed\",\r\n                    icon: \"danger\",\r\n                    button: \"OK\"\r\n                });\r\n            }\r\n        } catch (err) {\r\n            console.log(err.response.data);\r\n            swal({\r\n                title: \"Failed\",\r\n                icon: \"danger\",\r\n                button: \"OK\"\r\n            });\r\n        }\r\n    }\r\n\r\n    const onSubmitNew = async function (data) {\r\n        try {\r\n            if (data != null) {\r\n                data.price = parseInt(data.price);\r\n                data.sale = parseInt(data.sale);\r\n                data.categoryId = parseInt(data.categoryId);\r\n                data.teacherId = parseInt(data.teacherId);\r\n                let res = await axiosInstance.post('/courses', data, {\r\n                    headers: { 'x-access-token': localStorage.account_accessToken }\r\n                });\r\n                if (res.status === 201) {\r\n                    reLoadDataCourse();\r\n                    swal({\r\n                        title: \"Course is created\",\r\n                        text: \"Course ID \" + res.data.id + \" created\",\r\n                        icon: \"success\",\r\n                        button: \"OK\"\r\n                    });\r\n                    //handleCloseModalNew();\r\n                } else {\r\n                    swal({\r\n                        title: \"Failed\",\r\n                        icon: \"danger\",\r\n                        button: \"OK\"\r\n                    });\r\n                }\r\n            } else {\r\n                swal({\r\n                    title: \"Failed\",\r\n                    icon: \"danger\",\r\n                    button: \"OK\"\r\n                });\r\n            }\r\n        } catch (err) {\r\n            console.log(err.response.data);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <AppContext.Provider value={{ store, dispatch }}>\r\n                <div className=\"container mt-3\">\r\n                    <div className=\"row mt-3\">\r\n                        <div className=\"col-sm-12\">\r\n                            <div className=\"card shadow\">\r\n                                <h3 className=\"card-header d-flex\">\r\n                                    Course List from Academy\r\n            </h3>\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"row\">\r\n                                        <button className=\"btn btn-warning\" onClick={reLoadDataCourse}>Reload</button>\r\n                                        {/* <button className=\"btn btn-primary\" onClick={handleNew}>New</button> */}\r\n                                    </div>\r\n                                    <br></br>\r\n                                    <div style={{ maxWidth: '100%' }}>\r\n                                        <MaterialTable columns={columns} data={store.items} icons={tableIcons} title={null}\r\n                                            actions={[\r\n                                                {\r\n                                                    icon: tableIcons.DetailsIcon,\r\n                                                    tooltip: 'Detail Category',\r\n                                                    onClick: (event, rowData) => handleDetail(rowData)\r\n                                                },\r\n                                                {\r\n                                                    icon: tableIcons.Edit,\r\n                                                    tooltip: 'Modify Category',\r\n                                                    onClick: (event, rowData) => handleEdit(rowData)\r\n                                                },\r\n                                                {\r\n                                                    icon: tableIcons.Delete,\r\n                                                    tooltip: 'Delete Category',\r\n                                                    onClick: (event, rowData) => handleDelete(rowData)\r\n                                                }\r\n                                            ]}\r\n                                            options={{\r\n                                                filtering: true\r\n                                            }}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"card-footer text-muted\">\r\n                                    Footer\r\n          </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <Modal show={showModalDetail} onHide={handleCloseModalDetail}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Detail Course</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <Form>\r\n                            <Row>\r\n                                <Col>\r\n                                    <Form.Group >\r\n                                        <Form.Label>ID</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"id\" value={courseTable.id == null ? \"\" : courseTable.id} readOnly />\r\n                                    </Form.Group>\r\n                                    <Form.Group >\r\n                                        <Form.Label>Title</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"title\" value={courseTable.title == null ? \"\" : courseTable.title} readOnly />\r\n                                    </Form.Group>\r\n                                    <Form.Group >\r\n                                        <Form.Label>Description Short</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"descriptionShort\" value={courseTable.descriptionShort == null ? \"\" : courseTable.descriptionShort} readOnly />\r\n                                    </Form.Group>\r\n                                    <Form.Group >\r\n                                        <Form.Label>Description Long</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"descriptionLong\" value={courseTable.descriptionLong == null ? \"\" : courseTable.descriptionLong} readOnly />\r\n                                    </Form.Group>\r\n                                    <Form.Group >\r\n                                        <Form.Label>Thumbnail</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"thumbnail\" value={courseTable.thumbnail == null ? \"\" : courseTable.thumbnail} readOnly />\r\n                                    </Form.Group>\r\n                                    <Form.Group >\r\n                                        <Form.Label>Price</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"price\" value={courseTable.price == null ? \"\" : courseTable.price} readOnly />\r\n                                    </Form.Group>\r\n                                    <Form.Group >\r\n                                        <Form.Label>Sale</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"sale\" value={courseTable.sale == null ? \"\" : courseTable.sale} readOnly />\r\n                                    </Form.Group>\r\n                                    <Form.Group >\r\n                                        <Form.Label>Review Point</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"reviewPoint\" value={courseTable.reviewPoint == null ? \"\" : courseTable.reviewPoint} readOnly />\r\n                                    </Form.Group>\r\n                                </Col>\r\n                                <Col>\r\n                                    <Form.Group >\r\n                                        <Form.Label>Reviews</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"reviews\" value={courseTable.reviews == null ? \"\" : courseTable.reviews} readOnly />\r\n                                    </Form.Group>\r\n                                    <Form.Group >\r\n                                        <Form.Label>Participants</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"participants\" value={courseTable.participants == null ? \"\" : courseTable.participants} readOnly />\r\n                                    </Form.Group>\r\n                                    <Form.Group >\r\n                                        <Form.Label>Outline</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"outline\" value={courseTable.outline == null ? \"\" : courseTable.outline} readOnly />\r\n                                    </Form.Group>\r\n                                    <Form.Group >\r\n                                        <Form.Label>Teacher ID</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"teacherId\" value={courseTable.teacherId == null ? \"\" : courseTable.teacherId} readOnly />\r\n                                    </Form.Group>\r\n                                    <Form.Group >\r\n                                        <Form.Label>Category ID</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"categoryId\" value={courseTable.categoryId == null ? \"\" : courseTable.categoryId} readOnly />\r\n                                    </Form.Group>\r\n                                    <Form.Group >\r\n                                        <Form.Label>Complete Status</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"isCompleted\" value={courseTable.isCompleted == null ? \"\" : courseTable.isCompleted === 1 ? \"Yes\" : \"No\"} readOnly />\r\n                                    </Form.Group>\r\n                                    <Form.Group >\r\n                                        <Form.Label>Created Date</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"createdDate\" value={courseTable.createdDate == null ? \"\" : courseTable.createdDate} readOnly />\r\n                                    </Form.Group>\r\n                                    <Form.Group >\r\n                                        <Form.Label>Modified Date</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"modifiedDate\" value={courseTable.modifiedDate == null ? \"\" : courseTable.modifiedDate} readOnly />\r\n                                    </Form.Group>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={handleCloseModalDetail}>Close</Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n                <Modal show={showModalEdit} onHide={handleCloseModalEdit}>\r\n                    <Form onSubmit={handleSubmit(onSubmitUpdate)}>\r\n                        <Modal.Header closeButton>\r\n                            <Modal.Title>Update Category</Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                            <Row>\r\n                                <Col>\r\n                                    <Form.Group >\r\n                                        <Form.Label>ID</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"id\" defaultValue={courseTable.id == null ? \"\" : courseTable.id} ref={register({ required: false })} readOnly />\r\n                                    </Form.Group>\r\n                                    <Form.Group >\r\n                                        <Form.Label>Title</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"title\" defaultValue={courseTable.title == null ? \"\" : courseTable.title} ref={register({ required: false })} />\r\n                                    </Form.Group>\r\n                                    <Form.Group >\r\n                                        <Form.Label>Description Short</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"descriptionShort\" defaultValue={courseTable.descriptionShort == null ? \"\" : courseTable.descriptionShort} ref={register({ required: TrendingUpRounded })} />\r\n                                    </Form.Group>\r\n                                    <Form.Group >\r\n                                        <Form.Label>Description Long</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"descriptionLong\" defaultValue={courseTable.descriptionLong == null ? \"\" : courseTable.descriptionLong} ref={register({ required: true })} />\r\n                                    </Form.Group>\r\n                                    <Form.Group >\r\n                                        <Form.Label>Thumbnail</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"thumbnail\" defaultValue={courseTable.thumbnail == null ? \"\" : courseTable.thumbnail} ref={register({ required: false })} />\r\n                                    </Form.Group>\r\n                                </Col>\r\n                                <Col>\r\n                                    <Form.Group >\r\n                                        <Form.Label>Price</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"price\" defaultValue={courseTable.price == null ? \"\" : courseTable.price} ref={register({ required: false })} />\r\n                                    </Form.Group>\r\n                                    <Form.Group >\r\n                                        <Form.Label>Sale</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"sale\" defaultValue={courseTable.sale == null ? \"\" : courseTable.sale} ref={register({ required: false })} />\r\n                                    </Form.Group>\r\n                                    <Form.Group >\r\n                                        <Form.Label>Teacher ID</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"teacherId\" defaultValue={courseTable.teacherId == null ? \"\" : courseTable.teacherId} ref={register({ required: false })} />\r\n                                    </Form.Group>\r\n                                    <Form.Group >\r\n                                        <Form.Label>Category ID</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"categoryId\" defaultValue={courseTable.categoryId == null ? \"\" : courseTable.categoryId} ref={register({ required: false })} />\r\n                                    </Form.Group>\r\n                                </Col>\r\n                            </Row>\r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                            <Button variant=\"primary\" type=\"submit\">Update</Button>\r\n                            <Button variant=\"secondary\" onClick={handleCloseModalEdit}>Close</Button>\r\n                        </Modal.Footer>\r\n                    </Form>\r\n                </Modal>\r\n                <Modal show={showModalDelete} onHide={handleCloseModalDelete}>\r\n                    <Form onSubmit={handleSubmit(onSubmitDelete)}>\r\n                        <Modal.Header closeButton>\r\n                            <Modal.Title>Delete Category</Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                            <Form.Group >\r\n                                <Form.Label>ID</Form.Label>\r\n                                <Form.Control type=\"text\" name=\"id\" defaultValue={courseTable.id == null ? \"\" : courseTable.id} ref={register({ required: false })} readOnly />\r\n                            </Form.Group>\r\n                            <Form.Group >\r\n                                <Form.Label>Title</Form.Label>\r\n                                <Form.Control type=\"text\" name=\"title\" value={courseTable.title == null ? \"\" : courseTable.title} ref={register({ required: false })} readOnly />\r\n                            </Form.Group>\r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                            <Button variant=\"danger\" type=\"submit\">Delete</Button>\r\n                            <Button variant=\"secondary\" onClick={handleCloseModalDelete}>Close</Button>\r\n                        </Modal.Footer>\r\n                    </Form>\r\n                </Modal>\r\n                <Modal show={showModalNew} onHide={handleCloseModalNew}>\r\n                    <Form onSubmit={handleSubmit(onSubmitNew)}>\r\n                        <Modal.Header closeButton>\r\n                            <Modal.Title>New Course</Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                            <Row>\r\n                                <Col>\r\n                                    <Form.Group >\r\n                                        <Form.Label>Title</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"title\" ref={register({ required: false })} />\r\n                                    </Form.Group>\r\n                                    <Form.Group >\r\n                                        <Form.Label>Description Short</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"descriptionShort\" ref={register({ required: false })} />\r\n                                    </Form.Group>\r\n                                    <Form.Group >\r\n                                        <Form.Label>Description Long</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"descriptionLong\" ref={register({ required: false })} />\r\n                                    </Form.Group>\r\n                                    <Form.Group >\r\n                                        <Form.Label>Thumbnail</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"thumbnail\" ref={register({ required: false })} />\r\n                                    </Form.Group>\r\n                                    <Form.Group >\r\n                                        <Form.Label>Price</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"price\" ref={register({ required: false })} />\r\n                                    </Form.Group>\r\n                                </Col>\r\n                                <Col>\r\n                                    <Form.Group >\r\n                                        <Form.Label>Sale</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"sale\" ref={register({ required: false })} />\r\n                                    </Form.Group>\r\n                                    <Form.Group >\r\n                                        <Form.Label>Outline</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"outline\" ref={register({ required: false })} />\r\n                                    </Form.Group>\r\n                                    <Form.Group >\r\n                                        <Form.Label>Teacher ID</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"teacherId\" ref={register({ required: false })} />\r\n                                    </Form.Group>\r\n                                    <Form.Group >\r\n                                        <Form.Label>Category ID</Form.Label>\r\n                                        <Form.Control type=\"text\" name=\"categoryId\" ref={register({ required: false })} />\r\n                                    </Form.Group>\r\n                                </Col>\r\n                            </Row>\r\n                        </Modal.Body>\r\n                        <Modal.Footer>\r\n                            <Button variant=\"success\" type=\"submit\">Create</Button>\r\n                            <Button variant=\"secondary\" onClick={handleCloseModalNew}>Close</Button>\r\n                        </Modal.Footer>\r\n                    </Form>\r\n                </Modal>\r\n            </AppContext.Provider>\r\n        </div>\r\n    );\r\n}\r\n","V:\\workspace_js\\wnc-final-project-online-academy-fe\\src\\components\\admin\\courseContext.js",[],"V:\\workspace_js\\wnc-final-project-online-academy-fe\\src\\components\\admin\\courseReducer.js",[],"V:\\workspace_js\\wnc-final-project-online-academy-fe\\src\\views\\accountInfo.js",["346","347","348"],"import React from 'react';\r\nimport { Link, Redirect, useHistory } from 'react-router-dom';\r\nimport { axiosInstance } from '../utils';\r\n\r\nexport default function Accountinfo(props) {\r\n    const history = useHistory();\r\n    const btnSignOut_Clicked = function() {\r\n        delete localStorage.account_accessToken;\r\n        delete localStorage.account_userID;\r\n        delete localStorage.account_expToken;\r\n        delete localStorage.account_refreshToken;\r\n        delete localStorage.account_email;\r\n        history.push('/home');\r\n        \r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <span>Email: {localStorage.account_email}</span>\r\n            {/* <button onClick={btnSignOut_Clicked}><Link to=\"/home\" replace >Sign Out</Link></button> */}\r\n            <button onClick={btnSignOut_Clicked}>Sign Out</button>\r\n        </div>\r\n    )\r\n}\r\n","V:\\workspace_js\\wnc-final-project-online-academy-fe\\src\\views\\onlineAcademySignIn.js",["349","350"],"import React, { useEffect, useReducer } from 'react'\r\nimport Header from \"../components/Header\";\r\nimport HomeContent from \"../components/HomeContent\";\r\nimport HomeFooter from \"../components/HomeFooter\";\r\nimport Accountinfo from './accountInfo';\r\nfunction onlineAcademy() {\r\n    return (\r\n        <div>\r\n            <Header />\r\n            <Accountinfo />\r\n            {/* <HeaderPopup />\r\n            <HeaderPrimary /> */}\r\n            <HomeContent />\r\n            {/*    \r\n            <AdImage />\r\n            <Feature1 />\r\n            <Recommendations />\r\n            <Feature2 />\r\n            <FillerDiv />\r\n            <TopCategories />\r\n            <BecomeInstructor />\r\n            <TrustedCompanies />\r\n            <UdemyForBusiness />\r\n            <VideoAdDiv /> */}\r\n            <HomeFooter />\r\n            {/* <Footer /> */}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default onlineAcademy;","V:\\workspace_js\\wnc-final-project-online-academy-fe\\src\\components\\homeContent\\searchCourse.js",[],"V:\\workspace_js\\wnc-final-project-online-academy-fe\\src\\components\\homeContent\\ListCourses.js",["351","352","353"],"import React, { useContext, useEffect } from \"react\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Container, Card, Row, Col } from 'react-bootstrap';\r\nimport academyApppContext from '../../onlineAcademyAppContext';\r\nimport Course from './Course';\r\nimport { axiosInstance } from '../../utils';\r\n\r\nfunction ListCourses({ currentPosts }) { \r\n\r\n  const { store } = useContext(academyApppContext);\r\n\r\n  return (\r\n    <div>\r\n      <Container>\r\n        <Row>\r\n          {currentPosts.filter(course => course.title.toLowerCase().includes(store.query.toLowerCase()) || course.categoryId.toString().toLowerCase().includes(store.query.toLowerCase())).map(course =>\r\n          <Col md={3} key={course.id}>\r\n            <Course course={course}/>\r\n          </Col>\r\n          )}\r\n          {/* {currentPosts.map(course =>\r\n          <Col md={3} key={course.id}>\r\n            <Course course={course}/>\r\n          </Col>\r\n          )} */}\r\n\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ListCourses;\r\n","V:\\workspace_js\\wnc-final-project-online-academy-fe\\src\\components\\homeContent\\ListCategories.js",["354","355","356","357"],"import React, { useContext, useEffect } from 'react'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Container, Tabs, Tab, Row, Col, Spinner } from 'react-bootstrap';\r\nimport academyApppContext from '../../onlineAcademyAppContext';\r\nimport { axiosInstance } from '../../utils';\r\nimport ListCourses from \"./ListCourses\";\r\n\r\nexport default function Listcategories(props) {\r\n    \r\n    const { store, dispatch } = useContext(academyApppContext);\r\n\r\n    useEffect(function() {\r\n        async function initCoursesList() {\r\n          const res = await axiosInstance.get('/courses');\r\n          if(res.status === 200){\r\n            dispatch({\r\n              type: 'initCoursesList',\r\n              payload: {\r\n                courses: res.data,\r\n                query: ''\r\n              }\r\n            });\r\n          }\r\n        }\r\n        initCoursesList();\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <Container>\r\n                {/* <Row>\r\n                    <Tabs> */}\r\n                {store.categories.map(category =>\r\n                        // <Tab eventKey={}></Tab>\r\n                <Row key={category.id} className=\"my-4\">\r\n                    <Col xs=\"1\"><h4>{category.title.toUpperCase()}</h4></Col>\r\n                    <Col><ListCourses category={category} /></Col>\r\n                </Row>\r\n                )}\r\n                    {/* </Tabs>\r\n                </Row> */}\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n","V:\\workspace_js\\wnc-final-project-online-academy-fe\\src\\components\\homeContent\\CustomPagination.js",[],"V:\\workspace_js\\wnc-final-project-online-academy-fe\\src\\components\\homeContent\\Course.js",["358","359","360","361"],"import React, { useContext, useEffect } from \"react\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Card, Row, Col } from 'react-bootstrap';\r\nimport academyApppContext from '../../onlineAcademyAppContext';\r\nimport { axiosInstance } from '../../utils';\r\n\r\nexport default function Course({ course }) {\r\n    \r\n    const { store, dispatch } = useContext(academyApppContext);\r\n  \r\n    useEffect(function() {\r\n      async function getCategory() {\r\n        const res = await axiosInstance.get(`/categories/${course.categoryId}`);\r\n        if(res.status === 200){\r\n          dispatch({\r\n            type: 'getCategory',\r\n            payload: {\r\n              id: course.id,\r\n              category: res.data.title\r\n            }\r\n          });\r\n        }\r\n      }\r\n      getCategory();\r\n    }, []);\r\n\r\n    return (\r\n        <Card>\r\n          <Card.Body>\r\n            <Card.Title as=\"h4\" className=\"my-2\"><center>{course.title}</center></Card.Title>\r\n            <hr></hr>\r\n            <Card.Text>Category: {course.categoryId}</Card.Text>\r\n            <Card.Text>Teacher: {course.teacherId}</Card.Text>\r\n            <Card.Text>Review Point: {course.reviewPoint}</Card.Text>\r\n            <Card.Text>Reviews: {course.reviews}</Card.Text>\r\n            <Card.Text>{course.thumbnail}</Card.Text>\r\n            <Card.Text>Price: {course.price}</Card.Text>\r\n            <Card.Text>{course.descriptionShort}</Card.Text>\r\n          </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n","V:\\workspace_js\\wnc-final-project-online-academy-fe\\src\\components\\admin\\views\\widgets\\WidgetsDropdown.js",["362"],"V:\\workspace_js\\wnc-final-project-online-academy-fe\\src\\components\\admin\\store.js",[],"V:\\workspace_js\\wnc-final-project-online-academy-fe\\src\\components\\admin\\serviceWorker.js",[],"V:\\workspace_js\\wnc-final-project-online-academy-fe\\src\\components\\admin\\polyfill.js",[],{"ruleId":"363","replacedBy":"364"},{"ruleId":"365","replacedBy":"366"},{"ruleId":"367","severity":1,"message":"368","line":2,"column":10,"nodeType":"369","messageId":"370","endLine":2,"endColumn":20},{"ruleId":"367","severity":1,"message":"371","line":2,"column":29,"nodeType":"369","messageId":"370","endLine":2,"endColumn":35},{"ruleId":"367","severity":1,"message":"372","line":4,"column":8,"nodeType":"369","messageId":"370","endLine":4,"endColumn":21},{"ruleId":"367","severity":1,"message":"373","line":1,"column":17,"nodeType":"369","messageId":"370","endLine":1,"endColumn":26},{"ruleId":"367","severity":1,"message":"374","line":1,"column":28,"nodeType":"369","messageId":"370","endLine":1,"endColumn":38},{"ruleId":"367","severity":1,"message":"375","line":5,"column":10,"nodeType":"369","messageId":"370","endLine":5,"endColumn":14},{"ruleId":"367","severity":1,"message":"376","line":6,"column":51,"nodeType":"369","messageId":"370","endLine":6,"endColumn":65},{"ruleId":"367","severity":1,"message":"377","line":6,"column":67,"nodeType":"369","messageId":"370","endLine":6,"endColumn":75},{"ruleId":"367","severity":1,"message":"378","line":9,"column":34,"nodeType":"369","messageId":"370","endLine":9,"endColumn":39},{"ruleId":"367","severity":1,"message":"379","line":9,"column":41,"nodeType":"369","messageId":"370","endLine":9,"endColumn":47},{"ruleId":"367","severity":1,"message":"380","line":12,"column":16,"nodeType":"369","messageId":"370","endLine":12,"endColumn":23},{"ruleId":"367","severity":1,"message":"375","line":5,"column":10,"nodeType":"369","messageId":"370","endLine":5,"endColumn":14},{"ruleId":"367","severity":1,"message":"378","line":18,"column":37,"nodeType":"369","messageId":"370","endLine":18,"endColumn":42},{"ruleId":"367","severity":1,"message":"379","line":18,"column":44,"nodeType":"369","messageId":"370","endLine":18,"endColumn":50},{"ruleId":"367","severity":1,"message":"381","line":21,"column":13,"nodeType":"369","messageId":"370","endLine":21,"endColumn":17},{"ruleId":"367","severity":1,"message":"382","line":23,"column":12,"nodeType":"369","messageId":"370","endLine":23,"endColumn":19},{"ruleId":"383","severity":1,"message":"384","line":153,"column":29,"nodeType":"385","endLine":153,"endColumn":81},{"ruleId":"386","severity":1,"message":"387","line":153,"column":29,"nodeType":"385","endLine":153,"endColumn":81},{"ruleId":"367","severity":1,"message":"388","line":11,"column":8,"nodeType":"369","messageId":"370","endLine":11,"endColumn":18},{"ruleId":"367","severity":1,"message":"389","line":7,"column":3,"nodeType":"369","messageId":"370","endLine":7,"endColumn":9},{"ruleId":"367","severity":1,"message":"390","line":10,"column":9,"nodeType":"369","messageId":"370","endLine":10,"endColumn":27},{"ruleId":"367","severity":1,"message":"391","line":4,"column":25,"nodeType":"369","messageId":"370","endLine":4,"endColumn":37},{"ruleId":"367","severity":1,"message":"392","line":5,"column":16,"nodeType":"369","messageId":"370","endLine":5,"endColumn":19},{"ruleId":"367","severity":1,"message":"393","line":5,"column":21,"nodeType":"369","messageId":"370","endLine":5,"endColumn":24},{"ruleId":"363","replacedBy":"394"},{"ruleId":"365","replacedBy":"395"},{"ruleId":"367","severity":1,"message":"396","line":12,"column":3,"nodeType":"369","messageId":"370","endLine":12,"endColumn":8},{"ruleId":"367","severity":1,"message":"397","line":3,"column":2,"nodeType":"369","messageId":"370","endLine":3,"endColumn":8},{"ruleId":"367","severity":1,"message":"398","line":5,"column":2,"nodeType":"369","messageId":"370","endLine":5,"endColumn":15},{"ruleId":"367","severity":1,"message":"399","line":6,"column":2,"nodeType":"369","messageId":"370","endLine":6,"endColumn":15},{"ruleId":"367","severity":1,"message":"400","line":8,"column":2,"nodeType":"369","messageId":"370","endLine":8,"endColumn":6},{"ruleId":"367","severity":1,"message":"401","line":10,"column":8,"nodeType":"369","messageId":"370","endLine":10,"endColumn":13},{"ruleId":"367","severity":1,"message":"375","line":6,"column":2,"nodeType":"369","messageId":"370","endLine":6,"endColumn":6},{"ruleId":"402","severity":1,"message":"403","line":2,"column":5,"nodeType":"404","messageId":"405","endLine":29,"endColumn":7},{"ruleId":"367","severity":1,"message":"406","line":1,"column":17,"nodeType":"369","messageId":"370","endLine":1,"endColumn":21},{"ruleId":"367","severity":1,"message":"407","line":2,"column":25,"nodeType":"369","messageId":"370","endLine":2,"endColumn":33},{"ruleId":"367","severity":1,"message":"408","line":4,"column":31,"nodeType":"369","messageId":"370","endLine":4,"endColumn":40},{"ruleId":"367","severity":1,"message":"409","line":4,"column":52,"nodeType":"369","messageId":"370","endLine":4,"endColumn":69},{"ruleId":"367","severity":1,"message":"410","line":26,"column":10,"nodeType":"369","messageId":"370","endLine":26,"endColumn":15},{"ruleId":"367","severity":1,"message":"378","line":32,"column":34,"nodeType":"369","messageId":"370","endLine":32,"endColumn":39},{"ruleId":"367","severity":1,"message":"379","line":32,"column":41,"nodeType":"369","messageId":"370","endLine":32,"endColumn":47},{"ruleId":"367","severity":1,"message":"411","line":38,"column":8,"nodeType":"369","messageId":"370","endLine":38,"endColumn":35},{"ruleId":"367","severity":1,"message":"412","line":40,"column":8,"nodeType":"369","messageId":"370","endLine":40,"endColumn":33},{"ruleId":"367","severity":1,"message":"397","line":3,"column":2,"nodeType":"369","messageId":"370","endLine":3,"endColumn":8},{"ruleId":"367","severity":1,"message":"413","line":4,"column":2,"nodeType":"369","messageId":"370","endLine":4,"endColumn":9},{"ruleId":"367","severity":1,"message":"414","line":5,"column":2,"nodeType":"369","messageId":"370","endLine":5,"endColumn":14},{"ruleId":"367","severity":1,"message":"415","line":6,"column":2,"nodeType":"369","messageId":"370","endLine":6,"endColumn":7},{"ruleId":"367","severity":1,"message":"416","line":7,"column":2,"nodeType":"369","messageId":"370","endLine":7,"endColumn":11},{"ruleId":"367","severity":1,"message":"417","line":8,"column":2,"nodeType":"369","messageId":"370","endLine":8,"endColumn":13},{"ruleId":"367","severity":1,"message":"418","line":9,"column":2,"nodeType":"369","messageId":"370","endLine":9,"endColumn":13},{"ruleId":"367","severity":1,"message":"419","line":10,"column":2,"nodeType":"369","messageId":"370","endLine":10,"endColumn":6},{"ruleId":"367","severity":1,"message":"420","line":11,"column":2,"nodeType":"369","messageId":"370","endLine":11,"endColumn":11},{"ruleId":"367","severity":1,"message":"421","line":12,"column":2,"nodeType":"369","messageId":"370","endLine":12,"endColumn":6},{"ruleId":"367","severity":1,"message":"422","line":13,"column":2,"nodeType":"369","messageId":"370","endLine":13,"endColumn":10},{"ruleId":"367","severity":1,"message":"401","line":15,"column":8,"nodeType":"369","messageId":"370","endLine":15,"endColumn":13},{"ruleId":"367","severity":1,"message":"423","line":17,"column":8,"nodeType":"369","messageId":"370","endLine":17,"endColumn":24},{"ruleId":"367","severity":1,"message":"406","line":1,"column":17,"nodeType":"369","messageId":"370","endLine":1,"endColumn":21},{"ruleId":"367","severity":1,"message":"407","line":2,"column":25,"nodeType":"369","messageId":"370","endLine":2,"endColumn":33},{"ruleId":"367","severity":1,"message":"408","line":4,"column":31,"nodeType":"369","messageId":"370","endLine":4,"endColumn":40},{"ruleId":"367","severity":1,"message":"378","line":31,"column":34,"nodeType":"369","messageId":"370","endLine":31,"endColumn":39},{"ruleId":"367","severity":1,"message":"379","line":31,"column":41,"nodeType":"369","messageId":"370","endLine":31,"endColumn":47},{"ruleId":"367","severity":1,"message":"411","line":37,"column":8,"nodeType":"369","messageId":"370","endLine":37,"endColumn":35},{"ruleId":"367","severity":1,"message":"412","line":39,"column":8,"nodeType":"369","messageId":"370","endLine":39,"endColumn":33},{"ruleId":"367","severity":1,"message":"406","line":1,"column":17,"nodeType":"369","messageId":"370","endLine":1,"endColumn":21},{"ruleId":"367","severity":1,"message":"407","line":2,"column":25,"nodeType":"369","messageId":"370","endLine":2,"endColumn":33},{"ruleId":"367","severity":1,"message":"408","line":4,"column":31,"nodeType":"369","messageId":"370","endLine":4,"endColumn":40},{"ruleId":"367","severity":1,"message":"378","line":32,"column":37,"nodeType":"369","messageId":"370","endLine":32,"endColumn":42},{"ruleId":"367","severity":1,"message":"379","line":32,"column":44,"nodeType":"369","messageId":"370","endLine":32,"endColumn":50},{"ruleId":"367","severity":1,"message":"411","line":38,"column":11,"nodeType":"369","messageId":"370","endLine":38,"endColumn":38},{"ruleId":"367","severity":1,"message":"412","line":40,"column":11,"nodeType":"369","messageId":"370","endLine":40,"endColumn":36},{"ruleId":"367","severity":1,"message":"424","line":161,"column":11,"nodeType":"369","messageId":"370","endLine":161,"endColumn":20},{"ruleId":"367","severity":1,"message":"375","line":2,"column":10,"nodeType":"369","messageId":"370","endLine":2,"endColumn":14},{"ruleId":"367","severity":1,"message":"425","line":2,"column":16,"nodeType":"369","messageId":"370","endLine":2,"endColumn":24},{"ruleId":"367","severity":1,"message":"426","line":3,"column":10,"nodeType":"369","messageId":"370","endLine":3,"endColumn":23},{"ruleId":"367","severity":1,"message":"373","line":1,"column":17,"nodeType":"369","messageId":"370","endLine":1,"endColumn":26},{"ruleId":"367","severity":1,"message":"374","line":1,"column":28,"nodeType":"369","messageId":"370","endLine":1,"endColumn":38},{"ruleId":"367","severity":1,"message":"373","line":1,"column":29,"nodeType":"369","messageId":"370","endLine":1,"endColumn":38},{"ruleId":"367","severity":1,"message":"427","line":3,"column":21,"nodeType":"369","messageId":"370","endLine":3,"endColumn":25},{"ruleId":"367","severity":1,"message":"426","line":6,"column":10,"nodeType":"369","messageId":"370","endLine":6,"endColumn":23},{"ruleId":"367","severity":1,"message":"428","line":3,"column":21,"nodeType":"369","messageId":"370","endLine":3,"endColumn":25},{"ruleId":"367","severity":1,"message":"429","line":3,"column":27,"nodeType":"369","messageId":"370","endLine":3,"endColumn":30},{"ruleId":"367","severity":1,"message":"430","line":3,"column":42,"nodeType":"369","messageId":"370","endLine":3,"endColumn":49},{"ruleId":"431","severity":1,"message":"432","line":26,"column":8,"nodeType":"433","endLine":26,"endColumn":10,"suggestions":"434"},{"ruleId":"367","severity":1,"message":"392","line":3,"column":16,"nodeType":"369","messageId":"370","endLine":3,"endColumn":19},{"ruleId":"367","severity":1,"message":"393","line":3,"column":21,"nodeType":"369","messageId":"370","endLine":3,"endColumn":24},{"ruleId":"367","severity":1,"message":"435","line":9,"column":13,"nodeType":"369","messageId":"370","endLine":9,"endColumn":18},{"ruleId":"431","severity":1,"message":"436","line":25,"column":8,"nodeType":"433","endLine":25,"endColumn":10,"suggestions":"437"},{"ruleId":"367","severity":1,"message":"407","line":7,"column":25,"nodeType":"369","messageId":"370","endLine":7,"endColumn":33},"no-native-reassign",["438"],"no-negated-in-lhs",["439"],"no-unused-vars","'HashRouter' is defined but never used.","Identifier","unusedVar","'Router' is defined but never used.","'onlineAcademy' is defined but never used.","'useEffect' is defined but never used.","'useReducer' is defined but never used.","'Link' is defined but never used.","'DropdownButton' is defined but never used.","'Dropdown' is defined but never used.","'watch' is assigned a value but never used.","'errors' is assigned a value but never used.","'toAdmin' is assigned a value but never used.","'from' is assigned a value but never used.","'account' is assigned a value but never used.","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'VideoAdDiv' is defined but never used.","'Button' is defined but never used.","'btnLoginIn_Clicked' is assigned a value but never used.","'refreshToken' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.",["438"],["439"],"'CLink' is defined but never used.","'CBadge' is defined but never used.","'CDropdownItem' is defined but never used.","'CDropdownMenu' is defined but never used.","'CImg' is defined but never used.","'CIcon' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'lazy' is defined but never used.","'parseJwt' is defined but never used.","'FormCheck' is defined but never used.","'ToggleButtonGroup' is defined but never used.","'Label' is defined but never used.","'handleDisableChangePassword' is assigned a value but never used.","'handleDisableChangeStatus' is assigned a value but never used.","'CButton' is defined but never used.","'CButtonGroup' is defined but never used.","'CCard' is defined but never used.","'CCardBody' is defined but never used.","'CCardFooter' is defined but never used.","'CCardHeader' is defined but never used.","'CCol' is defined but never used.","'CProgress' is defined but never used.","'CRow' is defined but never used.","'CCallout' is defined but never used.","'MainChartExample' is defined but never used.","'handleNew' is assigned a value but never used.","'Redirect' is defined but never used.","'axiosInstance' is defined but never used.","'Card' is defined but never used.","'Tabs' is defined but never used.","'Tab' is defined but never used.","'Spinner' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["440"],"'store' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'course.categoryId', 'course.id', and 'dispatch'. Either include them or remove the dependency array.",["441"],"no-global-assign","no-unsafe-negation",{"desc":"442","fix":"443"},{"desc":"444","fix":"445"},"Update the dependencies array to be: [dispatch]",{"range":"446","text":"447"},"Update the dependencies array to be: [course.categoryId, course.id, dispatch]",{"range":"448","text":"449"},[868,870],"[dispatch]",[798,800],"[course.categoryId, course.id, dispatch]"]